(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    244448,       4824]
NotebookOptionsPosition[    236278,       4690]
NotebookOutlinePosition[    236621,       4705]
CellTagsIndexPosition[    236578,       4702]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Exerc\[IAcute]cio", " ", "1"}], "*)"}]], "Input",
 CellChangeTimes->{{3.876895414741766*^9, 3.8768954195247326`*^9}},
 CellLabel->"In[3]:=",ExpressionUUID->"c3cb4a6f-42f8-4071-bd66-9c3571eeefb9"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"f", "[", "a_", "]"}], "[", "x_", "]"}], ":=", 
    RowBox[{"a", " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Pi]", " ", "x"}], "]"}]}]}], ";"}], " "}]], "Input",
 CellChangeTimes->{{3.8768956713337426`*^9, 3.87689571622274*^9}, {
  3.876896763536663*^9, 3.8768967702288895`*^9}, {3.876896803523915*^9, 
  3.876896846153004*^9}, {3.8768970359022727`*^9, 3.876897040050762*^9}, {
  3.87689722669256*^9, 3.8768972823246717`*^9}, {3.876897415341154*^9, 
  3.8768974163313513`*^9}, {3.8775514897888737`*^9, 
  3.8775514899453325`*^9}},ExpressionUUID->"d3579f51-5e71-4d0a-8ebd-\
750dcf51c2db"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "2"}], "]"}], "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.876898020573984*^9, 3.8768980276992683`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"0b75a09c-784d-450b-af2f-7d72086ebb86"],

Cell[BoxData[
 RowBox[{"a", " ", 
  RowBox[{"Sin", "[", 
   RowBox[{"a", " ", "\[Pi]", " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", " ", "x"}], "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.876898028152622*^9, 3.8774259114691815`*^9, 
  3.8774418152550297`*^9, 3.8774457395855923`*^9, 3.877513466938945*^9},
 CellLabel->"Out[5]=",ExpressionUUID->"3602493f-4054-42a6-92e7-c6e928d1e4ff"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"g", "[", "a_", "]"}], "[", "x_", "]"}], ":=", 
  RowBox[{
   RowBox[{"NestList", "[", 
    RowBox[{
     RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "2"}], "]"}], "[", 
   RowBox[{"[", "3", "]"}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "defino", " ", "uma", " ", "fun\[CCedilla]\[ATilde]o", " ", "auxiliar", 
     " ", "g"}], " ", "=", " ", 
    RowBox[{"f", 
     RowBox[{"(", 
      RowBox[{"f", 
       RowBox[{"(", "x", ")"}]}], ")"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.87689799477934*^9, 3.8768980153397284`*^9}, {
  3.876898045843399*^9, 3.8768980605180993`*^9}},
 CellLabel->"In[6]:=",ExpressionUUID->"6d080ace-bb85-4d09-8169-8bd932e06b79"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"optam", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", " ", 
      RowBox[{"{", "\"\<Large\>\"", "}"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{
      RowBox[{"f", "[", "0.75", "]"}], "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"g", "[", "0.75", "]"}], "[", "x", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Evaluate", "[", "optam", "]"}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Blue", ",", " ", "Orange", ",", " ", "Green"}], "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<x\>\"", ",", "\"\<f(x)\>\"", ",", "\"\<f(f(x))\>\""}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8768980839484243`*^9, 3.8768981867077503`*^9}},
 CellLabel->"In[7]:=",ExpressionUUID->"2deb90ee-8db1-41a0-b308-426757dd6ad2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDneHk8nRCWk/InXR1WrdJ
nua6nZTnh5R2jGyuMnHsdDnPo1GzMUtj83RndnRZ9cL39+JzH0r8XWqiHg6H
C/7n/wGJypGu+fAz2xN8LFJkmLv39kcrS8paMV84cED8vhwLgyMStB3PsQR4
yuWpTwGWDlftvZydizFgumHroWcYG74SWc1dWa2DjXT0KD8rLmwXsqTsyePB
GYOe3iVrH2FzHkmKx3fCbXKf/qFT3XA3rdwyUi2ENQdPGzfe/gLrbXBMLO36
YA9dXFtoUz/cz3Af7HUYgq2LVBsNS8OwSiuTjruOwnUL7X3EQhFMJL9ZVijG
4Pwb/KQq22/w+lmOIjlLDKe7CXn7eiZgWZMwb4TyHf5NGyu1f/ADdjxnsJXU
LoH9aijXW8ylcAY51mYmSgY7qcONxMHTsJnxiqFwE03oLOUeKJuBb7q3T+4M
lMOci/FVn9fRGpWFyVzxLMwP9dNn+yrgLH9mJW8OTZkKmKhl/oRPHmewMbc5
OMpqaAMvQmv6CuQp9F9wCSEmnWqrhM2k/Bo9IXrHI3qYZ+o8jGuI4cpNF+C0
V9wC0250h2OOIemOCiYFpDk9IaphifOwKFOAbq7wtlXELMLRXA8SeQv9mFlN
l7xbghuV5FJi0DKcU86Mk15CJ1AX7ZpC0PsFgubgCHQu62pvfjw62ePl6q5M
tA1jj79BPXrrxMPd4rfoycXZ0XoOuiiiNfpCC1rnQL3HFKAlI6wKfRH6Q7b2
mmgczfaKta+dQAe+PsI7L0V/uj/wlT6PLnY+xgpRo1PlZWGUZfThoFuyrjU0
AT9WV6RFT/O9aHGbaAGt1sX1D/qFtZFGp0P/BaO4ekM=
          "]]}, Annotation[#, "Charting`Private`Tag$2683#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0.5, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$2683#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 1, 0]], 
         LineBox[CompressedData["
1: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
SlyQS6t+yc8AvVbvhjex8snPV5ctYpD9tmr5S+KE/ojZz4UY2HV9ndc74rWe
7uHCSxjIkh9N/EQcvPaWiq8IA/+epqiUEQvmGtUKiJK4huusbyd2O3Hguqc4
Oc/BT7bDxGO/5ebMW0nuS4crK0jia+mxJNJtNQPr9zXvlyfukprYOUuK+Ll9
rjZxjWHljSlpBm5ZuHZ4E2v9Tp/rKEvGM6fGLZU41z086p88A8Zqnr4txO+z
LX/+USTPce2f71tJvqw0PGVpvY0BuViHmfPEAb8wv1+JgXfPxYICiJ3XLN7b
s4vEIUa1b5J4OGus/speBizsAuJ3kHy9dpxl1a3KwNLhl7RbxCeepL1lqDMw
EKyx6zfxpr4TAo16DPwZzImfQ+on01A338uAgcZne+cbEat/UbNRPc5AWuf+
bR+Jz/gqtr4zIuOSW/z7HKlHzy0L4m0vMhB7evUMm9SrSMiMqexlBkyblxXq
k/qO4h1Z0mbBwGV7hkEOceYP1j11S/LcD/+reUXmA7Zt7qElDmS8kuKGjmT+
uN2eOl3syIDji1DLceIpzdhUB2cGoruajznxMSEiGiTBdCXzQtc5ew8yH6ln
WfUk+TJgsllYtpDMX1FTa730ohmw0kzqyCbz46bL4qq87xnwEI+1vLyIiYwq
oaH0WFKX2hOFIoJMVEVOnl6ZxECJiWiGgxC53oEGud4sBoSut3w1X8LEmSee
5R7VDIR3hPLmi5H7/e1yf+8PBnynMqODxJmwPnVn68BPBs4qbp5jLcGEh+zF
kFMtJF/eS01uXsnE54q9V2W6SR0XCKWXSZL1QGhgfhF5Tmtv6dU/2MDEjy9e
7jokrh/f2ny4LUvm6xvSc6tJHKP2sBouyzGxpOLM7BYybq/cWPWTG4kfF0/1
k/vedkhE/6giE8ITr4ZWkHXoy7sf2RkqTCykNNtsDhM7rRNWI+tj5QvGmTE9
JhRuLdR0Jt97azg2Oxsw8SHY/FuuLhMCb5IbPMm6qi1RF7Jfnwl+kxW1kWRd
3tRjF3rRkIn5dQPF38m6bsYSNl5OvufLD01aF8ZE/7ZYphxZ/1v2amjTI5jg
bi72rbJnIim7j/HqNRMbDAJq7Mj+4cznfUuWkH3Hct1NgpVOTKR8pNvypJJ9
wGxrw5euZH0IW7e7vZSJT+d/S354RvLDIb4o6A8T7zIHuHFJTPiOHjc5NsLE
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
8FJS4O/MTD/+JqRH/P//Tf8BrxZfng==
          "]]}, Annotation[#, "Charting`Private`Tag$2683#3"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, LabelStyle -> {"Large"}, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 1}, {0., 0.9999999795918367}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"x\"", "\"f(x)\"", "\"f(f(x))\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         "Large", FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "\"Large\"", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8768981881679773`*^9, 3.8774259119508085`*^9, 
  3.8774418155362115`*^9, 3.8774457398980207`*^9, 3.8775134682223277`*^9},
 CellLabel->"Out[8]=",ExpressionUUID->"9de6c22b-abdb-41c1-a4c1-a13feb40e9d7"]
}, Open  ]],

Cell["\<\
Observando o gr\[AAcute]fico anterior, podemos identificar claramente a \
presen\[CCedilla]a de um ponto fixo em x = 0 (trivial) e outro ponto fixo em \
(aproximadamente) x = 0.65. Obtenho esse ponto fixo de maneira exata com base \
em uma solu\[CCedilla]\[ATilde]o num\[EAcute]rica da \
equa\[CCedilla]\[ATilde]o f(x) = x.\
\>", "Text",
 CellChangeTimes->{{3.8768982623166485`*^9, 3.8768983295879726`*^9}, {
  3.876898485480168*^9, 3.8768985496047044`*^9}, {3.8768994123373013`*^9, 
  3.876899489086621*^9}, {3.876899531252777*^9, 3.8768995503458624`*^9}, {
  3.8768996245638723`*^9, 3.8768996469551306`*^9}, {3.877551209393716*^9, 
  3.877551251848926*^9}},ExpressionUUID->"a2a0b916-d81d-4358-9b48-\
2ec99a0fe7fb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol1", "=", 
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      RowBox[{"f", "[", "0.75", "]"}], "[", "x", "]"}]}], ",", "x", ",", " ", 
    "PositiveReals"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.876898551067132*^9, 3.8768985694522448`*^9}, {
  3.876898759881598*^9, 3.8768987775639277`*^9}, {3.876899317428465*^9, 
  3.8768993175999203`*^9}, {3.8768993832853017`*^9, 3.876899405954862*^9}, {
  3.876899436872557*^9, 3.8768994370199127`*^9}, {3.8768994944220877`*^9, 
  3.876899525471715*^9}, {3.876899571451684*^9, 3.876899611898288*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"dc74290e-8ed8-4943-975d-bc972d41f041"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "0.658700076043755`"}], "}"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8768988079651165`*^9, 3.876899317987423*^9, {3.876899389074407*^9, 
   3.876899406357916*^9}, 3.8768994375787535`*^9, {3.876899499928966*^9, 
   3.8768995273676343`*^9}, {3.87689957651855*^9, 3.876899581985957*^9}, 
   3.876899612335244*^9, 3.8774259121019745`*^9, 3.8774418156142845`*^9, 
   3.877445740022997*^9, 3.877513468866288*^9},
 CellLabel->"Out[9]=",ExpressionUUID->"bb5b7c2b-69ad-45e5-a28e-b5702f4f7cfb"]
}, Open  ]],

Cell[TextData[{
 "Resultado perfeitamente consistente com a estimativa feita.\n\nAinda de \
acordo com o gr\[AAcute]fico constru\[IAcute]do, \[EAcute] poss\[IAcute]vel \
identificar outros dois pontos espec\[IAcute]ficos para os quais as curvas \
azul e verde se intersectam, ou seja, pontos nos quais x = f(f(x)). Pontos \
com essa caracter\[IAcute]stica representam um ciclo 2 ao longo do processo \
de itera\[CCedilla]\[ATilde]o de f. Tento ",
 StyleBox["obt\[EHat]",
  IgnoreSpellCheck->True],
 "-los partindo de uma solu\[CCedilla]\[ATilde]o num\[EAcute]rica da equa\
\[CCedilla]\[ATilde]o x = f(f(x))"
}], "Text",
 CellChangeTimes->{
  3.87689806434927*^9, {3.8768990256537085`*^9, 3.8768990431761737`*^9}, {
   3.8768990940772796`*^9, 3.876899099826909*^9}, {3.8768995544179974`*^9, 
   3.8768995680441895`*^9}, {3.8768996520422463`*^9, 
   3.8768997396092033`*^9}, {3.87755126083803*^9, 
   3.877551286317195*^9}},ExpressionUUID->"bf764c7b-9054-40b9-b43b-\
00ce545dc53f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"sol2", "=", 
  RowBox[{"NSolve", "[", 
   RowBox[{
    RowBox[{"x", "\[Equal]", 
     RowBox[{
      RowBox[{"g", "[", "0.75", "]"}], "[", "x", "]"}]}], ",", "x", ",", 
    "PositiveReals"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.876899043914877*^9, 3.876899090154277*^9}, {
  3.8768997426806364`*^9, 3.876899790497532*^9}},
 CellLabel->"In[10]:=",ExpressionUUID->"5991ad06-4562-45fe-914c-767763ccc5dd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.5401765790106285`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.6587000760437549`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "0.7440337660428007`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8768990737122135`*^9, 3.876899090668397*^9}, {
   3.8768997674398828`*^9, 3.876899792834235*^9}, 3.8774259121486664`*^9, 
   3.87744181569239*^9, 3.877445740069854*^9, 3.8775134689483523`*^9},
 CellLabel->"Out[10]=",ExpressionUUID->"e7186c9f-bf21-4298-b372-d6f5ea00d5e8"]
}, Open  ]],

Cell["\<\
Com exce\[CCedilla]\[ATilde]o do ponto x = 0.6587 (o qual j\[AAcute] sabemos \
que \[EAcute] um ponto fixo de f(x) ), obtivemos duas novas solu\[CCedilla]\
\[OTilde]es: x = 0.540177 e x = 0.744034. Essas duas \
solu\[CCedilla]\[OTilde]es representam um ciclo 2 e est\[ATilde]o \
completamente consistentes com as coordenadas obtidas anteriormente.
\
\>", "Text",
 CellChangeTimes->{{3.876899797224057*^9, 3.8768998753881693`*^9}, {
  3.877551505061054*^9, 
  3.8775515204482174`*^9}},ExpressionUUID->"35c88f2d-fb68-4073-a9e6-\
64a30e025b0a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Exerc\[IAcute]cio", " ", "2"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8768954236335077`*^9, 3.876895430329529*^9}},
 CellLabel->"In[11]:=",ExpressionUUID->"92dfa79a-6005-4704-a02d-9c927c2e9222"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Come\[CCedilla]o", " ", "definindo", " ", "as", " ", 
    "fun\[CCedilla]\[OTilde]es", " ", "principais", " ", "associadas", " ", 
    "\[AGrave]", " ", "constru\[CCedilla]\[ATilde]o", " ", "do", " ", "mapa", 
    " ", "de", " ", "bifurca\[CCedilla]\[OTilde]es"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"1", ")"}], " ", "Fun\[CCedilla]\[ATilde]o", " ", "que", " ", 
     "produz", " ", "uma", " ", "lista", " ", "de", " ", "n", " ", 
     "itera\[CCedilla]\[OTilde]es", " ", "do", " ", "mapa"}], ",", " ", 
    RowBox[{
    "come\[CCedilla]ando", " ", "do", " ", "ponto", " ", "x0", " ", "e", " ", 
     "eliminando", " ", "os", " ", "primeiros", " ", "m", " ", 
     "elementos"}]}], "*)"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"itera", "[", 
      RowBox[{"\[Lambda]_", ",", "m_", ",", "n_"}], "]"}], ":=", 
     RowBox[{"Drop", "[", 
      RowBox[{
       RowBox[{"NestList", "[", 
        RowBox[{
         RowBox[{"f", "[", "\[Lambda]", "]"}], ",", "0.5", ",", "n"}], "]"}], 
       ",", 
       RowBox[{"m", "+", "1"}]}], "]"}]}], " ", ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"itera", ":=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"a", ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "_Integer"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"n", ",", "_Integer"}], "}"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Drop", "[", 
        RowBox[{
         RowBox[{"NestList", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"a", " ", "*", 
             RowBox[{"Sin", "[", 
              RowBox[{"\[Pi]", " ", "#"}], "]"}]}], "&"}], ",", "0.5", ",", 
           "n"}], "]"}], ",", 
         RowBox[{"m", "+", "1"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{" ", "2", ")"}], " ", "Fun\[CCedilla]\[ATilde]o", " ", "que", 
     " ", "produz", " ", "um", " ", "ponto", " ", "cuja", " ", "abcissa", " ",
      "\[EAcute]", " ", "definida", " ", "pelo", " ", "valor", " ", 
     RowBox[{"de", " ", "'"}], 
     RowBox[{"a", "'"}], " ", "e", " ", "cuja", " ", "ordenada", " ", 
     "indica", " ", "um", " ", "elemento", " ", "da", " ", "lista", " ", "de",
      " ", "valores", " ", "de", " ", "x"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ponto", "[", "x_", "]"}], ":=", 
     RowBox[{"Point", "[", 
      RowBox[{"{", 
       RowBox[{"a", ",", "x"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{" ", "3", ")"}], " ", "Fun\[CCedilla]\[ATilde]o", " ", "que", 
     " ", "varre", " ", "um", " ", "n\[UAcute]mero", " ", 
     SubscriptBox["n", "a"], " ", "de", " ", "valores", " ", "de", " ", "a", 
     " ", "entre", " ", 
     SubscriptBox["a", "min"], " ", "e", " ", 
     RowBox[{
      SubscriptBox["a", "max"], "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"graflambda", "[", 
      RowBox[{"amin_", ",", "amax_", ",", "na_", ",", "m_", ",", "n_"}], 
      "]"}], ":=", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.001", "]"}], ",", " ", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"Map", "[", 
           RowBox[{"ponto", ",", 
            RowBox[{"itera", "[", 
             RowBox[{"a", ",", "m", ",", "n"}], "]"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"a", ",", "amin", ",", "amax", ",", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"amax", "-", "amin"}], ")"}], "/", "na"}]}], "}"}]}], 
         "]"}]}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.876895409613355*^9, 3.876895411593797*^9}, {
  3.876895488549491*^9, 3.8768955093891025`*^9}, {3.876895815255683*^9, 
  3.87689584138873*^9}, {3.877425199042637*^9, 3.8774257103414974`*^9}, {
  3.8775513065435796`*^9, 
  3.877551308027607*^9}},ExpressionUUID->"229b060b-1539-4e36-b501-\
17e23a894eb8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Fa\[CCedilla]o", " ", "o", " ", "plot", " ", "do", " ", "gr\[AAcute]fico",
     " ", "de", " ", "bifurca\[CCedilla]\[OTilde]es"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"grafico1", " ", "=", 
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{"graflambda", "[", 
        RowBox[{"0", ",", "1", ",", "1000", ",", "1024", ",", "2048"}], "]"}],
        ",", 
       RowBox[{"Evaluate", "[", "optam", "]"}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<a\>\"", ",", 
          "\"\<\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\)\>\""}], "}"}]}], 
       ",", 
       RowBox[{"PlotRange", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}]}], ",", 
       RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{"\"\<BifurcacaoSeno1.png\>\"", ",", "grafico1"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "grafico1", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Import", "[", "\"\<BifurcacaoSeno1.png\>\"", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.87742571647526*^9, 3.8774257344340153`*^9}, {
   3.8774257926179137`*^9, 3.8774258208095856`*^9}, {3.877425874818036*^9, 
   3.8774258773089476`*^9}, 3.8774260028218126`*^9, {3.8774266175328817`*^9, 
   3.877426617592454*^9}, {3.8774275151053495`*^9, 3.877427537951544*^9}, {
   3.8774275842903423`*^9, 3.877427592904644*^9}, 3.877427845477475*^9, {
   3.877428402509364*^9, 3.8774284059835157`*^9}, {3.8774284370561714`*^9, 
   3.877428452625183*^9}},
 CellLabel->"In[15]:=",ExpressionUUID->"19063559-a0f7-4be3-9b7e-54b8e907bca2"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3UGu67yWnmEj6aSZKWQWaaaa6VaQAVSh7i6kcwNUBQjS9EA8DU/Dw/Aw
lP0fb2vLIrm0SFESqe99gHtxfpkitXSs9R3Z3t7/5Z//9z9+/YfL5fLv/+n7
//7xn/7vP/zbv/3T//sf//n7P/7n3//9f/3r3//2L//97//nb//6t3/7r//8
H783/sP32P/2/b+//jwAAAAAAAAAQFset6+vr9sjY4/n4367fr1db/fHc7Oj
AwAg5k96ZeXXzx6frnciDACwk+dvFHnz63m//uTVzz3X973YlQQDAOzlO7uu
k/snZ379xNdsdP49HAAABd73Xdfb4+cezJc98fh6b+cODACwre/MGj91kZNf
ybGvBwgwAMBuMvIrdfvFDRgAYHcZ+ZW+y0onGwAAmyC/AAA9Ir8AAD3a7P2v
yE85AwA6Vy191tvs84d2mbVOAvMwD/MwD/NUnOd7EuP3ofSbX1k//0V+MQ/z
MA/z9DXPd3KdNb+yvn+D/GIe5mEe5unI5Y/T5tfv9x/eFr//cJ/8OivOj43z
Y+P82Dg/ocvbOfIrflv1TrBPkQ8ltlUmACDhEkiNbKux5+bX4P39X22VCQCI
CcOrm/zajEiZANCvaHiRXyJlAkCnUuFFfomUCQA9MsKL/BIpEwC6Y4cX+SVS
JgD0ZTG8yC+RMgGgI57wIr9EygSAXjjDi/wSKRMAuuAPL/JLpEwAaF9WeJFf
ImUCQONyw4v8EikTAFpWEF7kl0iZANCssvAiv0TKBIA2FYcX+SVSJgA0aE14
kV8iZQJAa1aGF/klUiYANGW78BpkGrtImQDQjvXhZUeYSGMXKRMAGlErvMiv
r7ejDwQAJGydXzotXaRMAGhBxfBK5dcg09hFygSAw9UNL/JLpEwAOFb18CK/
RMoEgAO9sob8qkukTAA4SvXYIr9eRMoEgEOMQbNbeA0yjV2kTADY3yxodosw
kcYuUiYA7CyMGPKrLpEyAWBPqYghvyoSKRMAdmNEDPlVkUiZALAPO2LIr4pE
ygSAHSxGDPlVkUiZALA1T8SQXxWJlAkAm3JGDPlVkUiZALAdf8SUJRT5FSVS
JgBsJOsWKTe/siYfiTR2kTIBYAu5EUN+VSRSJgBUVxAx5FdFImUCQF1lEUN+
VSRSJgBUVBwx5FdFImUCQC1jdpBfxxIpEwCqmGYH+XUskTIBYL1ZdpBfxxIp
EwDW2z+/7F1SxynS2L/ejj4QAGhaVrLskF+p49Rp6SJlAsAaWclSMb+yJh+J
NHaRMgGgWCo7CiKmanyRXxJlAkAZIzsKIqYgocivFJEyAaBAcbKkIiZr39zJ
RyKNXaRMAMi1mB0FEVMjtX6WNo5cpLGLlAkAWZwh4hmWNW2W1MGLNHaRMgHA
z5kdZRGzLrKsmUcijV2kTABw8sdHQcqsyKvlyUcijV2kTADwyMqOgogpTSrX
5CORxi5SJgAsys2OgogpCynn5CORxi5SJgDYslLJPzK6StZC/slHIo1dpEwA
MBTEinNkaqFiwyRqU0Qau0iZAJBSkEr+kVXW8sw8JdLYRcoEgKiyVPKPtJdb
KVWUSGMXKRMAQsWp5B8ZXdG/in/mKZHGLlImAMysSSX/SM+ixVKliTR2kTIB
YMpIBH92lEWMc/6CmUcijV2kTACYSmVQuMWIj4KUyV3FP/OUSGMXKRMAXuwM
CrcY8VGQMs7J/ccQJdLYRcoEgJex7UczKNxiZIdnfLh67kL+yUcijV2kTAAY
PsMrGiLhFiM7CiLGHU3eY4gSaewiZQLAtOEbieDPDs+A8Biy2IeaItLYRcoE
IC4aCkPz91/2LqliRRq7SJkAlF0cd16evCgYGR5JLUa9Io396+3oAwGATRg5
Mizdf4UDPA8ZKZORT5kzj3RaukiZADQZrT6aQeEWIz4KUsadTt5jiBJp7CJl
AhBkdPhxQFkq+UcurljMqEuksYuUCUCN3eHHMWWp5B+5uOIaqbpEGrtImQCk
GL09HFmQSv6R9nIrV0kVJdLYRcoEoMPu7dHBuankH5k6Nucq/pmnRBq7SJkA
dNi9PRxckEr+kYsrelZJ7ZUqSqSxi5QJQITR1VPjC1LJP9JerphdqUhjFykT
gAKjpRu7FKSSf6S93EqpokQau0iZABQYLT01viyV/CONRT0z2GNSdYk0dpEy
AZye0c/tvQpSyT/SXm7lQqmiRBq7SJkAECpOJf/IxRXXrJKqS6Sxi5QJ4PSM
fm7vVZBK/pH2citXSRUl0thFygSAqLJU8o+0l1spVZRIYxcpEwBmohkUbjGy
oyxichMqa/KXJhr783G/XcdfcXK93R/Pyvs2USYArGM0c3uXslTKCqDZottN
PmqgsT9uX6Hr3RNhz/vVt28DZQLAKkYnX9zrUppZzr2i61ZhlHZ0Y38n0PV9
3/R9P3V1JljGvkeXCQDlFjv54r6zJBqOeP3Qv+ji5C8HN/afCLo9Prb+3JHN
tq7Zl/wC0KlZDzf6ubFvWXAUR8ymk4+ObezxCHpvX7gDeyXVfFB8SvILQHdS
0VAwQ5gI/uwoixjn/OO+/plHxzb2VwRF7rPi2fTJuv+a70l+AeiL0b3trh4d
XJZK/pHRg68lVdqhjT11++W8AXu/Vsj7XwBOxG7aQ/6vrRxWBIpz3+i6VRjV
HdrY03dZ6WSbjXvc5p9AvN4i85FfALqw2LTHYc6p/BmUio+ylCle0TP5S9/5
9bwH8RUPMPILQPuMXh2OtAcvJoI/Owoixjm5/xiiOs6v8ePzt/FHlsfbMd7/
AtATu1EX7DKNnoH7r/pWvf+VCr/opLNbtBoHDwB12F165Y7RDAq3GNlREDHO
yf3HMNVIM1/x+cN0wsUCjMwC0KZoi86dIbUlK4NS2VEQMcWrRPdNFd7tz3/l
vfZIfgFokN2fi+e5mPk1fcifLIvDosfjXCVr8tHBjX3F92+kBv1M+Zls5BeA
1hidueKE0RwJtxjZURAxuZPYA1L1Ht3Ygw9h+L//8P29v7HPb/D9GwDaZbfl
ujOH6TAd6Qkm57DwMPzsXVLFHt/Yfd8hH73biu8ai77jywSAP+yevMVyw9H3
X4uz2aukSmuisTt+h1fy1cK/brkm+yZ+AVgTZQKQZzfkiqvM/lyWSv6R0TJr
SZUp0thFygTQMrsbb7foQH71TKRMAM2yW/FGa6UyKNxiZEdBxDgnd66SKlOk
sYuUCaBNRhPedMVoOowD1idLKmJSM6Rms1dJ1SjS2EXKBNAgowNvve7KVPKP
zFo9d5VUgSKNXaRMAK2xO/Buq5elkn9kuK5/idzJRyKNXaRMAE2x2++eB1CW
Sv6R0XVrSVUn0thFygTQDrv37nkYQ3BDNLSaX9F9U6WJNHaRMgE0wm68e4qG
QrglK1AWI8Y5eTiDZ/KRSGMXKRNAI4yuu7/iVHKO9KyYu+5lctuYItLYRcoE
0AK76+5vTY44Ry4u6p8nHJ+qS6Sxi5QJ4HBGvz1QWZpk5Y6xXNY8i5OPRBq7
SJkAjmU028MVpElW7kTX8i/kn3wk0thFygRwIKPTtqAglcKRqR2NtfwJZT8a
EmnsImUCOIrdaRuxGEPR7PAHULhQsYH3v95EygRwCLvNtiM3lTwjh8SNZ9Yk
9vwpIo1dpEwAh7DbbDsKAsU50lgrdx7P5C8ijV2kTAD7Mxpsg7LSJCt3ogtl
ie5o1CLS2EXKBLAzu8E2KCuV/COjq9SSqkWksX+9HX0gAE7F6K5tKsiOgojJ
jqicyV90WrpImQD2lGqtjcvNjoKIyZ3f3iVViEhjFykTwJ6M1toyf7gsJksq
YrKWWFwlVYhIYxcpE8BujL7avlrJkoqY3NnsXVJEGrtImQD2YffVLnhSyU4W
I2Vyd8+afCTS2EXKBLAPo6l2ISs7CiKmLKQ8M0+JNHaRMgHswG6qvVgZK4sp
45y/bPIXkcYuUiaArdkdtSP+7CiImIKE8k8+EmnsImUC2JrRTruzPlmMiMma
c3F8lEhjFykTwKaMXtojZzA5h3km928fPj8EEiXS2EXKBLAp8suZX55doqtE
900dv0hjFykTwHaMRtovf7IsDsuaNkvq4EUau0iZALZjNNJ+ebKjIGJyJzEG
GAcv0thFygSwEbuR9ssTTI742jC/wslHIo1dpEwAGzG6aO/WJIsRMf7Zhs+P
aoR/Th25SGMXKRPAFk4cXkON/Fqc0zOJf/KRSGMXKRPAFsiv3JSxZ3POSX69
iJQJoLpzh9fLdvmV+rN/IeOwRRq7SJkAqiO/CvLLuZe93MD7X3+IlAmgLoXw
Gra8//LHVnSvwfwrEGnsImUCQJnD88s/+UiksYuUCaAuo3mezD75FT5kjye/
BpkyAdRFfhkP2RHj2cu5SuqYRRq7SJkAKtIJr2H7+y/nPORXSKRMACizdX7Z
U9kPpYg09q+3ow8EQDfs5nkmdjAV5NeQ+XPKxsjUMeu0dJEyAdSiE15DG5+f
908+EmnsImUCQIHiZElFTF56xaZaDK9BprGLlAmgFrtznsx2+TXb3TmbPflI
pLGLlAkABbbLr+LMMiYfiTR2kTIBVGH0zFOys6MgYlYGlj35SKSxi5QJAAXs
7CjIl5UTkl9TImUCqMLomeezmB0FEVOQUP7JRyKNXaRMAMi1JllSEbM4MrVK
9KEUkcYuUiaA9eyeeT4751fWtNHJRyKNXaRMAMhVJWjsOZ2TpHZJHblIYxcp
E8B6RsM8JX+O2MOMOQtWGcivN5EyASDXFvnl3MuzlnHkIo1dpEwAyJKVKcb4
3GmzpA5epLGLlAlgJaNbnpInO6J/XowYz17O1VMHL9LYRcoEgCxZ+WUP80zr
XNSefCTS2EXKBIAsnuwoi5jchLL/M0qksYuUCQBZspLFGJ87rZ9x8CKNXaRM
ACvZDfN8PPFRkDIFIeWffCTS2EXKBAC/9cmSipjUPKnZ7O2p4xdp7CJlAoDf
nvnln2px8pFIYxcpEwD8nNlRFjFrZpsNTh2/SGMXKRMA/LJCZHFY7sx+qeMX
aewiZQKAnzM7yiJmzWyLk7+INHaRMgGsYbTK8/FnR0HEGFP5l47OPCXS2L/e
jj4QAO2yu+XJ+OOjIGWyEmpxuejx67R0kTIBwKksp4zcSU0+FN12GZOPRBq7
SJkA4LQmrRYjpmD32R+MyUcijV2kTABlFlvl+eQmy+Iwz+Sph4Z0fhkliDR2
kTIB5PL0yVPypJJfavL1CxkliDR2kTIB+IXt0e6WZ5IVHwUpUzxPdJdUFSKN
XaRMAB5G1z3keA6RGyKLw8rmL5v8RaSxi5QJwLbYEnX4s6MgYhZnC//gn3wk
0thFygSQstgMpTgjyZkv4Vn17DLb1z/5SKSxi5QJIGT3QE1Z4eLPoLIlCiZ/
EWnsImUCmLK7n6zc7CiLmIqrpAoRaewiZQJ4sfsehuO+/7BglVQJIo1dpEwA
i01vcfe6x9MsTyoZyTLbXja5/xiiRBq7SJmAssV2h5fc7CiImLx8ypx8JNLY
RcoENC02OkzlZkdBxOTl09K6qUKaaOzPx/12HX/FyfV2fzxzdr5dF3duokwA
G7BbHEL+VPKPDJcokNoxVUgDjf1x+wpd754Ie96vkX0jOzdQJoDK7OZWPGfd
CVuzmEpD8MaWM3rCVbJCyj/56OjG/k6g6/u26fte7OpMsHfwXW/vW67kzkeX
CaAmu63BkBsizpHRVbImNPZK1XJwY/+Jr9vjY+tPMM22xncNYu6182wz+QWc
w2JPgy0rlfwjo6v42Xulajm2scfj673dvANL7RpHfgEnYHeziqtsvcSB7FQK
t6dG2hHj2SW1SvQYoo5t7K97pUgGRW+ifLtGkV9A1+w+Br9L4mYn3DLdnno0
FTE52bVwDEYthzb29D3U4g3YZMDHpxf5/CFwLotNDFnstHJmymLKOCf3H0PU
oY09fZe1+Orge9fpB+/5/CFwJovta7t1d15xT1mp5B8ZXaVgquiYVC1959fs
44d/fhbsK/bZD/IL6IvduFAmN5X8I1MLFRsc/4DpPb/CnaMfXiS/gF7YLWu3
Yzj2ADbiSaXZQ/69UmvlppVn8pde3//6SSlv9s1eYKxy9ACqs/sVVnLmhT9Z
UhFTcZWwikaaefnnD40btER+1TheAFtJNatDtHMkdaXyYnDfjjlTxrOLf5VU
Od3+/Ff6Z5xj2Ud+Ac2yexQqyk0l/8jUQlWkyjm4sa/4/o3UIN7/AjpiN6gD
tXlUaxSkkn+ksZZnKvuhlKMb+/j9h7fs7z/83fX++/2HN77/EOjDYndCXQWp
NI5cHF9lLefko+Mbe/w75OcBFL/besR++it243Z8mQDe7KbUiPaPMNcsDvzZ
URAx0RmMh/wzTzXR2B2//yv5kuKffX+/fmPyw2BTTZQJoJPweunlOJ3C4Bh8
8bE4JjxRnl38UhWJNHaRMoHGGb0IWzNSaSh6Z8qImKxsyp18JNLYRcoEmmU3
ojZ1d8CGslTyj4wuV2UVoyiRxi5SJtCmxUbUrE4PO1SWSv6RFZeL7h4l0thF
ygRaY/cf7GZNoPhzJ7Xc4jyLj0aJNHaRMoGm2M2nC70f/6gslcKRqR1rLeeZ
fCTS2EXKBBpht52OnKaK4kAZVuRX+IcyqbpEGrtImUAL7J7TnXPUYqeSnR0F
EZO7irG0UZRIYxcpEzhWtJXhcHYqDebPgqW2h8PsFT1R5Zl5SqSxi5QJHGix
23TqHEVdcjLLmSxGypRN4px8JNLYRcoEjmL3md51XdolllZDG68fOkemShNp
7CJlAvuzO8w5dF3gpUZ+hTPYEeOf2TMsRaSxi5QJ7Gyxw5xGv2VGkyLcUjdl
nJN75jdKE2nsImUCe7J7y8n0W2yYEdOH1udLNGXKJnFOPhJp7CJlAvuwuwra
MY2PYcXrh7kRkxFOseWGRODOiDR2kTKBHdgt5cR6rDqVQdNHw/iIjhwSL0VG
nw9GNhmiB2xUJ9LYRcoEttZjD6+lx9qncTB8/tvDjhJ/6ERTxjl5wcxTIo1d
pExgO4vNREF3Z8BOBGd8FKSML5q886eqE2nsImUCG7HbiI7uTkIqI8Itnnwx
9oquW0uqOpHG/vV29IEA/bF7iJqOToWRO+EWIztmf47um1q6YJVwe1iaVEsX
KROoLtqdlPV1NlLpYDxkJIsxOLpuLanqRBq7SJlAXUbrUNbLaZnlTrjFmR2e
h1JL++ef7WVMPhJp7CJlArXYfQPtnxwjGuxUWhwZ3TdcfXHCwZ2nqRpFGrtI
mUAVdtPA0EN+vUzTYah9/2VETNaci7ukqhNp7CJlAuvZHQOjxs/SJbjTGRz5
FW5PjTQixhjj3JiaeUaksYuUCaxktwtM9XKuwowYt1fJlzBlPOP9jNJEGrtI
mUCxxV6BULNnbHpgl91fPyyexDP5lEhjFykTKGN3CaR0cdLC+Bi3O7MjN2JW
TmVPPiXS2EXKBMoYLQK29k9dGBzjdmd25EZMXjhlTj4l0thFygRy2f0Bi9o8
e5farx8ujp+tvt7saKNEGrtImUAWuznAqfFzGKbPuD2VF9P/DEem4ma2aEWp
0kQau0iZgJ/dGeDX+GkMM2jcPtuYyo7ciPEM9swZnXxKpLGLlAk42W0BuVo+
mWFejNs9KROOjO47W9GYMDpJaq/BPLcijV2kTMDDaAgo1uxZ9YeFP62ieTRd
0Tm5U6o0kcYuUiawyOgGWMPutHsK02Tg84c9EykTsBmtAOu1cHqjaTLk3FUZ
I6N7DbHEzFoo3Cs6ICTS2EXKBAxGH0Ath5/kaJQMlfLLeChctKJUsZmN/fl4
PHPGt4L8gjK7CaCiY0/1ZXIvMzueMG6mh2pnR3QGI2LKEspePSqzsT9uX1/X
e38ZRn5BVthesKkDz3Z06Wg6hFuMVPKPdA52ThhOPlOQX3+53o0Ia/AmjfyC
LOPyx0aOOufRdS9BWg2f92X+HDF2n624RnTFqOzG/rxfv5IZ9nzcrn89fHvk
Tbo58guajGsfm9r/zEdXXMyggjQxRk4XrShVclFjHzPsenvfab2T64X8Ao5n
XPjYmt14N1rR+HMYB/7gyI2YnGjKm3mmtLE/H78ZNk2u663Jd8fIL6ixL3zs
YM+/AmOtS879l3+kkTK58eSfeWZNY/++5fr6miTX49lgcr2QX5BiX/XYzW5/
EeFC02iYbqxl+HxxcoslpmtFlb1++Lh/RNfyRzqONh7l0QcCbM643rG/Hf46
jCWqZEduylSZLZx2qqilf77NdX29/xV5O6w1JBdEpK53HGjrv5To/GVh4QwU
I2UK5hmCW7nozKHSz8/P3uZ6jq8ltplh5BcU2Bc7jrLp38vi5NHECbcspszi
sOmKdaVKy86v9Ac0JhnW3EuJ5BdOz7jMcbjt/naMmY0Mmg2IjokOM/LFmCdL
OFWqwMqN/eelRD4/D+zKuMbRiC3+juw5L5+vyA1moi2myeKw6bq12OVv0Nj/
ukcjv4DdLF7maIGnIRfM6Vw0DAV/gngGTA8mI5/cxxAl0thFyoQg4+pGa+xu
vOmK0dAx8mh6qLkRk5VN9pzh5FMijV2kTKixr240qOJfmXOeS2Z+GSNTs10m
Seef2bPidPKQSGMXKRNqjEsbzbJ7ctY8/mErM2VxkrDAilKliTR2kTIhxbiu
0bjd/u480bOYHbkRU7yWZ/IpkcYuUiZ0GBc1urDyb9C5eyqDwi1GdngeDRet
Mv/FLFOksYuUCRH2RY1erPl79O/ryQgjSlL7Dp/hOFuxIqM0kcYuUiYU2Fc0
+rL13+YsYhZTKRof/pTJmtm/Vqo6kcYuUiZOz7iW0amCv1P/LtNcGLbPr+mi
Wey9UtWJNHaRMnFu9rWMfm3613rJzK/ZQ9GR4cbZirnsvVKliTR2kTJxYvaF
jN5l/eXmDg4zYuD+qx8iZeKs7KsYJ7DdX3E0HcItRnB49poV4pfaZbZulEhj
FykTZ2VcwjgNu1evmXYoyq/UvtF5ZlXkMnY0ShNp7CJl4pTsSxhnstixh/zn
QzQdwi0FyZJKGefM/lVSpYk0dpEycT7GxYtTsjt22YTDNvk1xF7i80+bOzgk
0thFysTJGFcuzq3iX300g8ItBUEzxPLLP3PWAUSJNHaRMnEy9sWLc0v97ec+
Ky6Z+TV7yBiZSpnMgMqbfEqksYuUiTMxLluIqPIcGDNoSH+ScHDHmSdiijLK
Wj1VmkhjFykTp2Fcs5ASpsOaeaaz2ZGR+k9jr+ha/oTyzDwj0thFysQ5LF62
kFLl+RBNDX++eIal1lrJKEqksX+9HX0gwDL7moWgxU7unCE3lfwjjbVScw7p
1zPDkTNSLV2kTJxA9GoFwpgo2N1IEDuYFnPHWMuY2TksRaSxi5SJ3tlXK8Qt
9nN7x9zsGNwZFx5V7lpZk49EGrtImeiafakCw4p/4USzyRMx0d3Dfe3l1jCK
EmnsImWia/alCqyRFUlhPC1uMZbzzLk4PkqksYuUiX4ZFymwnidB/CMX8yUr
ngrmfxFp7CJlolPGFQpUUZBKl5w7NXu56HjPtNHJRyKNXaRM9Mi+QoH1nPHh
37gYMZ7xzvmNukQau0iZ6JF9hQJVzJJiSKfGbLAx0kgZzy5+qaJEGrtImeiO
cW0CUWXPmYs7v2ZjPCOjh5Sa0Gm6eqookcYuUib6YlyYQF3FUWKMHGdeXG6l
VFEijV2kTHTEvjCBuhZTKdxib7cjxrmLZ1g4+UiksYuUiY4YVyVQXTQ7wu2p
7CiIGGc2TY8n9edUUSKNXaRM9CJ1yQOLyp45Rl74k8UeZiy3UqookcYuUiZ6
YVySwBaiqRRuzx1jRExBSPknf2misT8f99t1/D786+3+eJbNc/9rlus93LuJ
MoE/jOsR8Ch4CvnDomykvdxsmHPp1OSjBhr74/YVioXQgld6kV9omn09Ahsp
SyV/4iyuuLi7f+bR0Y39N3R+7rm+78XSMeSYiPxC0+zrEfAoeBb586JspL3c
ylVSRR3c2H9S5/b42PpzRzbb6piH/ELTjCsR2JSdF+GA2UPRAdOH7OUWE8oe
mSrq2MYejy/rjayoV95938Lx/hfaZV+JQJbc51IYB1lpkho/pJ/Yzvln80Qf
Sjm2sb+CJ3Kf9U4kT4D9juXzG2iYfSUCWXKfTmEiOANlcWQ0ZTy7hGt5Zp46
tLGnbr9ybsCmSUd+oVX2ZQhszR8Zg/ulxekAe7lFxhEaRR3a2NN3Welks2Yg
v9CkxcsQKOB/UnnywogPzwDPovZaxkIpXefXfH/yC02yr0GgTNbzKpU+dkjZ
D83Sx1huDaOofvMrMoT8QnvsCxBYw/nsWkyl6JhpfNj5Ej2MrHhaPLyoXt//
iu5q5tdUjYMHXIyrD1jJ/+yyAyJ3YyqGZgfm2bFg8kaaefHnD6c/7xX3uS+Z
hUOElx5Q1+JzLBol4ZbwodS+nogpiinv5KNOf/6L/EL7jOsOqGXxaRbNoHCL
kR1lEZORT0uvUqZKO7ix1/r+jelsvP+FNhjXHVCR/UyLZlC4JXxoNrM9Q7io
sUrW8bSbX7/ff3hb+f2Hv5ORX2gA4YXd1M2vMDjKIsa/SnQ2e/KX4xt7/KXA
eQi5bsnILzTDuOiA6lLPt1T0hFucUWIM86xbJlV1E43d8fu/yC90xL7ogOpS
zzcjERYjY/oHe7Zw9ax4WjySFJHGLlImGmFfdMAWos+6WQaF8eSJj0s6v4b0
v9YWV/E/mipZpLGLlIkWGJcbsJ3wiRdmkLElFSjRjeGY1PEs7uuRKlmksYuU
iRYYlxuwqelz7xK8BliQSsbIcZVoxGQt5DmSKJHGLlImDmdca8DWprEy/iEa
IuEWIzuM8dMlwoOpJVWvSGMXKROHM641YAezZ6CdSoup4RwZPu39qxRMPhJp
7CJl4ljGhQbsZtbzU4ngz46yiLkErzEWS1Uq0thFysSB7AsN2M0lCK9hs9cP
UxGTu4p/5imRxi5SJg5kX2jAIVI5Em4x4qMsZdwBVTL5i0hjFykTRzEuMWB/
l89bsGHL/BoSz/+L7/XD1BHOxkSJNHaRMnEU4xIDjhVNh3CLnS/2LtFFL8HL
mJ5VnPO/iDR2kTJxCOP6Ag5x2fH+KxUxBWv5J38RaewiZeIQxvUFHOUyeflu
yMmv2UODL4nC1S++1wbtmQfz+hJp7CJlYn/GxQUc6FKaX7kjh9hVMD7k391Y
NFWjSGMXKRP7My4u4Fh2HNixktrXGBYuXWuhVIEijV2kTOzMuLKAwxnREG4p
i5VUvmQtsXgAKSKNXaRM7My+uIDDpTIo3LIYUka4hBdCwUKLq4REGrtImdiT
cVkBjShIpcF8Kyr6UHTdod5dWKo6kcYuUib2ZFxWQDuiIeLZYm+fDQgXLRY9
tiiRxv71dvSB4CSMawpoSioRitMkNWy2aO5C/skHsZYuUiZ2E72mgDZ5Uik6
7PL5IqE/YkpSyjfzlEhjFykT+7CvKaA1Rip5sqMsZbJCyjgqoy6Rxi5SJvZh
X1NAgzxJ4c+UxZTJXcVY1yhKpLGLlIl92NcU0KCyVBpHLo63V/Qv55z8RaSx
i5SJHRhXE9CsaCo5s6MgYgoWcs48JdLYRcrEDuwLCmhWQSr5R6bW8i/knHlK
pLGLlImt2VcT0LKCVPKPNNZav0qqIpHGLlImtmZcSkD7PHkx5CedvdYadjki
jV2kTGxq8WoCGpeVSlkjjbVyV/RM/iLS2EXKBABbbpoMjs8f2mutXyU1v0hj
FykTmzKuI6AXZfnliZ7UWuulahFp7CJlYjvGRQR0xJlKs3jKjZiC3f2Tj0Qa
u0iZ2I5xEQF98QRKKlnC3YfE1TFutGdePB6jEJHGLlImNkJ44UzW5JczZbKW
yJ18JNLYRcrERowrCOhRVnaURcxl6f7LXmWYvNSZItLYRcrEFggvnM/6/BqC
1xWj8zvXsoelqhBp7CJlAoCHJ1NyA2g2f+5CxuqpKkQau0iZ2IJx+QD9ykqQ
xYeik/tXWVwoSqSxi5SJ6oxrB+haVqwsji+b3H8MUSKNXaRMVGdcO0DvnNnh
GWDPvLjFXiV1/CKNXaRM1EV44dyc+bU40jm5c0Xn/INMYxcpE3UZFw5wDp7s
8AwomNk5v3EZijR2kTIBIIsnOJwxFE47+N47WxyTOniRxi5SJioyrhrgTNYk
iye/VjKOXKSxf70dfSDohn3hAKexGB9lKbM+uYzJpVq6SJmoJXrJAKe0mB0F
EZO17+LI1JGLNHaRMgGgQPX8cu7llDpskcYuUiZqMS4Z4Hzs7PA85JzTsz0c
kzpskcYuUiaqILwgqCC/jIjx7OKZk/waZMpEFeQXBG2RX8Pk8/OeeVJjUscs
0thFygSAYhXzK7qXcyrya0akTKxnXCzAuVXMr+KcIr9CImViPfILsirml3Mv
53KpAxZp7CJlYj3yC8pq5VfF8CK/RMoEgDXq5pdz39zJRyKNXaRMrGRcKYAI
8qs1ImViJfILqJJfqb2cs3nCa5Bp7CJlAsB6uYljz+CZzV4ldZwijV2kTKxh
/0sP0JGbX+G1k7t71uQjkcYuUibWIL+AFzu/wi3Rayc6xhNV5NeMSJkAsF5u
6Djzy06orMlfRBq7SJkoZlwjgKCV+eXZxS91kCKNXaRMFCO/gKn1+WXvOCTu
8mark1+DTJkAUEsYNIP5qmC4rxFYTvYRijR2kTJRZvEyAQRl5U5031pSRyjS
2EXKRBnyCwjVzS/nPNFdUkco0thFygSAitbkl3PHgslHIo1dpEwUMK4OQFw0
hsIt0fyqKHV4Io1dpEwUIL8AQ3HEGCOdG8mvl6+3ow8EADpTkF92PPmnTeWX
VEsXKRO5jH/aARiWUmZIfMTCCC9PWtnhNRJp7CJlAkB1ixFj51dBZl0cHz4c
ZBq7SJnIZV8dAIa9fv7L2Ct1YCKNXaRMZCG8AKfq+TXkvMaYOiqRxi5SJgBs
oVZ+pR6yl0gdlUhjFykTWYzrAsBUrfwqkzoqkcYuUiYAbCTMlNz8Sm0nv2wi
ZcLPuCgAhLIipiynyK8okTIBYDvr88ueJCu8BpnGLlIm/OzrAkBofX7lJpcd
YSKNXaRMANjOzvmVmnwk0thFyoSTcUUAMJTll7GjZ2TqYEQau0iZcCK/gDJl
+bWGcTAijV2kTADYWpX8GoKP3xdEWBON/fm4367j9+Ffb/fHM2vXcd9rat8m
ykQb7H/RAbCtzC/7UX94DU009sftK3S9OyLsMUm96b63x3xkA2UCwBmszK8C
qSM5urE/79efvPq5b/q+obr6Euwn977T6j1w3PdrnmBHl4mG2P+iA7CI/PrL
T3zN4uYnmcLbqHDPIOXi+5JfAFAL+TWk4uu93bwDe+VUZEj0AfILL8a1AMDJ
EzHTh6J/7j2/XlkTuc9KppN3TvILADayGDGpGCpIrlbzK3X75boBS4gnH/mF
F+NaAOBXkF9ljGM4tLGn77LSyWZLvStGfgFARZ78CofVjbBT5df7E4nhhOQX
ANS1mF+1pA7gPPn188NgkR/+GsgvvBnXAoAs2vlV7f2v59LPjM1+wnnFMQMA
/nJUfjXSzGt8/vD5/hYOazSZhYGbL6C2Q/Jr1O3Pf31MkHjV8Bf5BQDV5eaX
8VB3+bXi+zeGP3devm+aOrxMtMG4EAAUiEaMnUS5uWasfnRjn9xAZX7/Yeqj
8lFHlwkA55SVX2VSSx/f2N8J9mkeS8EtWfRb6yc+b96OLxNHs/8hB6DMFvk1
pF+ZnGqisTt+/9c8v5bii/wCgH0s5ld04+JDfeTX9kTKhMG+EAAUW8wvT0IV
RJhIYxcpEwD2588v+9HU+NS6Io1dpEwAOITnNqpYalGRxi5SJlKMSwBAXeRX
XSJlAsAhLhvcfw2xDzdOiTR2kTKRYlwCAKqYhY4/mzyDo0Qau0iZAHCUS71b
sNkkqRVFGrtImQBwIPt+ahwTDSk7zqJEGrtImYgynv8Aqiu54yK/0kTKBIAD
Zd1VkV9OImUCwLGqhxf5JVImooznP4C6yK/qRMoEgGM5w4j88hMpEyHjyQ9g
C4V3WZnhNcg0dpEyAeBw/lS6TL6htyDCRBq7SJkAcLgqt13k10ikTISMJz+A
jRhJRH7lEikTAFpQfq9FfgW+3o4+EACQkJtQWeEl1dJFysSM8S83AJtae9O1
FGGDTGMXKRMAGrHmnov8mhIpEwAaQX7VIlImZoxnPoBNObOJ/FokUiYAtMPI
o8Ut5NdIpEwAaEfWHVZueA0yjV2kTABoij/C7HSLEmnsImViyv6XG4AdbBde
g0xjFykTAJriDynuv1JEygSA1kTDqMotmEhjFykTU/YrDwD2kRVV5FdIpEwA
aA35tZJImQDQIDuYLrz/ZRIpEwAaZGcT+WUTKRMj4zkPYGf2y4Pkl02kTABo
02KEkV8pImUCQJvIr2IiZQJAm5w5RX6FRMrEyHjOAzgE919lRMoEgGYV3HmR
X4NMmQDQLO6/yoiUCQAtI78KiJSJF+MJD+BA5FcBkTIBoGXkV4Gvt6MPBACk
VckvqZYuUiYANG4xqrj/mhEpEwDat/7+60WksYuUiRfjCQ/gcORXFpEyAaB9
5FcWkTIBoAthQpFfKSJlAkAXuP/yEykTALpAfvmJlImBD28AnSC/nETKBIBe
kF9OImUCQC9mCZUbXoNMYxcpEwA6wv2Xh0iZANAR8stDpEwA6Aj55SFSJgY+
fwj0g/zyECkTADpCfnmIlAkAfSG/FomUCQB9Ib8WiZQJAH0hvxaJlAkA3SG/
bCJlAkB3ooFFfo1EygSA7nD/ZRMpE8ZTHUCzyC+DSJkA0CPyyyBSJgD0iPwy
fL0dfSAAgIis/JJq6SJlAkCnuP9KESkTADpFfqWIlAkA/SK/okTKBIB+kV9R
ImUCQL/IryiRMgGga+RXSKRMGE91AO0jv0IiZQJA18ivkEiZANA78mtGpEwA
6B35NSNSJgD0jvyaESkTAE6A/JoSKRMAToD8mhIpEwBOoKf8ej7ut+v4ffjX
2/3xrLxvE2UCAHw6ya/H7St0vbsizLtvA2UCALx6yK/n/fqTOT/3Td/3U1dn
gmXse3SZAIAMHeTXTwTdHh9bf+6qZlvX7Et+AUBfGs+veAS9t9t3YFn7kl8A
0JfG8+t1sxS5z3o9YAZY1r7klwLjeQ6gO23nV+oWynMDlrevXSbpZuvl/ByV
X72cn6NwfmycH8P3yWk1v9J3Wel0KtuX/Fqjl/NDfrWJ82Pj/BjIr2Gv/GKe
Y+fJza9e6mIe5pGdh/wayC/mYR7mYZ4O52k4v3Z9/wsAcDI1kqjQbp8/BACg
ot1+/gsAgJr2+v4NAACqGr/D8Lbi+w8L9gUAYJ13Cn2aJ1D8tsq3LwAAm3D8
Dq/ky4LGvtv/WrG+rajxz67jvlfOjznPSd+RXXV+no/JE+icFxj9x+tPd896
y+f852ePXyvWs/IaH7fYXe9fL+Nuf9T7qfUceJ70Ne0V5yf+ssnJzlD183Ou
0zOR/5GF0/fnnX6tWLdW1Pjz3BnfdJzse55PzVR7Dvy2ovM8eYZ15+fdfH6f
Qee7wOg/Ts/fKPI2D4Hzw8cabeU1/uwZPFM4P8Y857q4hlXnx34CneQk0X88
np8v5DhrEzg//FiZbUWNyTZzpv5T6TnwPiWPEz11/lhxfpa/GO4EVj1/4hfS
6c7b9C48+VUUEQr9ma/1sG1R44lOT53z8zv2TJfWHyvOT06r6taq5491f3Gu
59D4qYucJ4VAf97vaxX7tEWN53n21Dk/0/NxnmfOy4rzMxnw8QmyU32AbO3z
5/0O83nf35nJyC+F/rzf19r3qX6NqTc1+rT+/HzOcJ4r62XF+Xnveo99hPUs
Z2j98+cZfsT3O+HPcXYiMvKL/kx+1a5x/PfiSS6wtednvj/5Ndv1pyFPPsD6
btcnuLoqXF/PWLyfOMDIrw/kl61qjT+t50w//LXq/ESGkF+zXWM7n+gDZOuu
r+Bb8Sb5fp7n0Afy6wPvf9mq1XjSH81d/f7ObNfzPHNeVpwf41ad/vNHqkGf
5/SEeP/rE58/tNWo8cz/Jiw+P4kvlpg4xdkqf/4YXfhEDXrF9ZXuwic6P3N8
/vATP/9lW13j5DWOjQ7xUMXnRyS/Vv/8IP0nReH1sQA//zXDz7/bVtX4NF4E
Oom6z4FTXVp/rDg/qUGnusA2OD/n+ojvp6wfClToz+GboPxasQ/lNZ75OvpV
9Tlwvvxac35+d73/fv/h2V6LXnF+wq+HPNvnMwN5P9Su0J9TL+XMK9T9tWKF
5yf6zc8Tp7nA1jx/olOd6+mz6vwkfoHBaZ47f1lxflKvQp/sGfQrnV+6/XkY
PL8jpuTXip1GwflZiq9T9aA1z5+Pec6YX0OF6+v36zcmNxvnseL8PGe/Hu2c
DegtN78Gjf4MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAABwas/H/Xa9fo2u19v98Tz6qAAAMDxuk+Saut6JMABA
ox63V1bdfu+3nmOi3R5HHhoAACmv+ArutJ73K3dgAIDukF8AgF48n8/Ht/vt
96Mc5BcAoFl/vd3FJzgAAH35+fzGnw/NX2+32/3+eHzfifH6IQCgYamcIr8A
AC173X0FH5N/f4Ce/AIANOn96uHvT3/9+SoO3v8CALTt54XC4HMbj9d2foAZ
ANCqj88fXt9fxJH4wWYAAAAAAAAAAAAAAAAAAAAAAAAAAIBD/H8JtCrz
    "], {{0, 577}, {576, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Software" -> 
        "Created with the Wolfram Language for Students - Personal Use Only : \
www.wolfram.com"], "Comments" -> 
      Association[
       "Software" -> 
        "Created with the Wolfram Language for Students - Personal Use Only : \
www.wolfram.com", "Creation Time" -> 
        DateObject[{2022, 11, 15, 12, 8, 8.}, "Instant", "Gregorian", -3.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{576, 577},
  PlotRange->{{0, 576}, {0, 577}}]], "Output",
 CellChangeTimes->{3.877441915543125*^9, 3.877445839807234*^9, 
  3.8775136902353163`*^9},
 CellLabel->"Out[18]=",ExpressionUUID->"a0a08ac8-1d3e-4545-9fe5-144bc5854f32"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8774267520419607`*^9, 3.8774267634041076`*^9}, 
   3.8774268080697565`*^9, {3.8774270877738276`*^9, 3.8774270889293814`*^9}, {
   3.87742838482487*^9, 3.8774283914028344`*^9}},
 CellLabel->"In[19]:=",ExpressionUUID->"aca89f74-8925-4be0-9778-b1e7ab59c4ae"],

Cell[TextData[{
 "De acordo com os resultados obtidos no item anterior, vimos que para ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", "0.75"}], TraditionalForm]],ExpressionUUID->
  "c35d3cb4-f27e-4852-aaee-1b714a3041c3"],
 " haviam 2 pontos fixos (isto \[EAcute], um ciclo 2) nos pontos ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", " ", "=", "0.5401765790106285`", " "}], TraditionalForm]],
  ExpressionUUID->"0b2f2c70-4ea2-48cc-857e-ad9e87db9f0a"],
 " e ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0.7440337660428007`"}], TraditionalForm]],
  ExpressionUUID->"e2105769-3139-434d-b28e-99d95f05dfee"],
 ", al\[EAcute]m claro do ponto fixo ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", " ", "=", "0.6587000760437549`"}], TraditionalForm]],
  ExpressionUUID->"de505c89-7b2e-4194-9e4f-797b1bfc0dc6"],
 ", o qual j\[AAcute] sab\[IAcute]amos estar associado a um ciclo 1. Fazendo \
uma verifica\[CCedilla]\[ATilde]o r\[AAcute]pida do mapa anterior com o aux\
\[IAcute]lio da ferramenta GetCoordinates, para ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", " ", "=", "0.75"}], TraditionalForm]],ExpressionUUID->
  "3968d651-8171-4ef5-8ea5-8ee191d270dd"],
 " temos as seguintes coordenadas:"
}], "Text",
 CellChangeTimes->{{3.8774268127767887`*^9, 3.877426869431286*^9}, {
  3.877426918941945*^9, 3.8774270590214357`*^9}, {3.8774271854654474`*^9, 
  3.877427196441457*^9}, {3.8775513187227144`*^9, 
  3.8775513465759354`*^9}},ExpressionUUID->"d75c594b-0cd4-4d65-a91a-\
4a7caa9998ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"coordenadas", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<0.7514\>\"", ",", "\"\<0.5409\>\""}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<0.7514\>\"", ",", "\"\<0.7468\>\""}], "}"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8774271945196486`*^9, 3.877427206514389*^9}, 
   3.8774272981079273`*^9},
 CellLabel->"In[20]:=",ExpressionUUID->"4364a5dc-a85f-4e34-ac34-363907ae356a"],

Cell[TextData[{
 "E, portanto, temos como pontos fixos ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0.5409", " "}], TraditionalForm]],ExpressionUUID->
  "72b1f4db-0892-4f9c-9cb3-a69e30274709"],
 " e ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0.7468"}], TraditionalForm]],ExpressionUUID->
  "87bacda3-4d21-4bed-9d36-54576d92987b"],
 " (aproximadamente). Este resultado indica que o mapa de bifurca\[CCedilla]\
\[OTilde]es encontrado est\[AAcute] em perfeito acordo com as estimativas \
feitas anteriormente. "
}], "Text",
 CellChangeTimes->{{3.8774272127692285`*^9, 3.8774272953834*^9}, {
  3.8775513591059494`*^9, 
  3.877551359402768*^9}},ExpressionUUID->"e3f6e811-be0b-4ab1-b2e7-\
b1f4b48acbb8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Exerc\[IAcute]cio", " ", "3"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Utilizo", " ", "a", " ", "fun\[CCedilla]\[ATilde]o", " ", "FindRoot", 
     " ", "para", " ", "encontrar", " ", "os", " ", "valores", " ", 
     RowBox[{"de", " ", "'"}], 
     RowBox[{"a", "'"}], " ", "para", " ", "os", " ", "quais", " ", "o", " ", 
     "ciclo", " ", "2", " ", "se", " ", "desenvolve", " ", "a", " ", "um", 
     " ", "ciclo", " ", "4"}], ",", " ", 
    RowBox[{
    "ciclo", " ", "4", " ", "se", " ", "desenvolve", " ", "a", " ", "um", " ",
      "ciclo", " ", "8"}], ",", " ", 
    RowBox[{"e", " ", "assim", " ", 
     RowBox[{"sucessivamente", ".", " ", "Antes"}], " ", "de", " ", "aplicar",
      " ", "esse", " ", "procedimento"}], ",", " ", 
    RowBox[{
    "construo", " ", "mapas", " ", "de", " ", "bifurca\[CCedilla]\[ATilde]o", 
     " ", "ampliados", " ", "nas", " ", "regi\[OTilde]es", " ", 
     "pr\[OAcute]ximas", " ", "\[AGrave]s", " ", "zonas", " ", "de", " ", 
     "instabilidade", " ", "para", " ", "obter", " ", "um", " ", "bom", " ", 
     "palpite", " ", "inicial", " ", "dos", " ", "par\[AHat]metros", " ", 
     "de", " ", 
     RowBox[{"interesse", "."}]}]}], "*)"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8768954332961636`*^9, 3.8768954721620965`*^9}, {
   3.876895504341056*^9, 3.876895513077629*^9}, {3.8774351229288783`*^9, 
   3.8774351341819906`*^9}, {3.877435207694719*^9, 3.877435276761403*^9}, 
   3.8774362733186855`*^9, {3.8774363591097617`*^9, 3.877436465424408*^9}, {
   3.877551548439367*^9, 
   3.8775515488928127`*^9}},ExpressionUUID->"4761d378-e027-48d5-bee1-\
0444835b03aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solPeriodo1", "=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "1"}], "]"}], 
       "\[Equal]", "x"}], ",", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"Nest", "[", 
          RowBox[{
           RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "1"}], "]"}], ",", 
         "x"}], "]"}], "\[Equal]", 
       RowBox[{"-", "1"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "0.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "0.3"}], "}"}]}], " ", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8774392123423557`*^9, 3.877439251821639*^9}},
 CellLabel->"In[22]:=",ExpressionUUID->"863fe7ec-b1bc-4a65-80c2-15df20c41ae1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "0.6457736765434063`"}], ",", 
   RowBox[{"a", "\[Rule]", "0.7199616829795346`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8774392353012514`*^9, 3.877439252769586*^9}, 
   3.8774419157774467`*^9, 3.8774458400415525`*^9, 3.877513690555932*^9},
 CellLabel->"Out[22]=",ExpressionUUID->"bf56175b-3c59-4d43-b047-e27e476252f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"graficoAux", " ", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"graflambda", "[", 
      RowBox[{"0.83", ",", "0.84", ",", "1000", ",", "1024", ",", "2048"}], 
      "]"}], ",", 
     RowBox[{"Evaluate", "[", "optam", "]"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<a\>\"", ",", 
        "\"\<\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\)\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.35", ",", "0.85"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Auxiliar.png\>\"", ",", "graficoAux"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "graficoAux", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Import", "[", "\"\<Auxiliar.png\>\"", 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8774362756145954`*^9, 3.8774363276839323`*^9}, {
  3.8774364804436617`*^9, 3.877436481584984*^9}},
 CellLabel->"In[23]:=",ExpressionUUID->"fcbcd796-0031-4832-a71b-b9f2b5f18473"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3UGOKll6BeCSPfHQW/DIW/DQHnralhfQLVe2PClL3ZYsD1kI22AbLINl
ZGdWAvkDEWQEERD3wPdJ3eqmiPsiTyXnfxcC+Kc//c8f3v7ul19++es/fPzX
H/74f//2l7/88f//4x8//s9//vbX//7zb7/+17//9r+//vnXv/zLn/7+48Z/
/rjvv3785/N/vz+XNwByLD00GnI9jVmyameRudZpZ5G51mlnkbnWaWeRudZp
Z5G51mlnkbnWecAi5ldlfkUvMtc67Swy1zrtLDLXOu0sMtc67Swy1zrm14Ol
zK+5+IkaX2Sudfw7uis/0VKLNBXa4mR1A7F0EksfyXQSSyedPJw0AFJo7Eoa
ACk0diUNgBQau5IGQAqNXUkDIIXGrrynG6B9uvqSNAAe75er+o7S2JU0AKrr
k2Uut52bxq6kAcRpc7g8gMaupAHcyWuOmLvS2JU0gC+mTPs0diUNyGXWvBqN
XUkDHs/Q4TYau5IGjGXusBSNXUmD12T6kEhjV9IgnRnE69DYlTRojUkEfTR2
JQ0ewzCC6TR2JQ2mM5XgMTR2JQ1+ZDZBIzR2JQ2OTChonMaupPGaDClIpLEr
abwC0wqeg8aupPFMvFAFz01jV9K4tx9nyl0t/dMDc9LY1dvB4//oZYv9kdrJ
8zFnAsxuwa5u1vU0nqDV+eJfATwB86uSxsvy9wqIo7EraVDZMkPLNHYlDYbz
tDAsS2NX0mBGQwacSQc309iVNFjKqGFn5MG7xj4lDVLcMO8MPp6Mxq6kwSuY
MvtMQNqR1Ni77Wa9Or5tbbXebHczH5uUBixn+gQ0Cpkup7G367dLq82QEbbb
rIYdm5MGPIMZ56CZ+IJCGvswgVaHfdPHfmo1cIKNODYkDaDXnWaiydigjMbe
j6D19uTW/Y7s7NYpx2akASzkrsPRlBwrorG7R9Dh9h92YF+T6vxO3UtGpAE8
sceMyOcYlxGN/TWCOvZZ3bPp1LX91/mREWkAzOjxE3Ou0ZnQ2H3br4EbsMNz
hV7/AmjG9DGX0Nj9u6z+yXZ2v+36/ArE1bpjvYQ0APiU0NiT59duczG+ugdY
QhoAfEpo7Gnz63j5/Pr4luXjdszrXwCpEhp70utffcOvc9GzLdocJw/AbOJa
esL1h/0TrmuARaQBwHtIY094/9e45x4j0gDgPaWxJ3z+Rt+d9kueTraMNACI
aeyLizCGf/7h4XN/u67f8PkbAKliGnvYZ8h37ra6D+0afTFpALy8pMYe8B1e
vc8Wfm65yrE9XwCWlAbAa9PYlTQAUmjsShoAKTR2JQ2AFBq7kgZACo1dSQMg
hcaupAGQQmNX0gBIobEraQCk0NiVNABSaOxKGgApNHYlDYAUGruSBkAKjV1J
AyCFxq6OH1C/9IkA0EtXX5IGQAqNXUkDIIXGrqQBkEJjV9IASKGxK2kApNDY
lTQAUmjsShoAKTR2JQ2AFBq7kgZACo1dSQMghcaupAGQQmNX0gBIobEraQCk
0NiVNABSaOxKGgApNHYlDYAUGruSBkAKjV1JAyCFxq58JzVA+3T1JWkApNDY
lTQAUmjsShoAKTR2JQ2AFBq7kgZACo1dSQMghcaupAGQQmNX0gBIobEraQCk
0NiVNABSaOxKGgApNHYlDYAUGruSBkAKjV1JAyCFxq6kAZBCY1fSAEihsStp
AKTQ2JU0AFJo7Mp3UgO0T1dfkgZACo1dSQMghcaupAGQQmNX0gBIobEraQCk
0NiVNABSaOxKGgApNHYlDYAUGruSBkAKjV1JAyCFxq6kAZBCY1fSAEihsStp
AKTQ2JU0AFJo7EoaACk0diUNgBQau5IGQAqNXUkDIIXGrqQBkEJjV28HS58I
AL109SVpAKTQ2JU0AFJo7EoaACk0diUNgBQau5IGQAqNXUkDIIXGrqQBkEJj
V9IASJHU2LvtZr06vm1ttd5sdz8fs/k+otN6W+6dlAbAa8tp7O26Y/qsNj+M
MPML4DmFNPZhDK0Oe66Pvdjhlp83Yb3rnR8ckgYAIY29Hzcne6Xjjuzs1uHL
XY6+jDQACGns7vF1uH3sDqx3eoWkAcB7SGN/bbQ69llf/2DcALu2a4tIA4D3
jMbu237dsgHbT6+eQxLSAOBTQmP377L6J9vVpXoPSEgDgE8JjT3b/LryyteX
hDQA+JTQ2HPNrx/HV0QaAHxKaOyZXv8aMOzO3tt88xkDcCdZLT3L9YdD9moR
aQDwHtLYs7z/a8isi0gDgPeUxp7h8zcGbdUy0gAgprGPn3+4vvHzD4dd6RGS
BgA5jd39QfLn06t3SzbslbKYNABeXlJjD/j+L/ML4EVo7EoaACk0diUNgBQa
u5IGQAqNXUkDIIXGrqQBkEJjV9IASKGxK2kApNDYlTQAUmjsShoAKTR2JQ2A
FBq7kgZACo1dSQMghcaupAGQQmNXxw+3X/pEAOilqy9JAyCFxq6kAZBCY1fS
AEihsStpAKTQ2JU0AFJo7EoaACk0diUNgBQau5IGQAqNXUkDIIXGrqQBkEJj
V9IASKGxK2kApNDYlTQAUmjsShoAKTR2JQ2AFBq7kgZACo1dSQMghcaupAGQ
QmNXvpMaoH26+pI0AFJo7EoaACk0diUNgBQau5IGQAqNXUkDIIXGrqQBkEJj
V9IASKGxK2kApNDYlTQAUmjsShoAKTR2JQ2AFBq7kgZACo1dSQMghcaupAGQ
QmNX0gBIobEraQCk0NiVNABSaOxKGgApNHYlDYAUGrt6O1j6RADopasvSQMg
hcaupAGQQmNX0gBIobEraQCk0NiVNABSaOxKGgApNHYlDYAUGruSBkAKjV1J
AyCFxq6kAZBCY1fSAEihsStpAKTQ2JU0AFJo7EoaACk0diUNgBQau5IGQAqN
XUkDIIXGrqQBkEJjV76TGqB9uvqSNABSaOxKGgApNHYlDYAUGruSBkAKjV1J
AyCFxq6kAZBCY1fSAEihsStpAKTQ2JU0AFIkNfZuu1mvjm+7Xq03292Yg9er
Hw9OSgPgteU09nb9dmm1GTLCdptVx7EdB+ekAfDq7tPYu+2YrdGQBfcTaHXY
Nn3sxVYDJ9hh8K3Wh5PqPdj8Akhxn8b+HBmrUU/vXbcfX+vtxZ9yeWv3oRdj
7uvgs5vNL4AU95tfP26Ohm/SusfX4fbrf0jPod3ML4AU92rs75ecOsbL4VqK
gVNlPw477t25iRp2aCfzCyDFPRv7OMPqK0/1KsCBY6V/D/XjBqzc4eTqRdcf
AoS7c2Mfr5T4mBgDrl/v1r/L+vHZwcOh9cJ71x8CPIEHNPb2ZHZ87sVGXtcx
eX6dbQJ/3wV27gDNL4AUd33+cNux7Rn2jq0TM8yvy4M7L140vwBS3Kexzz7s
4mvr0/Fy2MDVbn/9az+lhs6+s1k75iQBeIQ7t/T3W4ZPX+b6fuJu1Ay7/frD
Kxu0nvk1+KQAWNK95lf/BRplhg19KnHC+7/63+PcNfvML4AUyzT2uHcVT/r8
jb47ef0LINpyjf25Rxs6v74//3A9+vMPvw/d1HehdR5sfgGkiGns7s+QPx9A
3butbde7v7o2bjFpALy8pMYe8P1fvU8p/n7s98dv9Fw+kpQGwGvT2JU0AFJo
7EoaACk0diUNgBQau5IGQAqNXUkDIIXGrqQBkEJjV9IASKGxK2kApNDYlTQA
UmjsShoAKTR2JQ2AFBq7kgZACo1dHT8ceOkTAaCXrr4kDYAUGruSBkAKjV1J
AyCFxq6kAZBCY1fSAEihsStpAKTQ2JU0AFJo7EoaACk0diUNgBQau5IGQAqN
XUkDIIXGrqQBkEJjV9IASKGxK2kApNDYlTQAUmjsShoAKTR2JQ2AFBq7kgZA
Co1dSQMghcau3g6WPhEAeunqS9IASKGxK2kApNDYlTQAUmjsShoAKTR2JQ2A
FBq7kgZACo1dSQMghcaupAGQQmNX0gBIobEraQCk0NiVNABSaOxKGgApNHYl
DYAUGruSBkAKjV1JAyCFxq6kAZBCY1fSAEihsStpAKTQ2JXvpAZon66+JA2A
FBq7kgZACo1dSQMghcaupAGQQmNX0gBIobEraQCk0NiVNABSaOxKGgApNHYl
DYAUGruSBkAKjV1JAyCFxq6kAZBCY1fSAEihsStpAKTQ2JU0AFJo7EoaACk0
diUNgBQau5IGQAqNXflOaoD26epL0gBIobEraQCk0NiVNABSaOxKGgApNHYl
DYAUGruSBkAKjV1JAyCFxq6kAZBCY1fSAEiR1Ni77Wa9Or7terXebHcDj9yu
3zqtt6f3S0oD4LXlNHbnDFpthoyw3WbVcaz5BRAspLEPE2h12HN97MVWgyfY
1+g7H1YdQtIAIKSx9+PrbALtd2Q/zqWv+w0ZdBlpABDS2N3j63D7T4Np2L1+
F5EGAO8hjd37/N+gndX+6E29+mO17jwmIg0A3jMau2/7NWxr1XvxRsdxCWkA
8Cmhsft3Wf2T7fzok2s/doed2PmaCWkA8CmhsSfNr/1dLo7uvPgjIQ0APiU0
9rT915hVE9IA4FNCY097/WvMqmcvkN18xgDcQ1xLT7v+sEfP/Lr5JAF4pIjG
nvD+r/69m+cPAZJlNPaEz9/ouVP3ZR0ZaQAQ09jHzz9cj/78w4tDP449vJHZ
5/cCpIpp7O63IZ9Pr87dVs87mDsmX0waAC8vqbEHfP9X71OKn3uu70+P+t6L
nUpKA+C1aexKGgApNHYlDYAUGruSBkAKjV1JAyCFxq6kAZBCY1fSAEihsStp
AKTQ2JU0AFJo7EoaAIv75VTf3TR2JQ2Aef0y3sCVNXYlDYAf3WkejaWxK2kA
r6mRkTSKxq6OHw689IkAzCBuJA2kqy9JA2jcs46kG2jsShrAIkylG2jsShrA
vEyl+9HYlTSAgQymxWnsShqAwZRCY1fSgOdmMD0TjV1JA6KZTS9FY1fSgGaZ
TZzR2JU0YClmE2Np7EoacCd2T8xOY1fSgCmMJx5JY1fSgOtMKNqhsStpwPvV
IbX0qcE3jV1Jg9dhSJFOY1fS4MkYUjwxjV1Jg1DmFC9IY1fSoH3mFHzR2JU0
aIc5Bddp7EoaLMWogrE0dvV2sPSJ8MyMKphIV1+SBvdgWsE9aOxKGkxnWsFj
aOxKGtzAwIJFaOxKGgxkWsHiNHYlDa4ws6ApGruSBmfMLGiWxq6kwbuZBSE0
diWNV2ZsQRaNXUnjBRlbEEpjV9J4HcYWpNPYlTSenjdqwdPQ2NX1NC7fpnon
D/t5X4eQ4fmYX1ULaTxsSs5i6bR6JZ4zMEoLjd0OaYz1sEE5i6XTAuaksStp
xDG/4GVp7Eoaz8QUg+emsStpPCtTDJ6Pxq6k8fRMMXgaGrvyndSvwxSDXLr6
kjRekEEGoTR2JY1XZpBBFo1dSYN3gwxCaOxKGlQu9oCWaexKGlxhlkFTNHYl
DQayNYPFaexKGtzAm6NhERq7kgazMNHgATR2JQ3u4XKcmWgwncaupMFjmGgw
ncaupMGCOoeauQZ9NHYlDVpjqEEfjV1JgxTmGmjsShqk65trRhvPR2NX0uBZ
mWs8H41dSYMXdGW0mW60TGNX0oAzphvN0tiVNGAU040FaexKGjCj69PNjGMi
jV29HSx9IvASDDhuo6svSQOaMmTAmXEvS2NX0oA4ZtzL0tiVNOApDZxxxlwW
jV1JA16cMRdEY1fSAIawoWuBxq6kAcxr+KQz7MbS2JU0gKWMmnSG3bvGPiUN
IIJh957V2LvtZr06vm1ttd5sd7ets/lcZbW5PDopDYBhxg67lHmX09jb9dul
riH0g6/pZX4BdLth3i0y8kIa+3vo7PdcH3ux/jE0YCHzC2A2i8y7jMbeT531
9uTW/Y7s7NYB65hfAAubPukiGrt7fF17IavT17z72MJ5/QsgXkRjfw2ejn3W
YSINGWDf93X9BkC+hMbu236N2YDVSWd+AeRLaOz+XVb/ZLu2gvkFkC+hsafO
r/PjzS+AfAmNPWl+ddzF/ALIl9DYE17/6jz06vyq5jh5AGYT19I3X39Y3+/V
7fTYiDQAeA9p7Jvf/2V+ATyrjMae6/M36mpe/wJIFtLYx88/XE/8/MPvxcwv
gGQxjd39VOD5EBq0JTO/APIlNfaA7/8yvwBehMaupAGQQmNX0gBIobEraQCk
0NiVNABSaOxKGgApNHYlDYAUGruSBkAKjV1JAyCFxq6kAZBCY1fSAEihsStp
AKTQ2JU0AFJo7EoaACk0dnX8cPulTwSAXrr6kjQAUmjsShoAKTR2JQ2AFBq7
kgZACo1dSQMghcaupAGQQmNX0gBIobEraQCk0NiVNABSaOxKGgApNHYlDYAU
GruSBkAKjV1JAyCFxq6kAZBCY1fSAEihsStpAKTQ2JU0AFJo7EoaACk0duU7
qQHap6svSQMghcaupAGQQmNX0gBIobEraQCk0NiVNABSaOzqehqy6iSWTmLp
I5lOYumkk4d7QFbPF/jz/USzEEsfyXQSSyfza7iU+TXXv7V2TsZPdNd12llk
rnXaWWSuddpZZK51HrCI+VWZX9GLzLVOO4vMtU47i8y1TjuLzLVOO4vMtY75
9WBvAORYemgAAAAAAAAAAPCkdtvNenW8TGW13mx3Mx879E+YciazayaW3+92
vN9KLF3HbD6PWG0WDKalZHbb8huz8AOpnViaqpeJ53PDsVceI60lM8J2/XZp
WBF8BfLTsT33Wm9nPJP5tRLLdt11t674HqKVWLqXXnJ+NZNM9/2WyqbxWBb8
jbl7Mt3HdNyrqeId5fuH2g/cj0E8tAqGHbu/18fv0+G23SGuk1+xKWcyu2Zi
2d92crfD7+7jJ1gzsXQvveBjrp1kDjd+33HBB1I7sTRVLxPP55Zj+x8jrSUz
xv7cz6ph/wvwQz8OO/br//dkVo6dciazayWWw4Pz/PfoxWPpXHnRR1wzyVz/
jXl0PM3E0la9TDyfG4698hhpLZkx+oph0IsJt3TN2cEXj7vbzmRuzcTS2zqL
1FEzsXStu13y9a9mkhl41IM0E8vE1eb32GSuPUaaKt6xenthSD9eG9w//dwX
95p0JnNrJ5bJd5xTg7F8/5NFH2/NJHNl0C+gmVimrXYHj0zm+mOkqeIdqX9k
D2uDw4sz45443R2uSPhxez/8TGbVTizX/4RGtl/LxVJjWHJ+NZNM+eNOLihb
5nqyZmKZsNp9PDCZHx4jTRXvWP01OHRjvbu8Ou7jsdL3I5fLXD6in/dMZtRO
LD2r97zGcWetxXJ6Pks+3JpJ5nAim65rVh+eTTOx3LTaPT0smR8fI00V71iT
T37X9UDp/Z34vPen4/2+/07YVIztxNJ/dgs0dVuxnJ9N9PyaK5na4CcX5O3v
+9gyaiaWW1a7qwclM+Ax0lTxjjXt5I/XXXY8Un7okeN+9/AHNBVjO7F0nNpq
v/awH2VODcXS8Qfmzq8ZkzleO9/zNNJj26iZWKatdgePSGbYY6Sp4h1r0pOf
fT/54L9B1CfBmnoatp1Yuv7RYk9JNxNL5zGxr3/NmcyVvfkCddRMLJNXm9v9
kxn6GGmqeEebcPFJ/4837jfs5G+OjVwG004sx1uX+7vit0ZiOczxfgu90rN4
MtcOWaKpW4ll+mpzu3cywx8jTRXvWBMu/h+48fxpvh/+yYQzmV87sdSbFvvI
qLPzWDqWBudXI8lce5pwiTpqLJaG5te9kxn+GGmqeEfrPvtBT5b33alz5355
t/PbJ5zJ/NqJ5fhpOC38JjUUS8+5tfXc6gLJ3B7gPTQfy5Wn6+/r/sn0/qFn
d2iqeEe7eC1w+Nsiji8WX7/SaegrpxPOZH6txLLY46tbK7H0ntpiQTWTzPfd
jm/5WvDJ52ZiGbja49w/mb4/83z9pop3vO6t5vmpd87jvl3q+YQvl/XWe11e
4DrkTB6kiVi67/Ht8Q+8JmLpP7EFH3HtJNPzjQXL/F26mVgGrvY490+m+0/s
vfKjlWBGG/DlL72b1rMvGur/hp5B32DV1NfQLB7LT+NrmUpaPJbus1p6fr23
lMzFN8a99ONo7GoP84BkTo7pf4w0VbwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAXLXbbtar1dvRarXebHdLnxUAXLFdl8lVrTZGGACN2q6/
ZtX6e7+1O0609XbJUwOAPl/j62Kntdus7MAAiGN+AZBit9ttP2zW35dymF8A
NOvz5S5XcACQZX/9xu8Xza/W6/Vms91+7MQ8fwhAw/rmlPkFQMu+dl8Xl8kf
LqA3vwBo0uHZw+93f/3+URxe/wKgbfsnCi+u29h+3e4NzAC06uT6w9Xhgzh6
3tgMAAAAAAAAAAAAAAAAANCOvwGO8RDz
    "], {{0, 551}, {576, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Software" -> 
        "Created with the Wolfram Language for Students - Personal Use Only : \
www.wolfram.com"], "Comments" -> 
      Association[
       "Software" -> 
        "Created with the Wolfram Language for Students - Personal Use Only : \
www.wolfram.com", "Creation Time" -> 
        DateObject[{2022, 11, 15, 12, 10, 7.}, "Instant", "Gregorian", -3.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{576, 551},
  PlotRange->{{0, 576}, {0, 551}}]], "Output",
 CellChangeTimes->{3.8774363921452923`*^9, 3.8774365484986305`*^9, 
  3.8774419800128636`*^9, 3.8774459033235655`*^9, 3.877513807444743*^9},
 CellLabel->"Out[26]=",ExpressionUUID->"464a3096-9cd2-49c7-bb51-976884fb7e5a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solPeriodo2", "=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "2"}], "]"}], 
       "\[Equal]", "x"}], ",", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"Nest", "[", 
          RowBox[{
           RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "2"}], "]"}], ",", 
         "x"}], "]"}], "\[Equal]", 
       RowBox[{"-", "1"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "0.5"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "0.8"}], "}"}]}], " ", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8774352802241826`*^9, 3.877435322522798*^9}, {
  3.877435421963425*^9, 3.8774355112211246`*^9}, {3.877435602492612*^9, 
  3.8774356281637897`*^9}, {3.8774356889999266`*^9, 3.8774357327844534`*^9}, {
  3.877435932761818*^9, 3.877435934962845*^9}, {3.8774365908840485`*^9, 
  3.877436595990507*^9}, {3.8774383517854*^9, 3.8774383842660947`*^9}},
 CellLabel->"In[27]:=",ExpressionUUID->"bf9e19b7-2fc8-47c0-902a-08c2170170c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "0.44479351846079834`"}], ",", 
   RowBox[{"a", "\[Rule]", "0.8332663537456857`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8774355565376263`*^9, {3.877435602914383*^9, 3.877435629335392*^9}, {
   3.877435693561316*^9, 3.877435734612678*^9}, 3.8774359354935555`*^9, 
   3.8774365972557993`*^9, {3.8774383539568033`*^9, 3.877438385390829*^9}, 
   3.8774419801534414`*^9, 3.8774459034172945`*^9, 3.8775138076499133`*^9},
 CellLabel->"Out[27]=",ExpressionUUID->"91b7d677-c8ea-40b6-988b-5297af361718"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"graficoAux", " ", "=", 
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{"graflambda", "[", 
      RowBox[{"0.857", ",", "0.865", ",", "1000", ",", "1024", ",", "2048"}], 
      "]"}], ",", 
     RowBox[{"Evaluate", "[", "optam", "]"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<a\>\"", ",", 
        "\"\<\!\(\*StyleBox[\"x\",FontSlant->\"Italic\"]\)\>\""}], "}"}]}], 
     ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0.35", ",", "0.88"}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"\"\<Auxiliar.png\>\"", ",", "graficoAux"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "graficoAux", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Import", "[", "\"\<Auxiliar.png\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.8774365214063587`*^9, 3.8774365242977853`*^9}, {
  3.877436727130474*^9, 3.8774367535594625`*^9}, {3.877436955054597*^9, 
  3.8774369556325274`*^9}, {3.8774371756802053`*^9, 3.877437176055589*^9}, {
  3.877437259166998*^9, 3.877437259432562*^9}},
 CellLabel->"In[28]:=",ExpressionUUID->"e3616134-1303-45b6-b547-9c2976538085"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3U1u61p2BeCHpJNmppBZBGklzXQryACqkHIhnQpQFSBIUwPRNDQNDUPD
uOV7bdnbMilRPzzkWfo+IEHiJ9Jcx7prmyIl/9Mf/ud3L3/322+//fUfXv/X
737/f//2l7/8/v//4x9f/5///PNf//tPf/7jf/37n//3j3/641/++Q9///rF
f3l97L++/s/P//tHlhcAnsDS0+bxzoeaL/Ksi9njYVuQZnuedec97nnWnfe4
51l3vtSeza9m33e1O+9xz7PuvMc9z7rzHvc868573POsOze/Higyco/PvVlZ
kBM9Loi6bilvQTr9QZwnFPew1M1Y6pbyVjsv0Y/QUABUkVUfGQqAKrLqI0MB
UEVWfWQoAKrIqo8MBUAVWfWRoQCoIqs+MhQAVWTVR4YCoIqs+shQAFSRVR8Z
CoAqsuojQwEs5bflnDmqyKqPDAVEWnA0dOHM0kVWfWQoeGZLl+iMll7ajkVW
fWQouM3S9fwYS68iaxRZ9ZGhWJulG/0KSy8VzCKy6l+Olj4QZrH0NPi09ErA
80ot+chQXTA1gGYiqz4yVGOGC7BykVW/tlAPPPVY0NKrCPDF2qr+Ic6HUv63
WWTdYlYPUi34z/8J5xfdmfsfCCeW/oHTTtfPlsiqjwwFzdzfaXRq6afedSKr
PjIUwKyWHp7DzhxwZNVHhgKgiqz6yFAAVJFVHxkKgCqy6iNDAVBFVn1kKACq
yKqPDAVAFVn1kaEAqCKrPjIUAFVk1UeGAqCKrPrIUABUkVUfGQqAKrLqX46W
PhAAHi+45CNDAVBFVn1kKACqyKqPDAVAFVn1kaEAqCKrPjIUAFVk1UeGAqCK
rPrIUABUkVUfGQqAKrLqI0MBUEVWfWQoAKrIqo8MBUAVWfWRoQCoIqs+MhQA
VWTVR4YCoIqs+shQAFSRVR8ZCoAqsuojQwFQRVZ9ZCgAqsiqD/7T0gAEl3xk
KACqyKqPDAVAFVn1kaEAqCKrPjIUAFVk1UeGAqCKrPrIUABUkVUfGQog2G8j
zmwSWfWRoQBWbmwGTXHDt1ug6g/73Xbz8e6zzXa3Pzx4W/ML4CHmnkH3aF71
++3Ld5vdlBF22G2mbWt+AUy3qqk0XduqP06gzfG86fV8ajNxgl2xrfkFcEYv
E+q8plX/PoK2+y9ffT8jO/nqPduaX0C/rrtudLel496uZdUPj6Dj1y+cgb1N
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
xZ3uGXwmIKxQZNVHhmINHjIETUN4iMiqjwxFmMeOQgORJxRZ9ZGh4KI5ZqLh
yGpFVn1kKFjQrJPRfOQ2kVUfGQqyNRiRZmWYyKp/OVr6QIDVaTkojcv5pJZ8
ZCigU+0n5sS5udSBXeXM8UdWfWQogOnmmBdrE1n1kaEA5tbgpOmBIqs+MhRA
Lx41B8+PwsiqjwwFQBVZ9UJxD0vdjKVuKW+18xL9EIr7WOpmLHVLeaudl+jH
pVDzRZ51MXs8bAvSbM+z7rzHPc+68x73POvOl9qz+dXs+6525z3uedad97jn
WXfe455n3XmPe5515+bXA70A8ASWnjYAAAAAAAAAAAAA/HLY77abj5s8N9vd
/vDYbffb4ftJt/sHHkkXZl/qX4/bbi4/zlI/YNtJS/1rZx+P2gQu9Y8VrfbX
LXY/H7/Z5a03R4PDZdqP/O3pcXHb4Ye9nM6viXvr2GJL/e1xdxxJH9ay1Pvt
8KO+/erWtbWs9vA2Sc9rvvj8Eb//LvP6u9DUH/rkbd+e3Rf+xd5zJF1osNTH
Gnltx/evDj7OUt+/7bSlfn/U54M+H3Xp30M/VrPaw7uOeVbzzfvP+OSf0vuz
ZdrAubzt25cuPInuOZIuzL/U748aOdf6/LKlvnvbaUt9/lERS/1jPas9uGfz
K9nw02fiy8bDz57vu5z2GvTUvfVq/qWeulZ3HUkPVrPUo/066Te6TqxmtYf2
u095TjNk9IW9Kf/Azv3uVLd8/ya7epF2sx15ffvi3no1/1JPepX23iPpwXqW
+vwR9r/SP61wtT+3j/mdjAHjv9hcc8504bXr0Zs3hq+ShV6UmX+py34OJ78q
fLlN694jWb31LPX579D9Qv+yvtWuqxvylGbQ+L+jya9Ffb+96vTU6uPWpM+n
6OH4LDz51hP21qv5l/r4HXZDN7x9u6XgniNZufUs9cjeR67m9Gltqz10BTJk
qTlx93PvMPSc+jpyrriGPWFv3Zp/qcstzF9udztudvwG5lezpR4/upxKXddq
D9+qFLPYfHHfc+/j1teBJ9WEZ8zJN79zb2s3/1J/3GL87Xt8/VXB/Gq21AOH
tnnf99Wp1mpFqz3wDc2vZHe9dj32xL3tNrh797Z28y/1mV/svzzO9a9mSz30
X/pf369Ws9qDBxLylGbYHfcOjT8zJr9u8K1Ug08K5l/qMws19KuC+w+HPHip
P74a9ErCqZWs9vhtYkeBa//s7njvxsTXDcaffF92EP+iVoOlHn/tavBdtd7/
NeDBS123jHrVsFjJaptfz+iO986PPejkho2Rh53e1jFxbx1bbKnHPs7A528M
ePBS/zzzSi/PFa32yLEFL/6z+3YBdfq7rj6uq56/Kej7JdrBW4cm7q1jLZd6
922th96Sd8OR9GEtS53z29c5a1nt0UMLX//nNnziffojH/xVZ+yc/fRtXcMP
O/0WE/fWsfmX+sfIx52PnP7GrvQ6lrrc+T0o4teyn1ax2uMHFvS8ZsCEv78z
eqZ/8jd5xv/a1Nc/gTT8OQVT99avJku9m7TW/v7XzEt9aXzlzK8fK1jt4aMy
vwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC40WG/2242Lx82
m+1uf1j6qADgjP22TK5qszPCAFip/fZtVm0/z7cOHxNtu1/y0ABgzNv4+nam
ddhtnIEB0B3zC4BeHA6H/avd9vNWDvMLgNX6ebnLHRwA9OX9/o1fN81vttvt
brffv56Jef0QgBUbm1PmFwBr9nb29e02+eMN9OYXAKt0fPXw891fvz6Kw/Uv
ANbt/YXCb/dt7N++7g3MAKzVl/sPN8cP4hh5YzMAAAAAAAAAAAAAAAD9+hvY
6joK
    "], {{0, 570}, {576, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "Software" -> 
        "Created with the Wolfram Language for Students - Personal Use Only : \
www.wolfram.com"], "Comments" -> 
      Association[
       "Software" -> 
        "Created with the Wolfram Language for Students - Personal Use Only : \
www.wolfram.com", "Creation Time" -> 
        DateObject[{2022, 11, 15, 12, 12, 28.}, "Instant", 
          "Gregorian", -3.]]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{576, 570},
  PlotRange->{{0, 576}, {0, 570}}]], "Output",
 CellChangeTimes->{3.877436674300846*^9, 3.877436820651559*^9, 
  3.8774370339020853`*^9, 3.8774372500298615`*^9, 3.877437326373376*^9, 
  3.877442045216381*^9, 3.8774459657585907`*^9, 3.877513948360809*^9},
 CellLabel->"Out[31]=",ExpressionUUID->"9c7cbe2a-ea29-4056-a5bb-27241a1f22a0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solPeriodo4", "=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "4"}], "]"}], 
       "\[Equal]", "x"}], ",", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"Nest", "[", 
          RowBox[{
           RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "4"}], "]"}], ",", 
         "x"}], "]"}], "\[Equal]", 
       RowBox[{"-", "1"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "0.8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "0.858"}], "}"}]}], " ", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8774357443815937`*^9, 3.877435756474759*^9}, {
  3.8774359382900248`*^9, 3.8774359390865307`*^9}, {3.8774368892048855`*^9, 
  3.8774368961720247`*^9}, {3.8774378721891937`*^9, 3.8774378758348103`*^9}},
 CellLabel->"In[32]:=",ExpressionUUID->"76af9ee1-dfd7-42e8-9892-1eaad2a9a732"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "0.7920777737618636`"}], ",", 
   RowBox[{"a", "\[Rule]", "0.8586090599021184`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8774357574086504`*^9, 3.8774359410934944`*^9, 
  3.8774369020971913`*^9, 3.8774378771153307`*^9, 3.8774420453569736`*^9, 
  3.8774459658523183`*^9, 3.877513948493359*^9},
 CellLabel->"Out[32]=",ExpressionUUID->"5b3a388c-fdd4-4e9b-86ae-c4407eded11a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solPeriodo8", "=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "8"}], "]"}], 
       "\[Equal]", "x"}], ",", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"Nest", "[", 
          RowBox[{
           RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "8"}], "]"}], ",", 
         "x"}], "]"}], "\[Equal]", 
       RowBox[{"-", "1"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "0.8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "0.864"}], "}"}]}], " ", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8774357643322325`*^9, 3.8774357727932463`*^9}, {
  3.8774358065029383`*^9, 3.877435807174658*^9}, {3.877435944782467*^9, 
  3.8774359531677685`*^9}, {3.8774369190951877`*^9, 3.877436924859071*^9}, {
  3.877437878996369*^9, 3.8774378832185855`*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"d1a2faf9-ce94-4209-9248-18c285191bb7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "0.8074899415913083`"}], ",", 
   RowBox[{"a", "\[Rule]", "0.8640841737087172`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.877435768002104*^9, 3.8774357738551083`*^9}, 
   3.8774358074714985`*^9, {3.877435948328508*^9, 3.8774359538773913`*^9}, 
   3.877436925630312*^9, 3.8774378838274164`*^9, 3.87744204541946*^9, 
   3.8774459658991814`*^9, 3.877513948577326*^9},
 CellLabel->"Out[33]=",ExpressionUUID->"2755052d-3f09-4ec5-a007-07ef97dd3d2c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solPeriodo16", "=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "16"}], "]"}], 
       "\[Equal]", "x"}], ",", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"Nest", "[", 
          RowBox[{
           RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "16"}], "]"}], ",", 
         "x"}], "]"}], "\[Equal]", 
       RowBox[{"-", "1"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "0.8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "0.86"}], "}"}]}], " ", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877435785560295*^9, 3.877435811529153*^9}, {
  3.8774374936115274`*^9, 3.877437499817752*^9}, {3.8774378865099354`*^9, 
  3.8774378891349277`*^9}, {3.8774401132392673`*^9, 3.8774401251230793`*^9}},
 CellLabel->"In[34]:=",ExpressionUUID->"8050d72d-16e7-4e54-ba28-82da7d9218cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "0.8128376935100243`"}], ",", 
   RowBox[{"a", "\[Rule]", "0.8652589606966342`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.877435795722293*^9, 3.877435811856757*^9}, 
   3.8774359596591587`*^9, {3.877437495122532*^9, 3.8774375006538043`*^9}, 
   3.877437890087222*^9, {3.8774401144507065`*^9, 3.8774401256058397`*^9}, 
   3.8774420454663634`*^9, 3.877445965946045*^9, 3.877513948660503*^9},
 CellLabel->"Out[34]=",ExpressionUUID->"af82418b-6d11-4d29-b8e7-308a2efa7af2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solPeriodo32", "=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "32"}], "]"}], 
       "\[Equal]", "x"}], ",", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"Nest", "[", 
          RowBox[{
           RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "32"}], "]"}], ",", 
         "x"}], "]"}], "\[Equal]", 
       RowBox[{"-", "1"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "0.815"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "0.8635"}], "}"}]}], " ", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8768955153266497`*^9, 3.876895516544733*^9}, {
   3.877428696298486*^9, 3.8774287022814956`*^9}, {3.877428777614584*^9, 
   3.8774289515190134`*^9}, {3.877428983365497*^9, 3.8774289863487587`*^9}, {
   3.877429094960929*^9, 3.877429097257807*^9}, {3.877429159268097*^9, 
   3.8774291734502497`*^9}, {3.877429475022588*^9, 3.8774295030061235`*^9}, 
   3.87743511860633*^9, {3.8774359659465103`*^9, 3.877435976845973*^9}, {
   3.877437504497139*^9, 3.877437509248808*^9}, {3.877437892350645*^9, 
   3.8774378959591923`*^9}, 3.8774400094089355`*^9, {3.8774401326054554`*^9, 
   3.877440164383638*^9}, {3.877440226193448*^9, 3.8774402309570704`*^9}},
 CellLabel->"In[35]:=",ExpressionUUID->"7bf534a0-948f-4bc7-bdb7-4701410ef6a1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "0.8184471581598718`"}], ",", 
   RowBox[{"a", "\[Rule]", "0.866708824320074`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.877435973207388*^9, 3.8774359772202897`*^9}, 
   3.877437516894225*^9, 3.8774378965058584`*^9, {3.877440136230023*^9, 
   3.8774401651959853`*^9}, {3.8774402283419795`*^9, 3.877440231503779*^9}, 
   3.877442045575706*^9, 3.877445966055396*^9, 3.877513948881892*^9},
 CellLabel->"Out[35]=",ExpressionUUID->"32050988-ba61-478e-bb0f-907704c18fcc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solPeriodo64", "=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "64"}], "]"}], 
       "\[Equal]", " ", "x"}], ",", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"Nest", "[", 
          RowBox[{
           RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "64"}], "]"}], ",", 
         "x"}], "]"}], "\[Equal]", 
       RowBox[{"-", "1"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "0.8"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "0.86677"}], "}"}]}], " ", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.877442716452141*^9, 3.8774427540738726`*^9}, {
  3.8774427878749437`*^9, 3.8774427902345853`*^9}, {3.8774428465543623`*^9, 
  3.8774428469765315`*^9}, {3.877513400668776*^9, 3.8775134053368874`*^9}},
 CellLabel->"In[36]:=",ExpressionUUID->"fafc9cec-715c-48b3-b9b5-f2a172df5456"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "0.8000546189220133`"}], ",", 
   RowBox[{"a", "\[Rule]", "0.8667615118253572`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.877442724620713*^9, 3.877442755396551*^9}, 
   3.8774427923649836`*^9, 3.8774428484793725`*^9, 3.877445966898946*^9, 
   3.877513950791203*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"3c96e2d4-e65a-4573-beec-91c441e53542"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"solPeriodo128", "=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{
         RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "128"}], "]"}], 
       "\[Equal]", "x"}], ",", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"Nest", "[", 
          RowBox[{
           RowBox[{"f", "[", "a", "]"}], ",", "x", ",", "128"}], "]"}], ",", 
         "x"}], "]"}], "\[Equal]", 
       RowBox[{"-", "1"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "0.817"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "0.86677"}], "}"}]}], " ", "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.8774360678144455`*^9, 3.877436071079858*^9}, {
  3.8774361660729256`*^9, 3.877436171168255*^9}, {3.8774376113901095`*^9, 
  3.8774376148145075`*^9}, {3.8774379052783623`*^9, 3.877437908949007*^9}, {
  3.877441659546398*^9, 3.877441688221674*^9}, {3.877452207695716*^9, 
  3.8774522144260817`*^9}},
 CellLabel->"In[39]:=",ExpressionUUID->"a1d6d7f8-05eb-4465-9ba4-62e7dd58cbbc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", "0.8169199569074551`"}], ",", 
   RowBox[{"a", "\[Rule]", "0.8666755810390956`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8774360842717247`*^9, 3.8774361833880005`*^9, 3.877437628034669*^9, 
   3.877437921104684*^9, {3.877441682006285*^9, 3.8774417003486876`*^9}, 
   3.877442058886591*^9, 3.877445978130725*^9, 3.8774522310761633`*^9, 
   3.8775139787574844`*^9},
 CellLabel->"Out[39]=",ExpressionUUID->"aba016fb-23df-4175-8be8-9e4c6f7cca28"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Exerc\[IAcute]cio", " ", "4"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8768955215561886`*^9, 3.8768955225503073`*^9}, {
  3.8768955607057276`*^9, 3.87689556287236*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"bd1e3583-71f6-48c9-b793-8e3cbe259841"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Construo", " ", "uma", " ", "tabela", " ", "com", " ", "os", " ", 
    "valores", " ", "do", " ", 
    RowBox[{"par\[AHat]metro", " ", "'"}], 
    RowBox[{"a", "'"}], " ", "obtidos", " ", "no", " ", "item", " ", 
    "anterior", " ", "e", " ", "o", " ", "per\[IAcute]odo", " ", 
    RowBox[{"correspondente", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListaValores", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", 
        RowBox[{"a", "/.", 
         RowBox[{"solPeriodo1", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"2", ",", 
        RowBox[{"a", "/.", 
         RowBox[{"solPeriodo2", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", 
        RowBox[{"a", "/.", 
         RowBox[{"solPeriodo4", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"8", ",", 
        RowBox[{"a", "/.", 
         RowBox[{"solPeriodo8", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"16", ",", 
        RowBox[{"a", "/.", 
         RowBox[{"solPeriodo16", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"32", ",", 
        RowBox[{"a", "/.", 
         RowBox[{"solPeriodo32", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"64", ",", 
        RowBox[{"a", "/.", 
         RowBox[{"solPeriodo64", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"128", ",", 
        RowBox[{"a", "/.", 
         RowBox[{"solPeriodo128", "[", 
          RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}]}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.876895570225606*^9, {3.8774377482617474`*^9, 3.8774377824960957`*^9}, {
   3.877437835677435*^9, 3.8774378662986927`*^9}, {3.8774379264009333`*^9, 
   3.877438019312011*^9}, {3.8774383302563148`*^9, 3.8774383347552624`*^9}, {
   3.8774383748133435`*^9, 3.8774383974619913`*^9}, {3.8774392591493425`*^9, 
   3.87743927073836*^9}, {3.877441837571866*^9, 3.8774418412752004`*^9}},
 CellLabel->"In[43]:=",ExpressionUUID->"31795560-03fd-466f-b42d-c5622edc9c80"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0.7199616829795346`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0.8332663537456857`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "0.8586090599021184`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"8", ",", "0.8640841737087172`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"16", ",", "0.8652589606966342`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"32", ",", "0.866708824320074`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"64", ",", "0.8655645755093344`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"128", ",", "0.8666755810390956`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.877437977359188*^9, 3.877438020233156*^9}, 
   3.8774383986648703`*^9, 3.877439271565835*^9, 3.877441759165348*^9, 
   3.8774420590584593`*^9, 3.877442303252378*^9, 3.877442763541495*^9, 
   3.877442797082952*^9, 3.877445978240033*^9, 3.877514005005427*^9},
 CellLabel->"Out[43]=",ExpressionUUID->"cf1874cd-6d14-4428-bfae-e0b86bb432cb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Uma", " ", "vez", " ", "definida", " ", "a", " ", "lista", " ", 
     "anterior"}], ",", " ", 
    RowBox[{
    "construo", " ", "a", " ", "lista", " ", "com", " ", "estimativas", " ", 
     "da", " ", "constante", " ", "de", " ", "\[Delta]", " ", "de", " ", 
     "Feigenbaum"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"delta1", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ListaValores", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"ListaValores", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ListaValores", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"ListaValores", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FeigenbaumDelta", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"FeigenbaumDelta", ",", 
      RowBox[{
       SubscriptBox["\[Delta]", "1"], "\[Rule]", " ", "delta1"}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"FeigenbaumDelta", ",", 
        RowBox[{
         SubscriptBox["\[Delta]", "i"], "\[Rule]", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ListaValores", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
            RowBox[{"ListaValores", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", "-", "1"}], ",", "2"}], "]"}], "]"}]}], ")"}], 
          "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"ListaValores", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}], "-", 
            RowBox[{"ListaValores", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ")"}]}]}]}], "]"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "2", ",", "7"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"SetPrecision", "[", 
    RowBox[{"FeigenbaumDelta", ",", "6"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8774380222036405`*^9, 3.877438321330985*^9}, {
  3.8774385343311386`*^9, 3.8774385663219547`*^9}, {3.8774386005384097`*^9, 
  3.877438692591291*^9}, {3.8774388996148186`*^9, 3.8774389273061914`*^9}, {
  3.8774389767629495`*^9, 3.8774390275691957`*^9}, {3.877439279324644*^9, 
  3.8774393384488063`*^9}, {3.8774394507119775`*^9, 3.877439544239893*^9}, {
  3.877439597496645*^9, 3.877439605030369*^9}, {3.8774396710697627`*^9, 
  3.877439677686793*^9}, {3.8774397613152494`*^9, 3.8774398062528*^9}, {
  3.877441771472124*^9, 3.8774418018248634`*^9}, {3.8774425241444397`*^9, 
  3.877442531818244*^9}, {3.8774523639060287`*^9, 3.8774523671596813`*^9}},
 CellLabel->"In[44]:=",ExpressionUUID->"55d83881-1fa2-48f6-be2a-27e348481ea3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SubscriptBox["\[Delta]", "1"], "\[Rule]", "4.4708986509473840343`6."}], 
   ",", 
   RowBox[{
    SubscriptBox["\[Delta]", "2"], "\[Rule]", "4.4708986509473840343`6."}], 
   ",", 
   RowBox[{
    SubscriptBox["\[Delta]", "3"], "\[Rule]", "4.6287085623479189422`6."}], 
   ",", 
   RowBox[{
    SubscriptBox["\[Delta]", "4"], "\[Rule]", "4.6605162152044785628`6."}], 
   ",", 
   RowBox[{
    SubscriptBox["\[Delta]", "5"], "\[Rule]", "0.8102741312523501493`6."}], 
   ",", 
   RowBox[{
    SubscriptBox["\[Delta]", "6"], "\[Rule]", 
    RowBox[{"-", "1.2670877258790036457`6."}]}], ",", 
   RowBox[{
    SubscriptBox["\[Delta]", "7"], "\[Rule]", 
    RowBox[{"-", "1.0299217961458475568`6."}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8774425324830613`*^9, 3.877442769467847*^9, 
  3.877442809848836*^9, 3.8774428669204874`*^9, 3.8774459782868977`*^9, 
  3.877514005074379*^9},
 CellLabel->"Out[48]=",ExpressionUUID->"d90ebaec-423f-4050-9599-0ae05737f925"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"At\[EAcute]", " ", 
    SubscriptBox["\[Delta]", "4"], " ", "as", " ", "estimativas", " ", 
    "obtidas", " ", "parecem", " ", "sim", " ", "tender", " ", "ao", " ", 
    "valor", " ", "esperado", " ", 
    RowBox[{
     SubscriptBox["\[Delta]", "Log"], ".", " ", "Entretanto"}]}], ",", " ", 
   RowBox[{"as", " ", "estimativas", " ", 
    SubscriptBox["\[Delta]", "5"], " ", "em", " ", "diante", " ", "divergem", 
    " ", "completamente", " ", "do", " ", "resultado", " ", 
    RowBox[{"esperado", ".", " ", "Isso"}], " ", "se", " ", "deve", " ", 
    "\[AGrave]s", " ", "dificuldades", " ", "de", " ", 
    "obten\[CCedilla]\[ATilde]o", " ", "de", " ", 
    "solu\[CCedilla]\[OTilde]es", " ", "convergentes", " ", "na", " ", 
    "an\[AAcute]lise", " ", "dos", " ", "pontos", " ", "fixos", " ", "de", 
    " ", "ciclo", " ", "64", " ", "e", " ", "128."}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8774420888978214`*^9, 3.877442202813139*^9}, {
  3.8775513779709444`*^9, 
  3.8775514208309345`*^9}},ExpressionUUID->"0dd2dca3-d6fe-4539-aa55-\
08c41066d80e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Exerc\[IAcute]cio", " ", "5"}], "*)"}]], "Input",
 CellChangeTimes->{{3.876895572252165*^9, 3.876895576637377*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"65e53383-0105-4d5f-8312-6e6c8d1cceb5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Come\[CCedilla]o", " ", "redefinindo", " ", "a", " ", "lista", " ", 
     "FeigenbaumDelta"}], ",", " ", 
    RowBox[{
    "com", " ", "elementos", " ", "entre", " ", "3", " ", "e", " ", "6"}], 
    ",", " ", 
    RowBox[{
    "a", " ", "fim", " ", "de", " ", "aproveitar", " ", "o", " ", 
     "car\[AAcute]ter", " ", "list\[AAcute]vel", " ", "da", " ", 
     "opera\[CCedilla]\[ATilde]o", " ", "de", " ", 
     RowBox[{"soma", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"delta1", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ListaValores", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"ListaValores", "[", 
         RowBox[{"[", 
          RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ListaValores", "[", 
         RowBox[{"[", 
          RowBox[{"3", ",", "2"}], "]"}], "]"}], "-", 
        RowBox[{"ListaValores", "[", 
         RowBox[{"[", 
          RowBox[{"2", ",", "2"}], "]"}], "]"}]}], ")"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FeigenbaumDelta", "=", 
     RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{"AppendTo", "[", 
       RowBox[{"FeigenbaumDelta", ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ListaValores", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}], "-", 
           RowBox[{"ListaValores", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "-", "1"}], ",", "2"}], "]"}], "]"}]}], ")"}], "/", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"ListaValores", "[", 
            RowBox[{"[", 
             RowBox[{
              RowBox[{"i", "+", "1"}], ",", "2"}], "]"}], "]"}], "-", 
           RowBox[{"ListaValores", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ")"}]}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "3", ",", "6"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SetPrecision", "[", 
     RowBox[{"FeigenbaumDelta", ",", "6"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8768955783742657`*^9, 3.8768955790856996`*^9}, {
  3.8774424405309286`*^9, 3.877442512263719*^9}, {3.8774425489976935`*^9, 
  3.877442551137921*^9}, {3.8774425836007557`*^9, 3.8774425877070093`*^9}, {
  3.877442874762151*^9, 3.877442986221735*^9}, {3.877443511017951*^9, 
  3.8774435229272227`*^9}, {3.877443560388232*^9, 3.877443560481959*^9}, {
  3.8774436141277657`*^9, 3.8774436492511115`*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"f4fe9562-460e-4d32-bb2b-5a5608707e3d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   SubscriptBox["\[Delta]", "Log"], "=", "4.669201609"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Diferencas", "=", 
  RowBox[{"FeigenbaumDelta", "-", 
   SubscriptBox["\[Delta]", "Log"]}]}]}], "Input",
 CellChangeTimes->{{3.877442959282301*^9, 3.8774429621059065`*^9}, {
  3.8774429963225927`*^9, 3.8774430024627104`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"c55e1eec-4381-4ed9-b9d7-d77749199e87"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "0.04049304665208098`"}], ",", 
   RowBox[{"-", "0.008685393795521357`"}], ",", 
   RowBox[{"-", "3.85892747774765`"}], ",", 
   RowBox[{"-", "5.936289334879003`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.877443003305844*^9, 3.8774435281287827`*^9, 
  3.877443563753135*^9, 3.877443618383021*^9, 3.8774436533402967`*^9, 
  3.877445978380625*^9, 3.877514005224127*^9},
 CellLabel->"Out[56]=",ExpressionUUID->"782c704a-befa-43d4-b813-137e25b36fe9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"auxiliarFeigenbaum", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "4", ",", "5", ",", "6"}], "}"}], ",", "Diferencas"}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dadosFeigenbaum", "=", 
  RowBox[{"auxiliarFeigenbaum", "//", "Transpose"}]}]}], "Input",
 CellChangeTimes->{{3.8774432617271104`*^9, 3.8774433107545567`*^9}, {
  3.8774435357813716`*^9, 3.8774435384676795`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"00dad599-7015-456e-aed1-ec1b76b05934"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", 
     RowBox[{"-", "0.04049304665208098`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", 
     RowBox[{"-", "0.008685393795521357`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"-", "3.85892747774765`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", 
     RowBox[{"-", "5.936289334879003`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8774433025140767`*^9, 3.877443311051396*^9}, {
   3.8774435313636613`*^9, 3.877443538811313*^9}, 3.877443569768997*^9, 
   3.8774436568666887`*^9, 3.877445978427492*^9, 3.877514005306272*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"627950a9-6f7e-441d-a8be-0e8143db8b9f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"aux", "[", "x_", "]"}], ":=", 
   RowBox[{"a", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", "b"}], " ", "x"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ajusteFeigenbaum", "=", 
   RowBox[{"NonlinearModelFit", "[", 
    RowBox[{"dadosFeigenbaum", ",", 
     RowBox[{"aux", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", "x"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ajusteFeigenbaum", "[", "\"\<BestFitParameters\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ajusteFeigenbaum", "[", "\"\<ParameterErrors\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ajusteFeigenbaum", "[", "\"\<AdjustedRSquared\>\"", "]"}]}], "Input",
 CellChangeTimes->{{3.8774433338428245`*^9, 3.877443407933919*^9}, {
  3.8774436907438498`*^9, 3.877443696940479*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"f7287458-9e89-4715-866b-ddf028cad108"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "226.43196377478745`"}], ",", 
   RowBox[{"b", "\[Rule]", "78.35455569909539`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.8774434087614355`*^9, 3.877443660038051*^9, 
  3.877443697968749*^9, 3.8774459784743557`*^9, 3.87751400545995*^9},
 CellLabel->"Out[61]=",ExpressionUUID->"8aa7d474-5be0-46f8-9016-033e8286ebba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.3251943487640592`*^97", ",", "9.001990763216912`*^99"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.8774434087614355`*^9, 3.877443660038051*^9, 
  3.877443697968749*^9, 3.8774459784743557`*^9, 3.877514005490594*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"fbdfad48-ccea-42f3-be4c-d0d0f5aff605"],

Cell[BoxData[
 RowBox[{"-", "1.`"}]], "Output",
 CellChangeTimes->{3.8774434087614355`*^9, 3.877443660038051*^9, 
  3.877443697968749*^9, 3.8774459784743557`*^9, 3.877514005506028*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"472a5dc2-7e27-47b3-9e07-ef0e5e546e93"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", 
    RowBox[{"dadosFeigenbaum", ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", "\"\<j\>\"", "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Black", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<\!\(\*SubscriptBox[\(\[Delta]\), \
\(Log\)]\)-\!\(\*SubscriptBox[\(\[Delta]\), \(j\)]\)=\!\(\*SubscriptBox[\(\
\[CapitalDelta]\), \(j\)]\)\>\"", "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"aux", "[", "x", "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"ajusteFeigenbaum", "[", "\"\<BestFitParameters\>\"", "]"}], 
         "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"ajusteFeigenbaum", "[", "\"\<BestFitParameters\>\"", "]"}], 
         "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "3"}], "}"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Red", "}"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{
      "{", "\"\<\!\(\*SubscriptBox[\(c\), \
\(1\)]\)*exp(-\!\(\*SubscriptBox[\(c\), \(2\)]\)x)\>\"", "}"}]}]}], "]"}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.8774434154334974`*^9, 3.8774434648381233`*^9}, {
  3.8774437040318174`*^9, 3.877443735143526*^9}, {3.8774438305517883`*^9, 
  3.8774440042913694`*^9}},
 CellLabel->"In[64]:=",ExpressionUUID->"7bb28854-b82b-44c4-82f7-cbbd11fce721"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {{{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]], 
         PointBox[{{3., -0.04049304665208098}, {4., -0.008685393795521357}, {
          5., -3.85892747774765}, {6., -5.936289334879003}}]}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]]}, {}}, {{
         Directive[
          PointSize[0.012833333333333334`], 
          AbsoluteThickness[1.6], 
          GrayLevel[0]]}, {}}}, {{}, {}}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJwBUQWu+iFib1JlAgAAAFQAAAACAAAAWcr2WZti4D+BPwjDU8fOPAD9OnGi
ZeA/E0FYl1fZzTzSeaZgsoPgP3wf2JjUY8Y8pfYRUMKh4D9luPSlfcvAPNrV
7EtGqeA/M2HfqYpCvzwOtcdHyrDgP/FXB8Z4F708eHN9P9K/4D/inKbOKTK5
PErw6C7i3eA/EovTYVHmsjx+z8MqZuXgP+1S1lS5lrE8s66eJurs4D8UoVNJ
aF6wPBxtVB7y++A/2PPSJoVarDzu6b8NAhrhPxiJjTOsRKU8IsmaCYYh4T81
qtJaBcujPFeodQUKKeE/iiE0UZBrojzAZiv9ETjhP8xUCtou6J88k+OW7CFW
4T/N21uVBO+XPDjdbctBkuE/URQlhODuijyuKXIVaJrhP9+A7drX6Yg8JHZ2
X46i4T8smLGrlAuHPBAPf/PasuE/yLKHX/W3gzzpQJAbdNPhP5JPuKGK33w8
mqSya6YU4j9qdC+S+/NuPPxr9wsLl+I/ogCQNljJUTzB+oBM1JvjP65oztYD
fhc8aL/IyL6C5T+kvZmqY4usO5ljpxoVYOc/MUa0FmkBQzstWOH2/mXpPyI1
6Mf3KtE63vNPzkBJ6z8eViyNVpplOvLfGTAWVe0/VS0tCJhw8jmQq3pnV1fv
P5dXnEcFQIE5Jg8ITXib8D+XPQsTvHoWObZwgKuOn/E/lBVvRBTfozjUJZMH
UZLyP2ctnLpIeDg4JIPTKF2Z8z9GLN2bq3DENzlQ3zSfm/Q/z9VHtFK2Ujfd
cIU+jYz1P8Zjrhrx3Oc2sjlZDcWR9j/8rIUqpqR0NhZWx9mohfc/v8TPa1bg
CDY/4gCRwnT4Pz4pEiFJbaA1mRZoDSZ4+T9xuNVw1m4tNYKeaYc1avo/qdyn
S6tdwjSdzpjGjnD7P1lw4Zt6GE80fW6T8B1y/D8i+EHUmdncM+thKBhZYv0/
igwv2a2kcjOL/eoE3mb+PyyZcvY/WAAzuuxH7w5a/z8nUHSrI/aTMtYlOOI6
JABA4x6KfLS3KjJoKWMvk6UAQKe7RL79QbgxwVZbe0EeAUC5ldBKPq5OMTNY
6qkUoQFATxOaxo1S2jBsg0bXPRsCQB681auTdW8wiGYI+gGTAkAIsiUrXpoE
ML0dYf/qFANAM8NqUk9Oki+5/oYDKo4DQNSUwtNPqCYvzrND6o0RBEDGvNsu
6AWzLsUgZsaMkgRA8yvl/guBQS6Et1Wh4QoFQO1KoJTIb9YtXCLcXluNBUAG
TYxKMoJjLfu2LxsrBwZAazoqWSGh9yx8A+nMlX4GQG+mfZLkXY8sFiQ5YSUA
B0Dd+AXAnj4cLHduVvQKeQdAzS2Wc++2sSscNmTIJnsHQDw4oYlwV7ArwP1x
nEJ9B0CP9yEeYCauKwqNjUR6gQdAwsrR/UOoqSueq8SU6YkHQMO6DO2jlKIr
xugyNciaB0DIcswfL32TKxRjD3aFvAdA+Nzb7e5wdSu5Kh1Kob4HQF5PiKJ+
x3MrXvIqHr3AB0AppGX2Bz9yK6iBRsb0xAdAXpWfBAIObys7oH0WZM0HQPUx
2A5HfWYrYt3rtkLeB0AVNoWevZZXKwel+Ype4AdAR7Vz9a/CVSusbAdfeuIH
QH1R93zpElQr9vsiB7LmB0DoczSRKhVRK4oaWlch7wdAykv4zPa9SCsv4mcr
PfEHQHH6W0UH00Yr1Kl1/1jzB0BcxRz3JA5FKx45kaeQ9wdAP9ZccPbqQSvD
AJ97rPkHQCmC7DBvh0AraMisT8j7B0DBEDrJ7H4+KwyQuiPk/QdAy87Rh9Ih
PCuxV8j3//8HQLeqJtGe8zkrV717qg==
           "]]}, Annotation[#, "Charting`Private`Tag$10533#1"]& ]}}, {}}}, {
    PlotRange -> All, DisplayFunction -> Identity, DisplayFunction -> 
     Identity, AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {
       FormBox["\"j\"", TraditionalForm], None}, AxesOrigin -> {2.9375, 0}, 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "OptimizePlotMarkers" -> True, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{2.9375, 6.}, {-5.936289334879003, 0}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[\\(\[Delta]\\), \
\\(Log\\)]\\)-\\!\\(\\*SubscriptBox[\\(\[Delta]\\), \
\\(j\\)]\\)=\\!\\(\\*SubscriptBox[\\(\[CapitalDelta]\\), \\(j\\)]\\)\""}, 
          "PointLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0]], 
                    PointBox[
                    NCache[{
                    Scaled[{
                    Rational[1, 2], 
                    Rational[1, 2]}]}, {
                    Scaled[{0.5, 0.5}]}]]}}}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, 
                GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"PointLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"PointSize", "[", "0.012833333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", 
                 RowBox[{"{", 
                   RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
               RowBox[{"Joined", "\[Rule]", 
                 RowBox[{"{", "False", "}"}]}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"\\!\\(\\*SubscriptBox[\\(c\\), \
\\(1\\)]\\)*exp(-\\!\\(\\*SubscriptBox[\\(c\\), \\(2\\)]\\)x)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
            FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
            False]& ), InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.877443426463043*^9, 3.8774437356678963`*^9, {3.877443967551705*^9, 
   3.877444005141441*^9}, 3.8774459788961697`*^9, 3.877514006577914*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"af090244-55f7-4ecf-a05c-7e0b2bc4b2dc"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Exerc\[IAcute]cio", " ", "6"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Come\[CCedilla]o", " ", "definindo", " ", "a", " ", 
    "fun\[CCedilla]\[ATilde]o", " ", "que", " ", "calcula", " ", "os", " ", 
    "coeficientes", " ", "de", " ", "Lyapunov"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"lyapunovC", "=", 
    RowBox[{"Compile", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "x0", ",", 
        RowBox[{"{", 
         RowBox[{"n", ",", "_Integer"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "_Integer"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xlista", "=", 
        RowBox[{"Drop", "[", 
         RowBox[{
          RowBox[{"NestList", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"a", "*", 
              RowBox[{"Sin", "[", 
               RowBox[{"\[Pi]", "*", "#"}], "]"}]}], "&"}], ",", "x0", ",", 
            "n"}], "]"}], ",", 
          RowBox[{"m", "+", "1"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{"Log", "[", 
          RowBox[{"Abs", "[", 
           RowBox[{"\[Pi]", "*", "a", "*", 
            RowBox[{"Cos", "[", 
             RowBox[{"\[Pi]", "*", "xlista"}], "]"}]}], "]"}], "]"}], "]"}], 
        "/", 
        RowBox[{"Length", "[", "xlista", "]"}]}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "  "}]], "Input",
 CellChangeTimes->{{3.877444068067412*^9, 3.877444118151023*^9}, {
  3.877444678687092*^9, 3.877444721998876*^9}, {3.87744564750783*^9, 
  3.877445680646954*^9}, {3.877448760601695*^9, 3.877448766755203*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"4fe3605b-c3df-4aa6-8b7d-be749855e978"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"No", " ", "caso", " ", "em", " ", "que", " ", "a"}], " ", "=", 
    " ", 
    RowBox[{"1", " ", ":"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"lyapunovC", "[", 
   RowBox[{"1", ",", "0.5", ",", "10000", ",", "100"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.876897977531955*^9, 3.876897987640975*^9}, {
  3.8774441514300036`*^9, 3.8774442188854*^9}, {3.8774473641761026`*^9, 
  3.8774473652770495`*^9}, {3.8774486741147957`*^9, 3.8774486747400684`*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"ca8d1e87-0b72-4e66-850b-3a3a54ce8cf8"],

Cell[BoxData["0.6896076359009695`"], "Output",
 CellChangeTimes->{3.8774445684876432`*^9, 3.8774456948385677`*^9, 
  3.8774459789898605`*^9, 3.8774473658963633`*^9, 3.8774486754426384`*^9, 
  3.877448769165712*^9, 3.877514006789703*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"2fd2bcc4-cc5f-4e31-9668-da0e2f241aa1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Fa\[CCedilla]o", " ", "novos", " ", "testes", " ", "com", " ", 
    "quantidades", " ", "de", " ", "itera\[CCedilla]\[ATilde]o", " ", 
    "maiores", " ", "para", " ", "verificar", " ", "a", " ", 
    "converg\[EHat]ncia", " ", "do", " ", "resultado"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"lyapunovC", "[", 
    RowBox[{"1", ",", "0.5", ",", "100000", ",", "100"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"lyapunovC", "[", 
    RowBox[{"1", ",", "0.5", ",", "1000000", ",", "100"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"lyapunovC", "[", 
    RowBox[{"1", ",", "0.5", ",", "10000000", ",", "100"}], "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8775133120200553`*^9, 3.877513366061467*^9}, {
  3.8775140788187876`*^9, 3.8775140856163497`*^9}, {3.8775518136274247`*^9, 
  3.8775518164552965`*^9}},ExpressionUUID->"24bc61f4-514f-4e72-9228-\
ed15f251b977"],

Cell[BoxData["0.6888147580222084`"], "Output",
 CellChangeTimes->{3.877513370574155*^9, 3.877514006910776*^9, 
  3.877514086672475*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"1245b67e-1757-4ce5-8116-121303e1bf2b"],

Cell[BoxData["0.6890039516021397`"], "Output",
 CellChangeTimes->{3.877513370574155*^9, 3.877514006910776*^9, 
  3.877514086802656*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"456a298c-06af-4299-814e-00066012dec3"],

Cell[BoxData["0.6891191367382847`"], "Output",
 CellChangeTimes->{3.877513370574155*^9, 3.877514006910776*^9, 
  3.8775140883754683`*^9},
 CellLabel->"Out[72]=",ExpressionUUID->"f4bb0192-eea9-40ac-a17e-a32f99d6e53c"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Concluimos", " ", "ent\[ATilde]o", " ", "que"}], ",", " ", 
   RowBox[{
   "para", " ", "o", " ", "valor", " ", "do", " ", "par\[AHat]metro", " ", 
    "a", " ", "sendo", " ", "igual", " ", "a", " ", "1"}], ",", " ", 
   RowBox[{
   "o", " ", "expoente", " ", "de", " ", "Lyapunov", " ", "com", " ", "3", 
    " ", "algarismos", " ", "significativos", " ", "\[EAcute]", " ", 
    "0.689"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.8775145197980785`*^9, 3.877514520272507*^9}, {
  3.877514740868263*^9, 
  3.877514783718833*^9}},ExpressionUUID->"d36598ff-b834-437c-9004-\
2682dd8e4187"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Plot", " ", "do", " ", "expoente", " ", "de", " ", "Lyapunov", " ", 
     "para", " ", "0.5"}], " ", "<", " ", "a", " ", "<", " ", "1"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"lyapunovC", "[", 
     RowBox[{"a", ",", "0.5", ",", "10000", ",", "1000"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0.5", ",", "1"}], "}"}], ",", 
    RowBox[{"Evaluate", "[", "optam", "]"}], ",", 
    RowBox[{"AxesLabel", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{"\"\<a\>\"", ",", "\"\<Expoente de Lyapunov\>\""}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8774443404021873`*^9, 3.8774443551050415`*^9}, {
  3.8774457144248443`*^9, 3.877445736055212*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"6cd1b852-c0ce-440b-b7b5-ed6a491f62b0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
2QRE1yanyNQJUO+zovy9usn/97P/AsmERXE=
       "]], LineBox[CompressedData["
1:eJwUVnc8lW8bl0qUbJJUSlJmFJVfXNKwy2iJRFRGiyRJkUS2SjIre0VWlHVb
2VuOw7EOwhnPOUKliPd+/zqf5/Oc5x7fee24ctvsKicHB8exNRwc//+lJj4d
9hqfhpS2ClrMEk/VvnbBBBZ+vnpucfBnA0/Vlo3XHI2+T4NO+MNJoai1VVxG
pWpZk9NQ2yPO++D16qqZID5O7ulpmC8k5pyOclZRmq60X6VNQ9mm3+UhOquq
6rlLYmvp06Dl4LnxnTtHVZ7uhus7mNMg9G/PWc2YFRTnf3m/NzENwodVFAvu
LSP/r4Urg6xpGIhPCfNx/4dc1nC3asxMA++nJseoV0vI6phVdPSPaYifveln
3LCIdH3z7H/NToPF4nVm4MZFpFq9RuXM/DQ0/z7uq273F23lsPiX/3MapPhz
JOe//kHckNPE/3saVm23Cf++/w8aKj97peXPNCy2PVQukl9AjYuZSnsXp6E7
I87FsvA3KtBY/uu/NA3MA/GVOUd/o+ef017prEyDTXLLi/e3f6G7v/9efs9B
g+KD3ypl+H4ha/XTCsuraDDKM6Uilv8THSj6XfdlDQ1ezxYolHP+RNvnDF9s
4qKBe+unDZ1582i96vtL99bRYGN0vDn3lXk08lHv1771NLhPnb2+3DqHgrJj
ZDP4aTAls3vXGJpF9+jE3FpBGvgIkh58fTKLbPbqVNkJ0WA6ZFbs4YlZpJZO
v7BdlAaG+5+Oz3f9QKNJ/wVFSdCgkk/c8/PSDGqhhp+b30KDsCSH7PzmGVQs
NbHTbCsNej85Ng3EzKCQtyFlG6Vo0G0fdPTZfzPoYOwQ00+GBu+NrO90iLLR
lWmnc4O7aSCkVsMZVstCIeoLaP8eGmwesaqddmUharfQqzE5GjDDOg4eIBEo
eIPeYe19NLjrG/8mLoeJRrwKni1q0OA/21TbxNd0tL4F2GZHaKCssCno5Hk6
OrC57UKWJg3UV7tr9m+mo8BPU/IW2jR4md8Vk51IQ/tZkt3FJ/D3b3sizcqm
UcDlgG2uJjRwK73jMiU4hQpyRJ43mdKgjHr1Yc7IJBpcTPwhZY75oJxu3Zg7
iVSiy+s6ztLgXXzXxzCjSUTp/OGkaEkDI143B9WI70hZx6pk+ioNqjfkS9gp
T6C+XSomlx/SwCxW4GxHORVJRgm8e+dFA4usq8Ub4qjIZt0MMfKIBo/8PnSF
PqAiOi032MaHBg4vz1ZaH6SipVyFBttnNEg6eOi9aPEokjq8R8s+nAZttnp1
fx6NICfj7QqOyTRYOHdeo/kHBeVWLntmptAg9NXnBuVyCppTHm6ipdIguvbd
OsKfgryEEq47ZWB+Vg3KOG2loLA+iWTnHBr8mvhbYnJqABXaikncKsHrKW43
ZlWS0dK9jdx3W2gQKJGvcry3F7W2z9m1t9KAdnjP7MbUXhQnO4D2tmN8zgrd
3HavF2n0p90f7aQBd+szcwGxXuRxRHvKmESD/sA59g7Lb2ie8279HioNTOsd
npz/0Y2Y4WS/4V80iLvTmOyp34nKpytHDy/QYNX3wC21Up0o+Gjqkdd/aBD7
9GXpw5kOJDfnMm+4RIO+T0feRJzuQA7nNth/WUWHQEsRaV2hdjQhqXUskpcO
Nbvqr23LbEGDmcmrDHbSQcw4+WeTWAOqlxnUCZOmQ8jEWZj/Vo8+Jor4de+i
A/t5k4DNq3rkG/OMy1KWDk8v1x75K1CP9gRe33BDgQ7o4rZsOf6v6J6DvGiY
Oh2aL2qrC2yqRXyyhXu6DeiwmLP39IfkSrSQxHAUM6KDvOEPnxilSkTdtiv7
ojEdzFMqfxJfKlCR2GvF8dN0SFd+1dDUVY4sue6rzp+hAy241OQwVxnK+K5x
ROwyHY6ba4jZPClBR1NqTl+8S4fPX+VPXC3PQ07KB5Si3ehgXWKYzXM2D0WW
pvKS7tFhuO9MyBLlI5rsxPL1oEOepI3Oh6O5KOTfqWP6j+igx3mq/KpINiKd
o6gfCqDDSoG/3m1SClqhGom6P6fDb9WoeSPBFLTnZuVcYSAdEuzSjpYbJaOH
TxPzlEPo8COEcsboayKSyrsuJ/uCDhvurGlS80xATjzzW8XiMD6qnCn3Q1+g
V5FXl8zj6aAvfoKdKBKByrf3DbxIoMOezpXU7MOhiF+99M3G93TYpWY2nGET
gA5Vy7sbJtJBbu2AzaH7fuiKUcKZwCQ6uD86uL0j/AkquuIjuDaVDoXH1kqu
C7uPhogfbJ00OrwZ2SGn0OKCuB7Ytfuk02FEX7b8u7gD2rem90NlBh1YO88Z
ZFy2QBbhJ4OXMjHfn01jLsQdRL4Snx01sukguo7zZe87e/Qhda+exwc6JC3M
z9wauoeWy3jXzufS4YA7R7JdlT+S1X08rpKH14sLefnzawgy6WZX386ng69Y
+dib2y9Q8nT3Y0YhHYo3JZIM098gPdGYhbHPdOg0/Bm9wSgJvbwlw+yqoUO/
++2kQyp56CQ1oU+ujg69dk1Xv6nno7/mYrVPv9KhnX9wN6FdgOwOr4tVa6TD
W7v31fvtitCBNTTdmDY6cDzUqqZOfEbT7rb7Z9sxnq8HhXYLl6J4Wv82w046
xJKuSdnqlqE1Hc0/l7rpoJUjxfOxpgL1xnxItiHT4R0X+8wm/2oUxCsT/qWf
DjsjScmth2qQlneCpxCFDtHr3ulksmtQmn2Yad0QHWZ8q/WSnOqQu/KdFdlx
OrTedKPMxTUguaRpus8EHRJnJm6quDeiYRFbUv93OnSgesWEc01I969pTvA0
HcKIa9Mu8i1I/Ot+SzZBBzXXlgRllQ7UevDDST02HfjVeZRu7OpEPlm7VBNn
6GCnH6h55lMnooWL8pjP0WGVx9OdxFQXessZNp89T4f/HorE+gZ1I7N7XKNr
ftHBcResLOzvQaUXfxcXL+D99rI71rz9hm613U7i/0uHCfYLfkGbXrRTezrU
YZEOuU20P/PyJEQqsHlQvUQHsxAJ9TLOPhQk028vsUwHjUve2+O+9yGtaFOT
uyt0gIA1VqtJZDS7vvm/Vg4GpJ5Ib0jv7UeWM6VCj1czIOi454/jGwaRgN3+
ZdIaBrgb27i0nBxCdb3ZNGUuBrR90U9fjh9GHnq7ep+vY4BXmr/pFZ5RpFAW
X0XlZkAud7Gwdt8oGlUU/aCxngFavwN3WeN+iHwf+ubVBgaUnvCKTqocQ3rC
XE+ZvAxoL/zZ4j85jpaePb51go8BI2KBMf3a31Hewi+Lt/wM6Mt4/spsbBLZ
O98+8VuAAfcqRmM62dNIfHhqn4kQA8buJAYf/8RAbSY2kpnCDDhb/3yG/x8b
+daS13GKMuCbXaFHBWMeqaubzl0UY0AG927WjsdziJ7RNFy4iQFS2xy1JXjY
6O0WnWbezQzQmTxSzynFQDfyeeNOSTDgi7VVVE7GNNLQ7XOO2MKAU/aHSTfr
JxH3UOKRbkkGtDSLNwri8/a53tgoso2B88NaSmRhHKVxHxw+u50BpD39uupD
Y8jt7aqPb6QY0PM+boffBBXpHGj17t/BgD/3V2ajuahIoDnKZIs0A17UHa7V
0BpFw5dtd1zaxYB6U5e7e/lH0Ief8rNvZRhAf+qb64eGkGfwr5rR3QzYL6if
sTFwEOnvqH61cw8DRFxJXEccKEi8JNjefi8DbFOJC4cvDqBJo3NqaXIM8E46
rvvJqh/5ejBIexUZIElP5/oW3IdM+IrTnZUw35yRxX6fSGhbio9HjjIDmjvH
3ApovaisQ1RCRZUB+jLZpKKb31DQ1VG6634Gns8m3syU9aALi1llRQcYsCVo
fMdNwR40v1v70qGDDHj41PkS0dGFasrXK3keYkATQ+Pv34NdKMKsd7nsMAM8
FrU/X0jtRIqPnd7DEXz/o0d/7d/aga71Ro6fPMqAgZFZO6ndLeiA8+Wi5zoM
WJ1l2XdJoxlxrpJ71nyMAfKjPB6cZ5vQOwW0+9RJBjwtlYE98Q2I/JTmeNaQ
AQu+A6LfHOtQ2uYijTdGDHij/UhjVWYtcvv4eEO/MQOiSCu/3Zg1SJAinGNl
woDofj+ai3c1MlDVmrE7ywBpj7PFl5IqkHgjd3XqOQYUug7wNFuWo8lLPS+m
zmM8d6ttNt9Shp4GOux3vsiAkzz8yT3Zn1H56Et318sM+G9VhTqVtwgph08t
+Tji+4id/+hino6e834ZGHJiwHPvG+LuB1LRWGDQZ40bDEi32cPdtzUZRfop
us3fwnq1prwzEnyLiFUrpqZ3GHDspq/cPuFYdNK7UznXhQGbm6moXzoKLTy4
y7juxoDdRHtz2EgIMv19vKnuHgMEdobXu595hrLcxNJ33GdAnjIr81TDQ7Rm
dsrvsQcDOvwOj8iqOKFLt79coTxgQIViD4T81UfFzCDtQw8ZYKK6lal40QcJ
OFlte+3FANfWSJ5/shGoxn6l/5Q31ssR6/e8P9+jLWOdJdk+DLj7eefcv5lU
5HY56TW3LwNuM8rlbC9no/bBu3evPsV61B+i8mbnIdmLJ0xr/Bhwx9OkcXmh
EPn0iSlv92cAkTb5lj+nBA2cmeb1CmBATua9nvSxMrS/+wud/JwBcau1Zv/Y
VKGQ08GNakEYf87jPWnHa9H3Vqu0l8EMSNC/YpLZWY+0DJT82CEMKJr6c87g
egt607BiaxSG9b4QvIN7rhPNHO+CzHAG9IZuZYkFk5B+TdJWrhcM6G/uTuV7
w0BJ4LZ45SX2+3nXl5maJLRUfqIfvWKAogXp1u7KTnRWY1OJ5Gvs/xC9OYNV
LSi3ZDryQdT/84uSuNmuHnGrlbqS3jCgRER9crm5BtkWBJvsj2FAZ+HdcUY+
QqXKl5QiYrEeZK0NTQtLkXCOEi8Rh/Pgn+NIq1UxuiHHQddPYMDbglnzcv8C
9DW9qyHtLcZzj+ZlEYVctE0mOXX1ewYMhvoM1bLS0f0kt6c2iQzYtz+s7feh
JNS5/aRtRRID+LJ4JBdpMUguYRNIpDBgVd/eHoZ0BHoqQZO8n4r5vr5peo2I
Fxp8U/q3J40BQ9Yd8rzRjkhdNIS8L4MBX+8OZ1qrR6Pwl5eKQzMZEHbRzWH/
yQ9oml85kp7FgOT8gXYPAqGjoRyuuh8YoCTv+y7vQyWKXd99OiWHAZZfI459
8ctC8wHJiqs+MiDrc+1ui8lXyHjtvQ3WeVi/m0T5VvPeQ2m+J2ml+Qyoy637
qm0Vgzg4xBs2FTKg64OhVfSvt8jiES3FrYgB8xrL36QHE6Dgb6lv1ycGRCjH
OnfqpsMGjxAbpRIGLLc/93P1yAT7n5e0gj8zYJzV6eEq/R4qXJUlp78wQFcv
0X0p9QOIzXD8PV6G+Z87o67okw+3b3b3JZYzoMD45zat/wqhkZ78abmCAaHF
MS86XYthp8O9V5aIAf7e6xY38xXDw+8nXT5XYX5evzLhe1MMrGdOB5arGdBY
dyqxf7oYruwO+32slgH3K5vZT+6UQG99fmlgHeZ7XZpvT+An0Lve+6jjKwN4
zpirrk35DOXr/miLNuD78/Xqrvr4BZQzJNdYNuL+MvUiPbH5Akl62g3vmzB+
Qz/VWztKQYxmFzTZjPn8srB+640yCAwMMFZoxXm61WaIc20ZLO3NFnBtY0Bg
GJfYSXIR3Glu7ylpx3n82PXttuxUNO40G/WvA+OlO3BIxicSndsgdvFYF+7j
S6bba4UDoDn78NbAbgaoepw+RniVgqbRpdH2HpyPu9KPCNysgDymT7JIL+5P
mpCC2gcE0qEp1y6SGKB34ImmEQVBlGLj3vd92J/MBt6ttxCsb2cwv5Nxfn95
e6HkcxU8usWfJz+A8Z3Xsgy+Ww0zfPvvulAYUNbq9cSfVQ32H8+plwzifkk9
OKm9qQb6Tnv+WRrCeT9VmT8wXIoMZhLKdUawvkQXSE3j1VARUe39fJQBe1vX
f/79sRb2qXzXaacy4LPm1dumA7WQ0sXNJTLOgOBXaydfLNfCJleFJosJBmwN
er/8r7UOgoRMQt59Z4Dmk5wwL4l6WC64e/r7JO6/hVrNvSfqwcX8jZD8NAN4
VxdUqW2ph4m50t47NAaIv1GnrFpbD+cjh6OL6QzwsagauAn10HyA02qJgfuO
9+3X23r1oNUrs12HwPk4/DQgvaIe8u/pjwWwsB5XRW+cMqqHXWI3U9vYDEhU
eCpPTDuh6OIIB+EfDHh085PMobivsOF8kbzFLL4fGLSFDNbD4999rLdzDKgc
4LIxb6yHH28W8yfmcb892uLAbK4H+0Pb78n9wn2yN0i4qawByGSdQ3d+43z1
KRnddLQeDB9cW/y0wACXqwdzNEYboHJzUOXiH5yX4TlHiwYaQLU058nRRXz+
zf0WaUkNkHqx63jAEgPyw7TllFwaQXxxfl3bPwZwrXJddSq0EYLjxFuEVhgw
eXj4uRq5AZb/OxJ2gYMJt1SfRhUpNoDr4GXTt6uY0KBVqOkh24G+ez0VmeBk
woX9Lpmm/u/Qha3pfXvXMEEoVXj/K+d0aK1ojr29lgmcMr1rYq3rAKxZlz5x
McGr8tATR756KFgW3LG4jgnGm86uLhqoB5l3ahPaPEzgTSg9NjTeANFgke6/
non1fXnvTf1G4B31cmrdwASlLwJ1AqpN4O3zXlFoIxP2SnIfLk9ogFmpupnz
fEywvapoGCfbBNeqpwoT+JlwqjRyeZmvCfptN9wfF2DCQM9gBKdgMxhxKmvs
FWKClOHtM5ZfGmElPzjWQZgJf75qhzzhbIQC2+m/6SJMaHMpXfd0XyNcFTxh
OSXKhNQqsz4BkSYQr04s272JCevMZGokc5qh5c7ylmviTJi9lvoghdYMj6Us
vVI3M+ErY82nmgNNoNJZMjghwQTW39B6jbZmmPAW0dwlie+X8KPoT20LvFF2
SbDbyoTPIS+FH55pAYORtn9J25jgsO1ntk5JC/wLk7Me286E4SqDl5w3WyBP
K6Byxw4mrA374czG+NixxrfZ7mTCyawNm44dbAaxt9re76Xx/caVMg7qNkOT
ccLIyC4mTCqM3c/JbQGvf39g+24mCHQeUn6W1gzKOefeW8sygcfY79pdiVYY
syrkeLuHCT4UswyWaCu85hWwHdrLhHO1kXxt5S2gV36jWlKeCaY2/6IHLrTA
onPTDisFJnwXDH/yLKgZcrfs9o1TZIJY2e0jEc7NYNviOzagxISXam50kw8N
IPJwREdiHxP8GHcMhnwKoUHuSLKFChOorS89JDa3Ic+B6NUxqkyI/fhxXKN5
ECkG/bQj72eC53OuuuoHjWj0sFndJjUmNGcGSEpyl6FXtNxd59WZ8CHDbG/H
QjY6GbPhWdRBJpTl7OVt3f0KLeg5fO89xIRHnLVqO2++RtkLdSdENZhgsV7b
dsfhr8g6Y0famf+YsGv9mt66rx+QwIXHXJFHmLDDcqupH0pDteso13o0sb7Y
TWM+he/BveRggxAwIVLrfvCAx0fYez1S1kwb6/muZMiGiFcwKPYj4MVRJqi8
bhcOySuB8Hrj6U4dJuw7fuNccfxX0HHP0hM4zoSYQ+HiR48UoZ8y6zJPn2BC
Ssa55GOBTZDRa8cTfpIJa3JFfC4vNoLlsyrHdl3Ml3CunPD+FuBT29q8UR/z
bSfz6vD5FqieeCBnbMAE8QWbtC7hFnCLJAWFGDJBTnKCYWDYArLH9zNajPCz
TU3bnZttMDAXbrjhFBOcPAtyT0ArhCYzsw1OMyGKts/b53E7aJvr8waZMGHL
2pF9v3e3wRxn2o0mUyYw+VN/qcq0QloBZxu3ORP+7bpw6u35drC4cllR7wz2
T//5OPU3HcArVB4acJYJdTy5ox8EOwBVi7PqzzEhgBzzUtOgA1xd7p3iuoD1
f+t+/hv7DpDZ0Z17woIJXBnacZNL7UDuVOJ/dpEJK39t/ynrdUCwT/DtOksm
hNaKoUCBDtDaN92x+hITOs1DhyNn76IfI8f3HbPG91M3zeN2boWU8MQI38tM
8PURHP+n1gHnYXmm2oYJRnY6pUnXWmE9+6LpqitMGA9z1oxS7QQ9/8pKSzsm
3CWPU0pSOsF/606FYnsmHDk/peVD74S6omcxAteYsG2Xu/qbzk7gNKJxOV/H
60mSOTgmOkF73MjtqwMTKs5LmYrrdcFjzzzqdicmbP/n0dZ9swvKBUVOezrj
8xvrcpof7II/GffLv93A+andbK+C36trU/Yq38L8j7mFGpzsArc+rTeBt7F/
klRubQjqgoJbSWsm7uD9zn1ep5bRBTNruVy1XJnwc2DF76JkNyglOI5E32UC
/WgyKWFbN9w40GY058aEYxTpPTn63ZDVsq/U2B3jyaNOeR3aBdNXImUz7uN8
b/czuyTXDbv//o7kfMCEkVNX2GhvN9i/sOS85InxdX9XuflRNyTtQbdLHuL8
57rpJLvQBaNo55DgI5xnRq5DPcJdsO28v8GNx0wwVzV5FHsuFVmxaCX13kzw
/xga1IXxjH1mLLPjCdbTJnvxFyld0CeZ//KhLxNO3FpiyU91gUiRCAfpKRO0
WbkJl1W6wczQ4+a+Z0w4JL4pwM65GyLGKANB/th/197ssKzshvYHoPc9APut
MczPbbYbeAWTP0EgE8AmbMunnT1gkMElHRvEhI+J27KftL+G5+AUMR+M/Top
1E6c7IF6Utu/U6E4z9bOSZ451gNrbqk4Z4YxYSrkSGxiWQ/orH1NXh3BhMxM
W8K9pwd84hdOWL9gAp9fau4b829Qud+q8PNLJiSEZoZk8n+DpWYkJRzJhOT9
Qd6Z0z2gcUU67OZrJsylcpZwz/eAxx//xYYoJpD1d5d0CHyDTxF0h53RTAhx
0u0u8PwGs7KnSF4xOJ/JMr47yr7BPpR/rC8Wr587Va7M/Aa3zonmq8Rj/9PG
qQLsb/CB8NgWksCEjJDOto+Xe4HuNxg8+RbjkzPGy+HcC3sktf9ov8d5rJmq
lbSWBNcKk6/FJWJ9KEroauwmQYrBum8/k5gQ93VGo2wLCcaoTkdNUpjQv02k
IGGiF6QetOdmpTLh9lUuvp6eXrAWUJVcm4753ZBRQ5/rhfj014GXM5iQfYAn
86Q4CQa0/vz6kskEbvH0sOwdJBAnWdmLZDNBmDM2fMtWEpy7WdV16wMTnC/9
CpA1J0Hkml3QlMMEhZtXvtbIk6A7LuCD9Ecm5Lc90Mk4RgKB/YzNj/NwPo40
V1qEkuBU86kAcj4T4o9ntU+r90KIbcG8aiET5te+riiWJuE5T/RKaBH2h4us
w2ltEnBHPOiY+oTzSCFOxt+SBCdlh47olOBnB/HR0w298LRSOyv+M+4TD8H0
RX58fo9fSyNfcF+WdTSp3SSB6v4Pp6XLmNCjsLDKzYIEQYRt0rVyJmyWM6Ov
t8Z4pW/6mVnBhIM98t7fX5Aw3226RCUTmkbpm7W7euGl5NPYfVVY7xKmR8rz
SUAnHSLuVjNh7Pm794K3SKDzggUlNUx4cno8xd2BBLGGKS//1jLhcH/MACon
wezai981v+J5J+7eMZ7/SGBQxX/oST0TqvyW1hYlkiDJ82tQXQMTbn7i9/AZ
JsHfAw+H1jUxgSH86+z7ChKYsfftM2zG/o+X8Nmp2AdZmZO+YS1M+GVm/ECb
TgJO+/jerlasx9hNjuf8SXBxm9ke0XacB6KKltvxeQvI6x5e6GCCxDN7+Enp
hfWvKtriOpnQGFA9le5biq4Y35Ua6cL++xRsv6ujEJWu23t3Zw/OP6l7vZWj
TSBUM/z16jc8H71ZfpVj/w2cvCLFM3vx/BIvbleu1gs16gbOTBIT+gz8OIQ/
9oLEj5UKZTIT3oi+8NHEenTN/iRwtx/j9TrSWwUwv1ed7YoHcD/9mrKwqO+F
nVI7iv9QcB59f1xfXUwCzwESt+YQ1g/jadRcNtZTZIilzzATdJbvHypik0Du
tE5u7Qju+7OaqlJhJPDlWeBYR8X8Z5+/xxuI+a/NMTcYw/Pqr295f/ow/4/t
0kLHmaC12tvnwk/M/6HNfzonsB90qrS+RfTC2Gy7ocgkvs+UVdAHzJdGjt/b
81M4P1xPnVJS6IOX1zV+xE4zYev3s7yuTpj/HTPHhmlM4FB35OPY1gc6g6lR
OxhMCL6qEVIX1AexUZY0eyaeP47e03rg1QezJoJHMgisf49EamRxHxhsaAhj
sJjwttZowi2rD5K+elGVZpgQaN4tvZOTDH+9VQ+4/mDClYRaOjj2gZnGtP+n
WSaM3jFXNcDPWfMJ/QtzTCCak2daVL8gzo/mCkd+MoE2/Vc3fLYXLjryeHv/
wvkw8WVEHmH+pVFXzW8mmLzWNA8cJ8H6YbddXH+YoG5/IZTrdR9ciZa7r/8X
87/qu0wv9EGp2WhTyCITLvNf2aiO+kBoY5Rk5xIT3JrP+2sY9YFTg+Ft4WUm
9LoeXrSN6YOaJ6tqzq3g+d2P++zN/X0gcaREJJaDgA2Zx02DBvvA9deN60Or
CPBTstUIbu+D5rydpVKrCRA+9ylGVqIPdjqTee3XELBb+VxK00IfeMqEXU5f
S4A4T0vxRFsfdI8cK6BzESDZ/cyKlt4HcrF/1ihxEyCw8R6aXU2GJ2c+nnfh
IWCW47/n/hg/+1/OJR3rCXh96Ya4/XkynIzes0mJlwCzSyJtBWFk2Kvx3T1k
IwGmL1bK/fTIwDuYSKLzEaB4jfZijSoZ2I+s1fUFCMjbvlGYR5IM3du3RKUL
4vNsVCz1liXDp+q+n2uFCeBy55oRPUSGaLvIs/YiBHAclgr/oEmGh2tNP9WI
ElDdV6PesIUM1ukbRXdsIiBmJatZsbUPjuo3u3mLE+B7ZrKNvoYMuxj+34Y2
E9B0zSbZuqcP1oUeO3BkCwElqc7xhU5koCtxRMZKEtBdTbNaKO2Dts7yuYWt
BHz6sNesEudBnusD8/PbCci5ZPvYr5sEr0TUCz9JEZi3S8kO9/rAvXhWSGQn
Ac/HhVfL43y2uPDR1VWagB3/vVPTIH+DI3+duzt3EZB/VcF7X2Il2h6/R1V5
Nz7/2OsbT5SnEKfW9xehsgQ8Ksl+vaWsHU2MJP5g7CHgllSTI4dPBWp4Ym1q
IEeAbZnpdNmHDJQlvSU/Q56AMxpRhcuODijka5/AOkUClikfbZweVKLb1yPv
XFXC/NXxT6QoFCEzHtPOWmUCRjNXJq6/K0dq2Rv37VQhgMf2Ud8liUwQN24O
91ElQIkBSKG7CBZZ/uzh/QR4xupnC8qUwXDEsdOaagSsp/zuEnjbDtWqHB/j
1An44PdFhlOjG1K+lfP9PYjP22X2eueeHghwf3DrwmECosrXzeia9oKTuHp7
sQYBmV9VFs7f6QXj0llF0SMEjMy0rJiv9MI+q4+hdzUJaDcpOB/HSQKhZWei
S4sA5017Si8cIcHPd3uM92kT8PZ0ipU97hfy0e8fwo4S0HifpDVwlwSl44m8
hA7WJ3Ntrm9vLyQ8s75heByvZ0lS2YzzwUd2S2vmCQJuxMgGfznaB3ZNffLc
ugSYx2xef+pXH5x0jgy+pkfANV6zo4efY/1uNGXU6ROQuy/kuPxWrN+PGw2l
DQmQu+N4bSIA69ekOeuJEfYLl3EpKQrrd9Z//agxAdq5L/i4NmH9Rh5z0jpN
wN9DyQNHhLF+1Tma400IyDBZqG5s7oOH5PK9i6ZYn163Yx+0Yv16Pgi0MCfg
gs2qGME2MmhLqtNKzhDw0MirqmyGDNKVs3pi5wjglVZLLQ8iA5fNxwy389jf
1le+9aSTYXrVDe6eCwQYev3c9pNKhpbkPQ4qF/H9ZXa1h6aSIffE94ZwSwKg
+mL25zYSvJhKlGVZEaD7NCLkRzQJ3AKtA4ysCaAOCtpnbCfDefktU1mXCbg7
Kfawa6gPNNr6TvLYEnC0+dtNgxUyWD1uO2Z7hQCrT0ZXPQfJ4K1cq/3FDvPN
cf2KtDUZkkY/awpeJcCi6/mt46b9UPciV8PxGgHXDVzWHXbrh0mdlIPV1wnY
psSpRbPpB575mAObHQmQ9gkStI0ng0JquIqLEz7/yJYG2/x+OHXumVKTMwHe
Rr3nmjP64c66h/I7bhLQb52zkzjYD68+39nz4BZeb2fkkZWsfih2vCbTdZuA
3zXPrqdIDQBZwmrnXhcC9Oyl7nl97YfFFtPtT1yxnw0o7Rff98O2R7qS/XcJ
WKk6JeuY2Q/aSpqbVe4RUH9Etqhath/sRlTFAt0JqDhtw3vBrx/8I/YIU+8T
0Pn7XX2ucz9kHN0mcPgBAXv5BU9Vc/ZDy6zwxheeOL8+3txhXUQGVjLPetpD
7L+Fuca+5wVI4OwK19FHBNCbxKvtDYthP9fP1TGPsT8G31mc6OiFcyV0jh/e
BBx69LfIbrIPPBxG/+k9wfnH7/JjQYcMsZtJf9/7EmBgYc94JN8PFc0tvxee
EjBH2xeZ50OG0YfV8ybPcL5RZe4HdPUBp2LJjwx/Ahrcv0uJFuI8HP7A4nhO
gIxU8bcpzIdueBLjQiDOOz/zMg6VAXDSjp7OCyLg2eP/xL6T+yHkR+h37hAC
Ehl6gqI6A5Cb9HTMJhT7f+E+cvnVD13mD0Y+hxGQYhpZ7BTVD/Nrbg8KRBDA
WJekz3IeALFi+36HFwTc2cxR/57RD4evXyRVvSRANOV11dXEAbASN+kRj8R+
0bjfzvgxAI+bTnTeeU1AmMPYtqNZA5Do+V9bYxQB6qk3xOgPBqBOXqVZKhrn
26V3O3qnyTA5uLvBI4aAYP9G99odA8ATJlnXGUuAexG7u3yyHxRAqHpPPM7/
RwZXfdsH4NTMukqfBAK0jGL2PcHruyT+KyW/JUDkn5qIx1YKRJrNlex7T4Dq
jeS0R5QBKF5NK3qeiP0+fOy+miYFyEXD+aNJuN+cODvk8feLV7/lHkrB/WMm
y0enUWDbpubsiFQCrlQzhyS8KKDdiDKm07DfL7U1RZygwJUHn1K1MwiQD/h1
5sUrCjyTy06KziSgZkJi9IY/BTIo79/NZBGwrsyaNV41AM0hUfF6HwjQ/JFF
Sl1DAaZmSMz7HPy9ydEYtEIBfvaTqIVcnP82J1VWP6OA6vv7r0zysP7ehpbs
+o8CZ0xvRmTkExB58kljaxkF7nPahXIU4jwc/h62hUGB2MILQReKsB5P3V99
dooC5fanAvI+4fU3hxfmZFFgRPS4H3cJxlfuQ0NLLwUk6cHX9D9jPh+kNSh4
UuBCZY9e0BcCZpK9zSNDKPD65Rb5llICHCfclcyZeL64ZreRt5yAtvCpgA/F
ZOD7L5ttVEGAg+KfQk3MpyH/XFdoJe6X50/OKhgP4B7VKGpHBMyXLboElWK+
S3yj+KtxHm43d4zDfKwKafYwqSEgoejocODwAGjZCFm+qCXwfD9fHxNAAc8D
FzW76whQrs+3ox6kQAl30nbhegI+r197Iq+EAvODtFVnGgg49WDo6+sDFNiX
rzIR2UhA9i6bgmBDCtx89qC+t4mA7xP+d06FUiDLojpDrIUAJ67NCt3TFJhU
5Ak+30pAc4Ahz4VPFJDmNL0Z3Yb9PdJzgZZGARtS9On+dgKC+MmsDzjP47NG
VSQ6CUgePtt2OG0A+h/vEbHswv7bGBh9+hoFxMzv/IrrxvgXKnzKcKaAmexn
8mAPAcMV0b5n9SkQvrhSurWXgC/k7NgFzFdrh26CNQnjKzKno/BtALhTwr3f
9eE+F8me/hFFgRMefbajZMz/hfvpP2co4Gu0/fiOAXyef+4FvKkUqJS6vvsK
hYAiu7uvBGcpsDify508SAB56VqGq9wgHGr6RR8fIuCPNjx5LDkIbglabbtG
CDAmveATZFMgz8X/49VRAt447d0rjfVMnGh/kUYlgM/lDud3rDc5CTG3qTHs
n8DfeezdFLjGunRuzwT2d4yekI0VBZJrUg85fsd58Yq2wnuPAqNRhETWJAES
LdcP3yvC+nJW+0efwnkoUfBWee0AWMCjEXna//8/uvj4IgWihL9W36AT4MOn
cvEkNwW6p3hTchgE3C/0HZKQx34oP+PPYmK86811m+QoYBQR76DMImD7p5pH
pGMUeG4/YXCHjfup5KyvrNkAfD2koJg/Q8CSx9dNtPIB4Nzoxj/7gwAXkSMC
nu+xvqhlP1TnCDj+dlCyIXAAHn5a/e3uPNaLMd/GN1cG4HOgYXHRT3yex9rX
tfJw/l16Ff3zFwHjgiE2YgcGQEWV4qm+gPt/3yOuref74RaX9KX7f7C/dQYk
9hiSIWvACT7/JeA/nwEDNTzvTuUW7PiziOe73l2XL3/Aef3072qNfwSEr+6i
bA3uA5vzOpOeywSQfvy32oC/DxLkgxrLVjB+d9fMNY/3wsBKV9YSBwt8Sre0
SC/0gNi3zaGanCywtnQnf7zfDOYZtrcfr2aB6RFkuvCuAkV4ZZqiNSyI+D30
N3NDM2o1+bGfg4sF96t3Jj472414ZA6LHV3HgmbHur/iG8ioczRgbQI3C65s
pR+MsBhB0fGk+QUeFqiqNAmcfD6BbC7ITJzZwIKvMhtrlwOYaI+IW08eLwuK
jvBKUtgraKajpoaXjwUvpwQUr7owUUmwYIEDPwv0q34Vlzz/jh7r2iTWCbBg
cM0LWmAwFZ1c/TFCSogFovpf3R49G0J86J+3lzALhgx7M/lO9KNeT6PbZBEW
EMSXmRxyL4pXj7M+IMaCrD+HtsX/60b2szTjiE0sqIyrNhcN6UQKuYc0meIs
MJjv8RHobUVzjgEKehIsSPbJ45fmb0KlMqQtKVtYYOEpUJOX8xX5Undt4NjK
go37HplHvq1BBgl3/1puY8Gzs9MXlTMQErSooZVsZ8H4A74A7YBSRBYR7Bfe
wQIOBRHPpKZP6H3n5cbbO1kQ+cVLn2GbjxxCcktapFngsCX8hG1QFtqn9y9N
VoYF5tvXbZv6loQWVhtFPd3NAhOPFw+697xBCMU+G5FlwZSekIDUD1/k/5Dm
9t9eFnQ59UXvzfdCpw4esn8jx4ID/r+YtduTkNicv/mcPAv2PxTf6kvOR8O5
vTqnFVkQdy7Pd3GmHKU57VLNVmLBj4P9p4VW1aObu+/uWLePBa5dRgo7JjrR
gbFqATsVFig7ri+6rTyClhIEOJAqC3Z2X7Ds/0pGdRaX2RIHWPB0YZP08xdt
KFg0d9hdjQXHcwnhH861yKxrqa1bnQWKK0+1PaW+IIlQwwqlQ3g/a56Uvsc5
aEwv9kPQYRYsFZtcV3kZgzLX0OImNVjQs18xaGSNG7pTdTBY5wgLPEOWj6lk
fkaHvPw932qyoNSHxWuxpQRxHOp1/KvFgje35ZI/izuihjlpi3PaGP9TvMn/
vU6AsI+uegVHWeBXe/WnNCUHzjlXH+Q7xoJL5hIfFOiJsE1WQNbpOAsOf13d
7P2vGCbHrMXqT7CgwqteTfJ5BeS+zVm7U5cF3VqmVZMDCO5dXJp/pMeCLTW7
v5hLIzgiZjjRr8+CzReuJi1UVcGa7pgeNUMWXPZdEnYqrIHW0OmaF0YsUEuv
8EgyrEWR+gcLCGMWvKKQaDaNVWC11j9R/zT2p6BPus3JOpCu/haRaoL94+ys
dZzjK9C9pH1WmeH1K3dx3S1rgIJDrrcvmWM9deteWy5sAM/5KusvZ1jA17Cn
avJYCxzN4z8leo4F0guGrwZIXcB9w1rT5TwLGsTK9PVmv0GnbI5C2wUWcAmD
XpxSL0SPL27ZexHrb/M6uZ0BJLj8zmDDM0sWKDhlEBxAgt2WMX9HrViQ+rt6
Lbc+nl/FpmlHrFngFBbxO3mCBJ0/n1c+ucwCYZ99O+p/kCD/295X9TYsMDPR
YZ0t6YOXhc3XN1xhQX7bC7ft5WRwe+l8xMQO58EWt09Ry2Q458Ir+NqeBQ+5
0pPzBQbgkEnO9/6rLDC+cDbAaXU/SCifKt12nQUpHB2mGlZ4vtrIDrNzYMG1
DxtuUacHYJAZbpfhyILoFB8bn4p+qGzZd4hwwviMeT1fsO6H91ldvKo3WPA2
bkvNa+UB8A10pbrfZMHWG/bbPgwNgL2DcHHZLbxeQrPAng24L3WLgjju4HyT
QaKfeCmwe/fZyydcWFD87tS9x20U4F77a3+QKwvS7OQ26x0dBPp4FHfHXRZM
v1I9E3cU93HNwSHhe1jPjgfVTXzxfJxIzr/gzoJ1CkRIa9gAhPs88E+4z4LV
H4wLM54MwJ3LEpZjHix4EmtbpSeF+16rTFnWkwVysiJjvaYDcGCr1ZobD1nw
36o9W38U9oPY0hI5z4sFlN2Rn9scKLAwkJDz8xELZMm/NEcsKND/RctXwxvr
RUCyt0JxEEqjR855+7CgLX8m144yCPH3feTrnrAgoepmluOZQXh8bgcHz1Ps
d/+suqgrg2CjVvPN2I8FJ3j5Jn6HD4KOiF3my2cs8D4sxR8tOATSc6sf9/lj
P7uVdDQ/HsJ6TzGTfI7x8eJTGng/BJN5J2RtA1kwK/G9+OHIEDSGTy6mBuHv
qQUmYy1DkHUroJMezALdaDSRf3IIQoz3pCqH4u9HjbcNjA/CTYWmB25hLNjl
1rK3V2cITm1wOvUlnAUjjou/rBKGYB99vfRyBAuoxRaOlepDINSU/VvnJfaP
tkD2ZZlhmE83ag14hfFXf5jgfWkYSP7E+9ZInE820Z0OP4ah5GrYPcEoFgid
8W99FjEM0ceVDc69YcG2t228ab+HwVO6c1tcNNaLapdDz8lhsOJ0mRuJYcG7
Z1LxurQh3P+CjbvicJ8ErzeaTB0CqaqCeMd4nA/ixm81PYZh1Ttzl9wEnB/X
Q6yabw7B2KP5E3NvsR/P/rnxD+uzzuq1xKH3uD8onTKtBkOQ9p862ysR98cV
Z47WyiF4LtFXW53EAhkXn7/ys0Pg9Od+NFcKvs8rfTIzfRAMyeI3DVNZeP6v
SF/9aggUSr4cjUjD/dTROHTszjDwRV0U603H+2dtkbiVOQwzbov0zZksKInq
7thSPQzd5vHIOosFvtRXf9ObhqFIVTMyOZsFd7SMy18NDMNrwWGH6Q8seB9w
J1WhcATcZx5rKuay4AXLPpdr/Qhc6Ngu5PqRBUe8Sa/yDTFeFX+e5uWx4LT+
aGsPxjsuu+cnK58FNbbb0k5uG4HymJzrioW471e9LjS6NwLDAQH9zkUsYIu/
I2n+GYGVe7aGWZ9YMJe79TYndQSk7P+rmC7G6+tu5EFrR0HHTFRZ9jML1n+r
kvPbOgJ22uz3V7+wIOj0iRDBXyPgp9QklFKK8//gsSeD9BFIk0z2Gytjwe+/
x1xtjo5Cw/pHv6QqWHDPxyN8mHcUphfOOVyuZAGvo6xfyP0RWD+1byABsWBT
m4H80vpRkO9dbzRYxYKPWyOUUldGwKh2okKihgXqbneFQ+aH4FZ+pbJFLX4O
OU05yhyGiHfRiW/qWBD65MJ2YfMRyA91FSZ9xfnl7rp7044R6H5o9EykAeeh
zSNRoyysT8fdv80acV5Wp7758mgERC9wOL5oYgG/3BlSbfwIqJ8cGOhoxnn5
otoEhEbhwoEiI75W7Ffu6PPXfo/Ag51hlUZtLGif+3Rpnd8IxAo47AtuZ4GL
FGrOLsF4Lx9NaurA85NP7X8Vi8MwxNwiwt2F7zMztpIxOgzLAz+fnexmQWxI
xEp89DBINXX89uvB+xXL7n2WXoSOlmQ61n7DfnqxqTClJxtdSX1KWUViwb5T
3/rFQ5OQ36tLxtp9WF+1adP8r3sg7clB9JjMgoxzGenJ8QPQcFtQpaKfBWGP
nDynhwZh+hIjaXGABV7Bnqb6DYOw3uiriMYg9pdXP6cOzzDIa7zz9xjCejMK
GfRjDIPRngcLxcMsiGe/GErJG4ZbYuZOP0dwX1Tt9F7gGIHwNYqD+6kY/2Gd
LxqWI5A3y3XKdYwFOgm9qbFoCLpHR1HeOPZXwYEYQ6ERmGsvVWFPsMBKy7M3
yHgERCoikxUn8fs51pya5jCoZ98SvTGF+6M1VujnmyE4H6MXkDXNgk6fE+Z9
NsPgEbDzzzSNBeG10uZ/Tg1D7L0lJ1kG7g8i0Nw6YwTK7EiDV5ksKCQ32yk/
GYFB07xTKQQLeLy/KHoeGoVlCKoaY7EgPUGjR11wFLYr2avumGGBXZPowjHp
UdCW1Eq5/IMFtQMaTovVo3BlvbjY21kWTOw4L5mVO4rnqh8Bg3MsqOdsUHvs
NAopky1/JH7iPDz7Tf7C5VGo/5bqbPGLBW6Ri1bd10dhqsZ76M1vPD9Fmyrs
jB0F7nyL06QFnK8W/YHPiVGQe7e/WuQvC2ztllM760bBMHTjfvNFFgz4pbob
FIzCjYdTKS+WcN+fPXA0LGwUwhyrxTr/4fz6amVIahmFj+fjnvOt4PWOK5Uf
mhwFK0WvdQ4cbEi6H256bTEbuFdf8q9exYbwvpV6vfujUETWXLtlNRtaDc8O
JeD72eRu83Nbw4bGzzF5W/F7Xr8Vzva1bOgf16G9o43CF4vRJ7Lr2GC4d/Xp
2h1UuKZczfGEmw3e/dfXVfBSQWhtkvcADxvczRJUvLZRoXLAd3n/BjYUSbz6
9W4rFZzy7B6F8rKB3D82ZXSeCmL+x5cmN7Ih7XmTZq0+FWotZR5q87PhWKzO
ZRMjKtxR4fobI8AGS7eEzRcDqSC5bspjTpAN/AvGYtdcqdA42PDbSJgNOzSU
7r19SgW3ggz3NBE2XHFfvWeSjwpSzwN/roiyQT32OjhYUaH1kpObxSY28Dz3
pKpep4LHfsO5AnE2qLBN7vCnUkGGR8GVV4INNLcoRtcdKnQP8/64uoUN+43M
Tf37qfC4iLiNJNmwR3hqc8JnKsgFtbPEt7FhpLaucbaECqTLH2+6bmfDCQet
j1ZOVPBVi2C2SLGhXj66qsafCkobXJxldrLBjse5dtcXKgyMmtIfS7PhJKXy
YX8KFQKKVR3Ju9gQpvt81513VDgQIjytspsNe9NS6057U2HUdv5asCwbDpS8
vvFY5jMKOdj7fWIPxsM50WKkbxQObSy215Jjw7rC7zeK1akwMRY1/kaeDda7
/m3q2E6FiM/3r/xQYMOvk7/PObhR4UjYBaqBEj6fsklzRQgVaHaHbVKU2ZDY
aO2w1ZIKUYclRv7tY8NN5Zl/yR5U0OFfvHRelQ3BUl2c7clUYE1QBvP2s+Gv
IdP84TAVYkvLLdersaHtO9nUhU6FkxEJA3bqbNhddFvFdowKs1cfW1QcxOc/
NXldZI4Kb/+7TBY7zIZneZkT78lUMBTUPn9Hgw1DJuvjS5KosDApRWr6jw28
/nWUBj8qpJSvOiutyQbjDarOq/D3Ji/Hery02KBz9EOa0qoxWLpea0YCNiQ0
NgsvqoxBhmZKl/JRzMcInNxjOAZnhJ+ZBOqwQWltjWba5THgoF3tGDvGhm6N
V77EEBVyKk+eOnKCDeIUny11G8bgYqRs2+uT/+dD6mHOoTHgcuI2YuuyYWLj
LurvI2NQALRmPX02iE7VrfXH97MWbdZPMmDD8vD6T2p2Y7CekdW4aMgGxRc7
rmw8OwYlVcG6Z43Z8KX74kdH5TGwj7pRn3uKDXcWdcxBkwoCN4xPcJuwQbLE
6bU/zxiUH1WqszVlg7bluKTdtjFw2MR/rMyMDboFQWReggoiBLta5AwbKh06
x8aOjUF1Taf2rbNsoCj8TmwWHYPnZatT886xwcfDIcfuwhicKlLnmTvPBs7d
85VrJMdAJMfxppoF1s+4xCpt0yQYSI3vun+RDa6X9fxC8ffv33aolVqyIX84
nTpydwyuv+GMXbLC+LL4tjP1xkApQm1Zy5oNLi2zZWT8//nnDleeXGaD7B+P
sD/+Y1D6JK6+1oYNqSXUBTe+MfDxbJfjusKGU/26R3JOjsHJu6vC9ezY8CTv
497P28dg440Dc0H2bFi/Yy3HJYzPN/vr59uussGrNOPvhwNjEHsptoz/Ohu4
2s+qTemOgc25tu1mDmw4bkEbZGB+dp/m8It0ZAPfo57qG2+owNTdP01yYoN8
x77zzcFUKNS+ZrT5Bhsecfy80XG+CzwPx+RZ3sT5tdfKffWrbqSt2iry9hbG
7xeP3RaUhLjkVzxGb7Nhozh1xtG4AbVKqw7tdGFDiJxL1bD+K/RS8urRq65Y
D4VBzpsUa8BCNDo1/S7WQ/lTR+DD8ydfCw/djQ0WyusFGBtHYZJr+aaCOxsW
W0Of38R98WFlX/et+2wQ2HezT3d6FFwX7NTzPfD+TSxawD/s5x9RsXMP2NB7
+7azy0kqrNCaltUe4nzlaPUTDKBC/djSFQ8vNmwYso5dLqRCCEW5ofQRGy7+
Cb/TQqGC2bcr8v8eYz0RrnEem8dgc9vrcPDB9/1LNf0P4zf6tXHuyRM2XH8R
PVX9jwpplYvn63wxPldOB+tsGYMbJUrlXH5YX5VSV8dPjIFqnq2U/jPMj7+0
oIjCGCxkRPoF++P1foo16KeNAUpsmG4LYEP8fHnQXqx3/9i/RgKBOO8OdJUo
Bo6B0SvFfLMgvJ5VwIYZrF+hEBvR18FYzwnhWnfVXiOy36sHfSFsKH97OlzB
FufDo/qhzWFsOB3RkMnjMQZX3f8ctQpnQ/PZz7tOho2Bwm2FtLcRbBAq1/1P
6fEYzF6/vJ76gg0Hj3lVPIkcg882L29Jv2LD/M0azazOMfC2+Np9NRLnk3/5
htlhrD+zBfWM12y4yyGf4FU5BryG8nH0KDbYRq6JvdY+Bt3HrFcUotmw1k+A
s2LXOEQfeWF3O4YNt8UDn6lxjIO1Wl1DfizuyxOpG8SpYyCj9Ft+Pg7rYWji
a/PMGDB3y0WoJ7Dh3tVjm9fM4rzYfmne4y0bAjMUz602GwcP8YgLZe/w+6Ek
LX2DcdASrC3/954NQQV9m/xax2DN+l9S2kk4n9DPb7Ga49DCufeZbzLOsyOn
Oxmm4/By0ZJWl4L72enPdeG743BhPsx4XRobhGPyrMq4x6G+XWff7XTM19LT
2x6PxuBA5i+hvgw2mA3O6XzvGoOkp1k/tbLw+pkbL81HjAG/tTU5LZsN1+js
9F2y4+B1SKiMLwf35zbjxyonxoEuVJ/gnovz+6Mhl6gt3o944DP8EffD0pu4
ZHe8X4Oi3cl8nN/WSs/6H43DgSTqidwCNjzQ2bAsfGcckrxe7xErwvqw2O0T
+G4cBM7rb3j8Cef3NV7HyvhxeKzyj/hezIaXJtMBPt3jwNyQ32n8mQ2CrrWh
GaRxuDhpX/jpCxt2LnFufT4wDo1V4lFbyzAfqrZKk6xxUItr9XhWjvVoXkiX
GMb73fOxJCrY0OFGFY/C5xEwOaB1FrGh4pOwY3wD3k9uWqqiig337/hN7BrE
+62JXy1Tw4bNRvfLNy/h/UZOT4bU4rxr+XPFS3oCGr+sbpqvY0OL9P3PAyvj
oB5Zkm1VzwYH23X89/D7lFvOYXUNbGDyCV18sTgOQvrbXRSa2MBtISLivWkC
fKR7zCOb2WC+No9lgZ9Z//zVl1rYoObZKJOiOwGWZI3N9m2Y3wmtqsE9eL8C
1mJLO+7Hw+MVxccmQD00aXh/JxtIIxkGw+J4v+vnquO62OB32b8kSGkChHTW
p6zuYYOj7pf3B6+lIh/JSn/nb7h/NHgmDJPGgfXLxbGnlw1luqv2bV0eB6su
GaP/+tjgnPLm48vJcWjK7ldKJmM856xiZ/F7df9QwQ0D2D/OkT9Td+P9bI7O
u1LYUC0bYWH0//3++0kaGGTD54uZBpRd+H6imV90hvF8+GzLDxlbfD+2VXzW
CBueH6DqefhMgFWzgLcQFfdvReV8p/sENKfU2XqOsYGtg+7LeU3AIW+P42Pj
bBjIjh/2qJ6ANAsFWYPvbPhYpXX3/pOJ/wUxAc7+PxQ04Amy5u8//90Hc8K3
5D+CDpTsGejvPybk+Szr5+Q/7+hHz4Hp7z8Ke2pboejkP1zD+7Hp6u8/AgkR
AVYN5T/Kna+UUezvP0K1z6dR5OQ/OHhjd7nt7z/jB3QCgyTlP6ZSF1oh7+8/
VaJ7LFQA5T8ULcs8ifDvP8PKRoFrF+U/ggd/H/Hx7z8yQboEJcbkP/DhMgJZ
8+8/VemRGE/15D9evObkwPTvP+JMxGbQQeU/zJaaxyj27z/SUyDstC3lPzpx
TqqQ9+8/av7qI6kr5T+oSwKN+PjvP0strAwbTeU/FSa2b2D67z/nYjrUzX3l
P4IAalLI++8//JY4+9l+5T/w2h01MP3vPxmZIt2+muU/XrXRF5j+7z+1/dy0
Tb7lP8yPhfr//+8/FsALcFcQ5j8USapK
       "]]},
     Annotation[#, "Charting`Private`Tag$11732#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"a\"", TraditionalForm], 
    FormBox["\"Expoente de Lyapunov\"", TraditionalForm]},
  AxesOrigin->{0.5, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  LabelStyle->{"Large"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.5, 1}, {-3.248340440850102, 0.6894948185345153}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Input",
 CellChangeTimes->{{3.8775148178007836`*^9, 
  3.8775148183442125`*^9}},ExpressionUUID->"cf757ce1-6336-4e5f-8e0b-\
53ef09b65285"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{
    "O", " ", "mapa", " ", "passa", " ", "a", " ", "exibir", " ", 
     "comportamento", " ", "ca\[OAcute]tico", " ", "a", " ", "partir", " ", 
     "de", " ", "a"}], " ", "=", " ", "0.85"}], ",", " ", "aproximadamente", 
   ",", " ", 
   RowBox[{
   "pois", " ", "\[EAcute]", " ", "justamente", " ", "nessa", " ", 
    "regi\[ATilde]o", " ", "que", " ", "as", " ", "ilhas", " ", "de", " ", 
    "estabilidade", " ", "se", " ", "tornam", " ", "muito", " ", "mais", " ", 
    RowBox[{"frequentes", ".", " ", "Para"}], " ", "verificar", " ", "essa", 
    " ", "hip\[OAcute]tese"}], ",", " ", 
   RowBox[{
   "construo", " ", "um", " ", "novo", " ", "gr\[AAcute]fico", " ", 
    "focalizado", " ", "dentro", " ", "dessa", " ", "regi\[ATilde]o", " ", 
    RowBox[{"espec\[IAcute]fica", "."}]}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.87751482100937*^9, 3.8775149034543743`*^9}, {
  3.8775149809884005`*^9, 3.877515011969016*^9}, {3.877551471545912*^9, 
  3.8775514786068373`*^9}},ExpressionUUID->"a2bf049c-74d0-4b1e-8051-\
7b7a653aa355"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"lyapunovC", "[", 
    RowBox[{"a", ",", "0.5", ",", "10000", ",", "1000"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0.85", ",", "1"}], "}"}], ",", 
   RowBox[{"Evaluate", "[", "optam", "]"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", " ", 
    RowBox[{"{", 
     RowBox[{"\"\<a\>\"", ",", "\"\<Expoente de Lyapunov\>\""}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.8775149137067747`*^9, 3.877514922470434*^9}},
 CellLabel->"In[73]:=",ExpressionUUID->"8f6c2852-8e23-400b-ba8c-f8300dd4ace0"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
t3vQ6oYsA3P7Rmn/Ay763yo=
       "]], LineBox[CompressedData["
1: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
       "]]},
     Annotation[#, "Charting`Private`Tag$15325#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"a\"", TraditionalForm], 
    FormBox["\"Expoente de Lyapunov\"", TraditionalForm]},
  AxesOrigin->{0.85, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Large,
  LabelStyle->{"Large"},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0.85, 1}, {-0.8489951547549666, 0.6889311023874517}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.8775149290562468`*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"6a42b117-5f37-4805-9cfc-3e254ca8a478"]
}, Open  ]]
},
WindowSize->{1366, 685},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 236, 4, 28, "Input",ExpressionUUID->"c3cb4a6f-42f8-4071-bd66-9c3571eeefb9"],
Cell[797, 26, 665, 15, 45, "Input",ExpressionUUID->"d3579f51-5e71-4d0a-8ebd-750dcf51c2db"],
Cell[CellGroupData[{
Cell[1487, 45, 322, 7, 45, "Input",ExpressionUUID->"0b75a09c-784d-450b-af2f-7d72086ebb86"],
Cell[1812, 54, 397, 8, 32, "Output",ExpressionUUID->"3602493f-4054-42a6-92e7-c6e928d1e4ff"]
}, Open  ]],
Cell[2224, 65, 722, 20, 45, "Input",ExpressionUUID->"6d080ace-bb85-4d09-8169-8bd932e06b79"],
Cell[CellGroupData[{
Cell[2971, 89, 1064, 28, 82, "Input",ExpressionUUID->"2deb90ee-8db1-41a0-b308-426757dd6ad2"],
Cell[4038, 119, 33566, 622, 370, "Output",ExpressionUUID->"9de6c22b-abdb-41c1-a4c1-a13feb40e9d7"]
}, Open  ]],
Cell[37619, 744, 726, 12, 56, "Text",ExpressionUUID->"a2a0b916-d81d-4358-9b48-2ec99a0fe7fb"],
Cell[CellGroupData[{
Cell[38370, 760, 683, 13, 45, "Input",ExpressionUUID->"dc74290e-8ed8-4943-975d-bc972d41f041"],
Cell[39056, 775, 560, 10, 32, "Output",ExpressionUUID->"bb5b7c2b-69ad-45e5-a28e-b5702f4f7cfb"]
}, Open  ]],
Cell[39631, 788, 979, 18, 100, "Text",ExpressionUUID->"bf764c7b-9054-40b9-b43b-00ce545dc53f"],
Cell[CellGroupData[{
Cell[40635, 810, 430, 10, 45, "Input",ExpressionUUID->"5991ad06-4562-45fe-914c-767763ccc5dd"],
Cell[41068, 822, 596, 12, 32, "Output",ExpressionUUID->"e7186c9f-bf21-4298-b372-d6f5ea00d5e8"]
}, Open  ]],
Cell[41679, 837, 551, 11, 78, "Text",ExpressionUUID->"35c88f2d-fb68-4073-a9e6-64a30e025b0a"],
Cell[42233, 850, 237, 4, 28, "Input",ExpressionUUID->"92dfa79a-6005-4704-a02d-9c927c2e9222"],
Cell[42473, 856, 4254, 105, 329, "Input",ExpressionUUID->"229b060b-1539-4e36-b501-17e23a894eb8"],
Cell[CellGroupData[{
Cell[46752, 965, 1877, 43, 175, "Input",ExpressionUUID->"19063559-a0f7-4be3-9b7e-54b8e907bca2"],
Cell[48632, 1010, 17847, 300, 594, "Output",ExpressionUUID->"a0a08ac8-1d3e-4545-9fe5-144bc5854f32"]
}, Open  ]],
Cell[66494, 1313, 304, 4, 28, "Input",ExpressionUUID->"aca89f74-8925-4be0-9778-b1e7ab59c4ae"],
Cell[66801, 1319, 1480, 34, 56, "Text",ExpressionUUID->"d75c594b-0cd4-4d65-a91a-4a7caa9998ec"],
Cell[68284, 1355, 462, 12, 28, "Input",ExpressionUUID->"4364a5dc-a85f-4e34-ac34-363907ae356a"],
Cell[68749, 1369, 711, 18, 56, "Text",ExpressionUUID->"e3f6e811-be0b-4ab1-b2e7-b1f4b48acbb8"],
Cell[69463, 1389, 1722, 33, 105, "Input",ExpressionUUID->"4761d378-e027-48d5-bee1-0444835b03aa"],
Cell[CellGroupData[{
Cell[71210, 1426, 883, 26, 45, "Input",ExpressionUUID->"863fe7ec-b1bc-4a65-80c2-15df20c41ae1"],
Cell[72096, 1454, 390, 7, 32, "Output",ExpressionUUID->"bf56175b-3c59-4d43-b047-e27e476252f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72523, 1466, 1278, 32, 177, "Input",ExpressionUUID->"fcbcd796-0031-4832-a71b-b9f2b5f18473"],
Cell[73804, 1500, 9456, 162, 568, "Output",ExpressionUUID->"464a3096-9cd2-49c7-bb51-976884fb7e5a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83297, 1667, 1181, 30, 45, "Input",ExpressionUUID->"bf9e19b7-2fc8-47c0-902a-08c2170170c8"],
Cell[84481, 1699, 568, 10, 32, "Output",ExpressionUUID->"91b7d677-c8ea-40b6-988b-5297af361718"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85086, 1714, 1402, 33, 156, "Input",ExpressionUUID->"e3616134-1303-45b6-b547-9c2976538085"],
Cell[86491, 1749, 10300, 177, 587, "Output",ExpressionUUID->"9c7cbe2a-ea29-4056-a5bb-27241a1f22a0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[96828, 1931, 1041, 28, 45, "Input",ExpressionUUID->"76af9ee1-dfd7-42e8-9892-1eaad2a9a732"],
Cell[97872, 1961, 440, 8, 32, "Output",ExpressionUUID->"5b3a388c-fdd4-4e9b-86ae-c4407eded11a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98349, 1974, 1088, 29, 45, "Input",ExpressionUUID->"d1a2faf9-ce94-4209-9248-18c285191bb7"],
Cell[99440, 2005, 513, 9, 32, "Output",ExpressionUUID->"2755052d-3f09-4ec5-a007-07ef97dd3d2c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99990, 2019, 1039, 28, 45, "Input",ExpressionUUID->"8050d72d-16e7-4e54-ba28-82da7d9218cb"],
Cell[101032, 2049, 538, 9, 32, "Output",ExpressionUUID->"af82418b-6d11-4d29-b8e7-308a2efa7af2"]
}, Open  ]],
Cell[CellGroupData[{
Cell[101607, 2063, 1492, 34, 45, "Input",ExpressionUUID->"7bf534a0-948f-4bc7-bdb7-4701410ef6a1"],
Cell[103102, 2099, 535, 9, 32, "Output",ExpressionUUID->"32050988-ba61-478e-bb0f-907704c18fcc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103674, 2113, 1049, 28, 45, "Input",ExpressionUUID->"fafc9cec-715c-48b3-b9b5-f2a172df5456"],
Cell[104726, 2143, 414, 8, 32, "Output",ExpressionUUID->"3c96e2d4-e65a-4573-beec-91c441e53542"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105177, 2156, 1147, 30, 45, "Input",ExpressionUUID->"a1d6d7f8-05eb-4465-9ba4-62e7dd58cbbc"],
Cell[106327, 2188, 515, 10, 32, "Output",ExpressionUUID->"aba016fb-23df-4175-8be8-9e4c6f7cca28"]
}, Open  ]],
Cell[106857, 2201, 289, 5, 28, "Input",ExpressionUUID->"bd1e3583-71f6-48c9-b793-8e3cbe259841"],
Cell[CellGroupData[{
Cell[107171, 2210, 2387, 61, 86, "Input",ExpressionUUID->"31795560-03fd-466f-b42d-c5622edc9c80"],
Cell[109561, 2273, 1032, 23, 32, "Output",ExpressionUUID->"cf1874cd-6d14-4428-bfae-e0b86bb432cb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110630, 2301, 3246, 83, 176, "Input",ExpressionUUID->"55d83881-1fa2-48f6-be2a-27e348481ea3"],
Cell[113879, 2386, 1014, 27, 32, "Output",ExpressionUUID->"d90ebaec-423f-4050-9599-0ae05737f925"]
}, Open  ]],
Cell[114908, 2416, 1112, 21, 69, "Input",ExpressionUUID->"0dd2dca3-d6fe-4539-aa55-08c41066d80e"],
Cell[116023, 2439, 235, 4, 28, "Input",ExpressionUUID->"65e53383-0105-4d5f-8312-6e6c8d1cceb5"],
Cell[116261, 2445, 2854, 75, 139, "Input",ExpressionUUID->"f4fe9562-460e-4d32-bb2b-5a5608707e3d"],
Cell[CellGroupData[{
Cell[119140, 2524, 442, 10, 53, "Input",ExpressionUUID->"c55e1eec-4381-4ed9-b9d7-d77749199e87"],
Cell[119585, 2536, 504, 10, 32, "Output",ExpressionUUID->"782c704a-befa-43d4-b813-137e25b36fe9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[120126, 2551, 537, 12, 64, "Input",ExpressionUUID->"00dad599-7015-456e-aed1-ec1b76b05934"],
Cell[120666, 2565, 738, 18, 32, "Output",ExpressionUUID->"627950a9-6f7e-441d-a8be-0e8143db8b9f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[121441, 2588, 965, 23, 141, "Input",ExpressionUUID->"f7287458-9e89-4715-866b-ddf028cad108"],
Cell[122409, 2613, 383, 7, 32, "Output",ExpressionUUID->"8aa7d474-5be0-46f8-9016-033e8286ebba"],
Cell[122795, 2622, 335, 6, 36, "Output",ExpressionUUID->"fbdfad48-ccea-42f3-be4c-d0d0f5aff605"],
Cell[123133, 2630, 263, 4, 32, "Output",ExpressionUUID->"472a5dc2-7e27-47b3-9e07-ef0e5e546e93"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123433, 2639, 1787, 44, 235, "Input",ExpressionUUID->"7bb28854-b82b-44c4-82f7-cbbd11fce721"],
Cell[125223, 2685, 15921, 326, 237, "Output",ExpressionUUID->"af090244-55f7-4ecf-a05c-7e0b2bc4b2dc"]
}, Open  ]],
Cell[141159, 3014, 1800, 46, 178, "Input",ExpressionUUID->"4fe3605b-c3df-4aa6-8b7d-be749855e978"],
Cell[CellGroupData[{
Cell[142984, 3064, 603, 12, 48, "Input",ExpressionUUID->"ca8d1e87-0b72-4e66-850b-3a3a54ce8cf8"],
Cell[143590, 3078, 315, 4, 32, "Output",ExpressionUUID->"2fd2bcc4-cc5f-4e31-9668-da0e2f241aa1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143942, 3087, 982, 22, 105, "Input",ExpressionUUID->"24bc61f4-514f-4e72-9228-ed15f251b977"],
Cell[144927, 3111, 214, 3, 32, "Output",ExpressionUUID->"1245b67e-1757-4ce5-8116-121303e1bf2b"],
Cell[145144, 3116, 214, 3, 32, "Output",ExpressionUUID->"456a298c-06af-4299-814e-00066012dec3"],
Cell[145361, 3121, 216, 3, 32, "Output",ExpressionUUID->"f4bb0192-eea9-40ac-a17e-a32f99d6e53c"]
}, Open  ]],
Cell[145592, 3127, 640, 14, 28, "Input",ExpressionUUID->"d36598ff-b834-437c-9004-2682dd8e4187"],
Cell[146235, 3143, 867, 21, 64, "Input",ExpressionUUID->"6cd1b852-c0ce-440b-b7b5-ed6a491f62b0"],
Cell[147105, 3166, 29059, 499, 319, "Input",ExpressionUUID->"cf757ce1-6336-4e5f-8e0b-53ef09b65285"],
Cell[176167, 3667, 1102, 22, 67, "Input",ExpressionUUID->"a2bf049c-74d0-4b1e-8051-7b7a653aa355"],
Cell[CellGroupData[{
Cell[177294, 3693, 572, 13, 45, "Input",ExpressionUUID->"8f6c2852-8e23-400b-ba8c-f8300dd4ace0"],
Cell[177869, 3708, 58393, 979, 323, "Output",ExpressionUUID->"6a42b117-5f37-4805-9cfc-3e254ca8a478"]
}, Open  ]]
}
]
*)

