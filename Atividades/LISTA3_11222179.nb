(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    655635,      12238]
NotebookOptionsPosition[    650348,      12151]
NotebookOutlinePosition[    650690,      12166]
CellTagsIndexPosition[    650647,      12163]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["Exerc\[IAcute]cio 1", "Item",
 CellChangeTimes->{{3.874262749618672*^9, 3.8742627718090596`*^9}, {
  3.8742639547615986`*^9, 
  3.8742639547615986`*^9}},ExpressionUUID->"aa7af4a6-95d2-403d-8431-\
5211de700154"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Defini\[CCedilla]\[ATilde]o", " ", "do", " ", "sistema", " ", "de", " ", 
   "equa\[CCedilla]\[OTilde]es"}], "*)"}]], "Input",
 CellChangeTimes->{{3.87426395810456*^9, 3.874263963290829*^9}},
 CellLabel->
  "In[488]:=",ExpressionUUID->"07abc4b7-a63f-415f-9bdf-4c3441c758d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"eq1", " ", ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"x1", "''"}], "[", "t", "]"}], "\[Equal]", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[Omega]1", "2"]}], 
      RowBox[{"x1", "[", "t", "]"}]}], "-", 
     RowBox[{
      SuperscriptBox["\[Omega]1", "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x1", "[", "t", "]"}], "-", 
        RowBox[{"x2", "[", "t", "]"}]}], ")"}]}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"eq2", ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"x2", "''"}], "[", "t", "]"}], "\[Equal]", 
     RowBox[{
      SuperscriptBox["\[Omega]2", "2"], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x1", "[", "t", "]"}], "-", 
        RowBox[{"x2", "[", "t", "]"}]}], ")"}]}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Solu\[CCedilla]\[ATilde]o", " ", "das", " ", 
    RowBox[{"EDO", "'"}], "s", " ", "usando", " ", "a", " ", 
    "fun\[CCedilla]\[ATilde]o", " ", "DSolve"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sols", "=", 
   RowBox[{
    RowBox[{"Assuming", "[", 
     RowBox[{
      RowBox[{"A", ">", "0"}], ",", "\[IndentingNewLine]", 
      RowBox[{"DSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eq1", ",", "eq2", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"x1", "[", "0", "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{"x2", "[", "0", "]"}], "\[Equal]", "A"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"x1", "'"}], "[", "0", "]"}], "\[Equal]", "0"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"x2", "'"}], "[", "0", "]"}], "\[Equal]", "0"}]}], 
           "}"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x1", "[", "t", "]"}], ",", 
          RowBox[{"x2", "[", "t", "]"}]}], "}"}], ",", "t"}], "]"}]}], 
     "\[IndentingNewLine]", "]"}], "//", "FullSimplify"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8742627751047974`*^9, 3.8742627755268364`*^9}, {
   3.8742632765786877`*^9, 3.8742632829612226`*^9}, {3.8742634583406405`*^9, 
   3.874263673386959*^9}, 3.8742637332426715`*^9, {3.8742638437614183`*^9, 
   3.8742641181987066`*^9}, {3.874264157958601*^9, 3.8742641585678296`*^9}, {
   3.8742643046056376`*^9, 3.874264312821449*^9}, {3.874269509185585*^9, 
   3.8742695185359125`*^9}},
 CellLabel->
  "In[489]:=",ExpressionUUID->"bb3dc15e-c166-49ee-9b6a-3e854757477f"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Defino", " ", "um", " ", "vetor", " ", "de", " ", "soluc\[OTilde]es", " ", 
   "e", " ", "divido", " ", "os", " ", "resultados", " ", "pela", " ", 
   "constante", " ", "A", " ", "para", " ", "obter", " ", "as", " ", 
   "medidas", " ", "de", " ", 
   RowBox[{"x", "[", "t", "]"}], " ", "nas", " ", "unidades", " ", 
   "corretas"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8742643617665033`*^9, 3.874264388963378*^9}, 
   3.8745983703310947`*^9},
 CellLabel->
  "In[492]:=",ExpressionUUID->"fe45a2d7-bad3-4b22-a876-af4be4e95ac3"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"solsPlot", "=", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"x1", "[", "t", "]"}], ",", 
      RowBox[{"x2", "[", "t", "]"}]}], "}"}], "/.", "sols"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"solsPlotUnidadesA", "=", 
  RowBox[{"solsPlot", "/", "A"}]}]}], "Input",
 CellChangeTimes->{{3.8742643169345617`*^9, 3.8742643502584243`*^9}},
 CellLabel->
  "In[493]:=",ExpressionUUID->"71010df3-032e-4b8d-b94e-f6f02634d382"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[Omega]1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cosh", "[", 
          FractionBox[
           RowBox[{"t", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "2"}], " ", 
               SuperscriptBox["\[Omega]1", "2"]}], "-", 
              SuperscriptBox["\[Omega]2", "2"], "-", 
              SqrtBox[
               RowBox[{
                RowBox[{"4", " ", 
                 SuperscriptBox["\[Omega]1", "4"]}], "+", 
                SuperscriptBox["\[Omega]2", "4"]}]]}]]}], 
           SqrtBox["2"]], "]"}]}], "+", 
        RowBox[{"Cosh", "[", 
         FractionBox[
          RowBox[{"t", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "2"}], " ", 
              SuperscriptBox["\[Omega]1", "2"]}], "-", 
             SuperscriptBox["\[Omega]2", "2"], "+", 
             SqrtBox[
              RowBox[{
               RowBox[{"4", " ", 
                SuperscriptBox["\[Omega]1", "4"]}], "+", 
               SuperscriptBox["\[Omega]2", "4"]}]]}]]}], 
          SqrtBox["2"]], "]"}]}], ")"}]}], 
     SqrtBox[
      RowBox[{
       RowBox[{"4", " ", 
        SuperscriptBox["\[Omega]1", "4"]}], "+", 
       SuperscriptBox["\[Omega]2", "4"]}]]], ",", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          SuperscriptBox["\[Omega]1", "2"]}], "+", 
         SuperscriptBox["\[Omega]2", "2"], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["\[Omega]1", "4"]}], "+", 
           SuperscriptBox["\[Omega]2", "4"]}]]}], ")"}], " ", 
       RowBox[{"Cosh", "[", 
        FractionBox[
         RowBox[{"t", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["\[Omega]1", "2"]}], "-", 
            SuperscriptBox["\[Omega]2", "2"], "-", 
            SqrtBox[
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox["\[Omega]1", "4"]}], "+", 
              SuperscriptBox["\[Omega]2", "4"]}]]}]]}], 
         SqrtBox["2"]], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["\[Omega]1", "2"]}], "-", 
         SuperscriptBox["\[Omega]2", "2"], "+", 
         SqrtBox[
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox["\[Omega]1", "4"]}], "+", 
           SuperscriptBox["\[Omega]2", "4"]}]]}], ")"}], " ", 
       RowBox[{"Cosh", "[", 
        FractionBox[
         RowBox[{"t", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{
             RowBox[{"-", "2"}], " ", 
             SuperscriptBox["\[Omega]1", "2"]}], "-", 
            SuperscriptBox["\[Omega]2", "2"], "+", 
            SqrtBox[
             RowBox[{
              RowBox[{"4", " ", 
               SuperscriptBox["\[Omega]1", "4"]}], "+", 
              SuperscriptBox["\[Omega]2", "4"]}]]}]]}], 
         SqrtBox["2"]], "]"}]}]}], 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["\[Omega]1", "4"]}], "+", 
        SuperscriptBox["\[Omega]2", "4"]}]]}]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.8742643508364167`*^9, 3.8742698402901726`*^9, 
  3.8742743512861123`*^9, 3.874277404195776*^9, 3.8742776834327035`*^9, 
  3.8742778451392756`*^9, 3.87427878958778*^9, 3.8742790268834352`*^9, 
  3.874598430901864*^9, 3.8745990259981947`*^9, 3.8745999965485697`*^9, 
  3.8746005301971793`*^9, 3.8746006066751647`*^9, 3.8746007545828876`*^9},
 CellLabel->
  "Out[494]=",ExpressionUUID->"4f5fff30-4958-4e29-a070-e2895877789d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Constru\[CCedilla]\[ATilde]o", " ", "dos", " ", "gr\[AAcute]ficos", " ", 
    "das", " ", "diferentes", " ", "situa\[CCedilla]\[OTilde]es", " ", 
    "solicitadas"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"visual", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ImageSize", "\[Rule]", "Medium"}], "\[IndentingNewLine]", ",",
        " ", 
       RowBox[{"LabelStyle", "\[Rule]", "Black"}], "\[IndentingNewLine]", ",", 
       RowBox[{"AxesStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"Medium", ",", "Black"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Medium", ",", "Black"}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Caso", " ", "1"}], ":", " ", 
     RowBox[{
     "\[Omega]1", " ", "==", " ", "\[Omega]2", " ", "==", " ", "1"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"valores1", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Omega]1", "\[Rule]", "1"}], ",", 
       RowBox[{"\[Omega]2", "\[Rule]", "1"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"solsPlotUnidadesA", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "/.", "valores1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "30"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t(s)\>\"", ",", "\"\<x[t] (1/A)\>\""}], "}"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Evolu\[CCedilla]\[ATilde]o do sistema no caso \[Omega]1 = \
\[Omega]2\>\""}], "\[IndentingNewLine]", ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x1[t]\>\"", ",", "\"\<x2[t]\>\""}], "}"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Red"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.874264142377042*^9, 3.8742642854948606`*^9}, {
  3.874264399786705*^9, 3.8742647322405367`*^9}, {3.874264768330557*^9, 
  3.874264801268135*^9}, {3.87426484664042*^9, 3.874264894265915*^9}, {
  3.8742652900195274`*^9, 3.8742652978770447`*^9}, {3.8742653999682093`*^9, 
  3.874265426403036*^9}, {3.874265492835038*^9, 3.8742655272034693`*^9}, {
  3.8742658669702883`*^9, 3.8742658679543858`*^9}, {3.8742663666212077`*^9, 
  3.874266393014557*^9}},
 CellLabel->
  "In[495]:=",ExpressionUUID->"db440d23-8374-463c-8184-870976de4685"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJwUV3c81e8XF1HK3nvvfV3KqueggfpKQyGhgYyGkpGKNMzKioyMyMxeIR7Z
O3tnXlukULJ+9/fXfb1fZ73P+5xzX59H+Nqdc9aUFBQUXdQUFP//XR9prBEL
SDp6PPTn6KKVwZHuWC537X5vdLoD7owSaBCwf7vG1R+C2CLT/xMhSCCOIWZa
pmMxqHDaSfrBuhpyMUrvo+r/gB4okUK9FE+gq/nN6buvUhB7BfGF1oWz6DTH
j8ebup+QzZca+fRfJihGyyd181EOEt/hUDu+YYWYlzhDNvry0B7ZyPJEaRv0
Mi7V449yIboapHmM54Aj2jJSt157VYyCeOLdRf9zQvcomwx/z5agdVYK7ZFF
ZzSbb6a2ovsFiRAEBPeQ3JCF9YLwcmwFsq4PoDVQfozsD1a8WH9UiRxZFJI+
L3ih0S+Gd1b7qpCrW0TLG5aXKIqd88Z96hpUcNPO8/G0L7pwe9Tkl3It2j22
t1BhKgA1Cd7V+fmqHtm/yYzcTwhGL9zUDt8pa0DJn29JLSyHIOigkFuabUTL
e1yNqqvDUJF3MPuibguSodQWHEh7h+4OmR5wcGpFxFujxT1lUUhWRWR3LrYN
OYof7zg+EYPa75mu/n7UjpwvWrb8KYxHJ8Tmv6/0daJOpn+WbMUfUZKRoUnu
7S7UUZxCX8uYgvY8zuu8S92NrolLPKC/l4q+9DysX1buQSmqdPL7z2cggs/B
3B+v+lAfRe3nf19z0Ov8O7KZYv1o+9Xl/8xDc9HiaNdHx7J+lHVp7L6YXR5K
VouJWpgdQLfmNrlzhAsQ37zc8zndYcRq+UGYp7YYPeQI3kkdHEbFo/l5nJ8/
oz6dNbebTt9R1tU3JVTZJSgkuvzWTOwIOqc3N26dWoaeS6Rk/Ho0hsw8BoU9
6jHa6Dv89mffBHpJ/WYs63wN+qy83ypFehLttUyaFF6rQS6v+mUsPCZRBiUj
qL+rRb903CubBUioga1sTHiyDs1nli4kW0+hKvNi81v+jWj42RGdK79nUMUQ
yxM+1m+oUlF3uZHhB4qz2BaPuNCDnvizlnpZ/UCFAltacnk9SGtq8vnhvB9I
6sbSeBZjLyqJes7z0XgJnS0UumDR1IvyqOuOe8UsI5PTPgxBR/pR5y0xQ172
FUSovKcRwjaECNGB+etHVpDLYJvurVtDKKhhlavTZgW9KKw9/KV2CBmK1k76
fl5B6/ys6xHOw6ip39p9/fIvZJHwY9Ol6Tuq1k1J6vjwG10KeVmrJjWGlF5n
z/1p+I1mxldO7js9hmL7ixUEln+jC1dPBNncGUNutxo+22uuomunuS62FIwh
hYi5FqruVVRI6pCbVR9HMeMrzDL/VhG2jVf6aTqOaOX+XTQSWkOjdzdN77uP
I1LlgfEYxzWEq3hrx4rGUdS87Joq9Tr6VTvAzSw7gfarqmiYy66jiQwD9YwT
E+iBp5an99l1dHg30+fT1QlkxPYf7bf360ii1ev40NsJVG5hbLhWvY6G7TRY
92ZPIJm0K6G88+toXbC6xb9+AlEfvc1/89AflPQphzdtfQLd83W59tr8Dzq1
O3pOi34SjXU+SSnw/oMKlotLxEQnUantG8Keb3+QZntV2eLpSXQ3OOd4lO1f
xHSmhlf43SQaGfrsX/nqL4rNL+ITT5tEpyS+fpvO/4vanEoDbpdMIomyDlMi
xQYKOGoa0NQ3iUKpB2NNJTbQg4mZ+IGpSURhNDHpeXoDmYckK0j+nkRDpF+3
Wt5tILlQBgXXgySkp7iZ96tiA3W6FLi6cJBQkTvVX64pMjYsmssUIiHRmoNH
0MF/yOx75wE+GRIKYmDztib8Q3YdKY5YmYR2TPjqAy79Q7k7DRnhGiTkkChG
l/f4H5JY7b0Tr01C/T/kzvYn/kP9y2EOQydJ6ISaavhOIxkr7Jif+I+ECryP
DIn9/IfGIszox86SkHDrcaFTHJvIH587m2JMQq85Da2dtDbRzDEq2mgTEtq6
ejE94tom+u8Fo1CpGQnZfbJYLvfdRKeS819RmZNQ77qNCilrEyWu9lxwIeNj
2nfcD/RsossRnM+ZyTg3wLVCaXMTtbwlqXaT4wV6PakuCW+hDsVnQeXk/IFC
vnqPT24hKR+RuhZy/Q37oFeJt7YQX+Qs255zJGRT+K6zMXQLFfrs1pmS+Xfv
xnP+LNlC0YQPyr3k/rQN0sw5xrbQFKdU6QNy/1lhuQlaNNtIOpip5TBZH77R
kulrcttITp9+kpesH8Vvp3eNZ7dRkxxdpZE0CZFoZAyUXLcRMTTZJluQfPc8
E5vhMduomy7C4zA7CWUqRGVuf91GCx+2smZpSShE55zljZlt5Ct/9UvV9iRy
uXiAuZluB9nuw/a1PyfR0ScPnd9d2kEitvG7ut2TSCREWWL30Q76HfsgE9dM
Iprk+T7rDztI7MmS//WCSdTWaqZJ/LGDHCz2TIgGT6K8cZYfkSy76Ck/tSc8
mUTha02xFGq7aKbvacgL+0lkya9J2ea9iyTWX074wSQ6Rvidr5K6i6Tis2L1
ZSaR1PEM6+jWXYQC/NuVWSeRW9GrGyp0FODYoML6bGICwch2/Z5LFIAkMvdJ
uU4g5dkBoUI7CnCz4GUDswkk9qvQ/eYjClhKiit7oUW+V5rbst8SKEBCZbMu
ZmccdciPvI5ZpIBxfaV8JvK91xwunTmzSwFs/wbkPhmPoyLtcKBi2QPLv69p
PiKQ79/Y8Jfd4T3AbD5nUzE9hq49rjA+7L0HjDUGfRdOjqFfLbF8nZyUkMEe
d1S45Tsi9T588EKGElYY9al4bn1HvWMX29SOUEL9nl3OVLrvqHSVwSvuGiVc
ozU6EHJyGD3j85x0zKSEmYe0QJk5iNgcLdP36VJBhEE0b5l6H5LZl1hndIkK
qmsany6V9SL4MD0R6UAFavPyn6u0epFj/y1euTAq8BiXZ7HW6EE1xx4FGk1R
ga2ub5GGRBdy5o+8HemzF0KDWrfvBLSirrZOZdkWarDrnLhVbFSIZu04zjiP
UcPs7VJBxe95aGevmUP5KjV8uUjt8NE2B8lojiee4aeB8kfvqDmXkpF3yjKb
820aiBnQdNMnuiFlL7o/X5j2gbgB/cfNkDwcQjhRZmi8H7oLrCS1TrVixSHT
k0du7ofVDSPYvNuGW57f6pL12A/5AmprA2+/YZr+sIX9CfvBFTwvX11qxx5P
JnmrF/dDGmXt+g+FLnyj2evR4ee0YB1+cJQzuA/veRC2XyKCFg7rX4jd4e7H
sQKpYWzptKB30SGG+UM/7nf69mnlGy1wvNouTsoewP9xCXzP4D0AtcIm6cN4
CB+yLjsilH8AWCOlPydnj+Iuhm+NDHUHoC3j+onzbGP47ucJ4+3+A7DS0f5P
y2gMpx88cHtw5wBQ5xxL1a0bw4J5JrFhBgeh7NBxmYH0cfzlsqPMsysH4WwB
SffaxDg2o/Yqcrp7EJzSdVu0uSdwmElKm2H4QbC5ICa0+XwC799d29k/cRAm
pj+Hc1+YxB9TaQP+rB6EL/2d6VwvJ7HOOX7O6X10cIovlv5K8SR+9PGYYrU8
HcR17J/O5CThn6dCLR+700F0xwlxzW8k/GotecEhkA7y7yZmKm6SsExcqatZ
HB2I7VkbNJOYwjd+jb85XEsH52t23ho+nMID75QqV5joYV2WkcaLaxpHdWUw
uojTw6saoUZO7WlsxiBp+U+dHhou/ewpuDmNh5/x71Bep4d6D+2jfwum8fuK
d//5uNLD1RNf3aMHprHFBuv7g4H0YHlcDh/ZnsZjtw9osRXSw2FFr1537Rmc
kPYi4F0jPdQELe1jvjaDr5EohvhG6EHlqgflh6czmGT6x118HwOEOJ6p+VQ+
g2ePkYoPmTIAXZCujL70LE7ztNxXdosBTmo+nwjWnsX2pYMXkTcDzOc6/Gox
mcWLih1rJzMY4GZ0XDTn81mcaX/6eAtmgDXuv4IS72bx7Y/1YUbdDKD0jL9T
LGMW/+SpIJpuM0DA2UeGK62zONdY/dl3ZkZo/8DhX/F9Ft8LKui8KsEIvV3H
eh8uzmJis6LItAYjEFWb2SX+zeJV6gwn+zOMQHipq1VJM4cLQeLr0nVGkIvi
NdRnmcMuHglM990YgWYsxOor3xw+XMRn9SeQEeaaiyKlJObw358R2R4JjBAi
aqHkqTCHS2RZd3cLGeGFvKhjreocfmjz2vB5EyMEVJt/3NScw5oJtLH7Rxlh
Q4/juIj2HN4aev4j8DcjXHxBU6t+fA5bHPSK3b+XCZauv8jW0ZvDOPVInQED
E6hEesUdMZjDQic2fwRyMcFDhTsge2oOe01+Zv8mwgTCa7qGdGQ85uVyhFme
CZbHLd6O689hbQEV6/OHmaDx7ONfGSfn8IeylcC32kyQqZZ2zvHYHKY0zS7o
O8UEGlqS+aIwh6+tOw5zXyTXL70u3KUxh6tDZfaaWzHBja8jpR4qc1iMMCsb
a88EO0scmQLyc/h528fzY85MYHHqvmq52BwmOVz3EPFkAkkGuQQT3jl8nFY4
8YYfE3w1U/7vF9McTk4eaUoOZYLwFY7kAOo5THMs5tfsezKf/mVJiY1ZbDNu
yiObygTq21oW1QuzuP4Jp86tPCbQbG+evEGep29JSPBKHRP8ulMUWlY+i2cv
GpUQO5ggn0UUOX+axfqr9OMPhpjA8Xi+plrULD6g6Kf0b5kJ+ouGW+bukfet
5YSJ1j8maLpMbTJ0ZRY32e31erKXGWi+SQmPnZzFAUme3yi5mSHg6c91We5Z
bKBix8IuygykiL3fFilm8f6ac8aS8szA1xky3TEzg59Pig+d0maGkjjNIub8
GfxIpGU6zI4ZWikHClLRDNbIK5ROuc8M0yfr6VqEZvBf7TjHksfMoPj3/AeJ
PTP4wdV7v74HM0Nil9dEAJ7Gt+O5diRKmWEinyHhKnEayylRaqvXMMOjEV9P
P4ZpPI8Xnp1qY4Z/ezbtd2ansO1oBe3dCWZgs5pmGYqewlYC1uwlB1hAPueB
Rf4GCZ+NyZU7dZkF7uSke0a9m8RMctF3rlizwLfugCQq+0ncVvY8784dFtgp
CHNY1JjEBkOX1MKesQD3kOQrg6EJrMOzo/s9gwXq3DJlozgmsMo7g8t3tlig
WvhUcvzDMcwZNukX+p4VrrPvGNeKDmIu2cLnf5NZwQA9LJwpG8A8VS89r+Sw
AqgZ+6ydH8ACP6UfSFazQolBZu3Cs34sfvquVdksGQ8RdxYmezFx7/ahSSIb
IPZ/Nx6mdWGV6DaC3hE2KAMir7huFz6kHC+XeYINsixdPvB878QaVroirqZk
+2ycxjZzJ9b+4kd/0JMNGj+Xe4BXOz7jzEFSbmIDS08WB92ZJmx0cHYkoosN
os+pDahJN+FzH0oGtobZwLQr0c3ZsRFfbDf/VrdMtqeeejmzXo+vyCWWmrGz
g5fv46U+vlrsQFIM9rZih7a9GktV9hg7euwJnLFjh9lwB81soQp8m6Xr5en7
7MBgzzFhMvgF3wOXRxwv2eHipwWClGkpdo/5YpuewQ5/3/wefPayEPtc0D/a
uc4O34uTJq5eTsM8BW08lHs4wPKQgUKDcArOYr3wh3CQAxgfbhoq/U7CvZ0W
OcGCHMD3/Kbh8+J4LHbWWeSsHgf8Evk9tBUSjD/nbOx4neMAu92YjpVPAfg0
k+dQjjkHtIf2iPlef47vf/MLY3LigABWqbzLz+1w1X9xNO2RHLBQcV3yiskz
dDFTbHI3kQM29LU5nA380DxdOlbM4gCXjZlLRw+8QcwtBW5vqjggUCw0eOlv
GEqS1TDGLRwQ3dWeHxkYgdQCMGG5lwO4po8cjaeJQlYGTfOGCxyQGP7R82Jm
LFpNO1P/ZI0DhnOXji84xiMf2p7ErF0O4L/aelHaJQFlNYyaM7Bxgq8ZKePh
1USkI2WtflSAE0r9Hv94rJuEen3m2W9LcYIBm7eqJddHtH1ira1VixOqcphT
kqOSUVDyw4ztE5wQdlY2e69eChKjofCVP8sJtBJyHkqzKeiz9YsbVy5zgg+n
5z0pj1R0uvaA9itrTjie+2xjgSINjYkF8Zff4YSV1qdOHu5p6P5z9n+L7pzQ
fDhQrZ+UhmhIUb18zzmBcPRc2l7ddBSlK5R/+jUnXNEZ49kblo4UEj++efSO
E2bgzNhgXzqqopR1/PSBExavXNd7zZCBLl7L0Rv+xAnbbtzvxdQy0NxXVXG6
YjLfTlHRjxcy0CPhsj1aXzmBqcmYm+tGBmJ6CiMOzZzwonKn+KVNBkoaqy2N
7uGEISkVpc3LGUgNTkU0j3IC7j6Q4XUsA7XEtd/fnOMEHV+sJyqUgax2jY1k
Vznh0nSb4M+ldLRqMSR3eYcTXlZtaa7lpCOfCivagP1coLNg8F7bJh3xCExP
lbJwAenR6KEphnSU9dihap6PC8LbB3/8TE9DOt9/xvJIcgHi53/nopGGerVc
PAwI5PihzX++5anIPmbz0kNNLgimmWnUVElF25teKunHuYD67E5SYmwKCrpM
wzx4hgssroVz9m4lI7GygB+0ZmS7Zlb4nGEy+szD3KR+gwtyei94roV9RKcf
hifb3eYCbpldNpZvSei+eoJlozcXnPxV3zQhmIgM4hlWTwVywRtmu9dJJz4g
kX2PfNvecsFyyVOi2fUE1N59MbcrlQtO/cj3396ORamaNccv5nFBwsrgca2t
GOT5gTDYX8YFbo2GT8VmopDCXTqqkTYuMJ+V0P76LBxR97lHWPVzwYdmpcYx
1TA0fGRGdnKcCwhH9Do9e4JRwMGqC7OrXOAvltyMvvih2WTX5F883BCTrv+G
a8gKYfopjQdi3ED1YY/r6B49HO587tsfeW6YGs6OHbO6hY/ryP/dAm5IjN/V
27F7hj98n9DfZ8sNCdMxKve9w7E5m+EP3nxuEH755rmvTRomepQ9jf1C9j/x
NOOVXgY+MCHFIVzHDfbrdeFvlTJxSTYVkhjghp95mYHUfjmY41RJkNIuNwBP
vRplQAFufyqmcvwUD6QkL1yw3PmCjy3/e3h7kgc6Y6YWArzrsbtemMzXRR6g
Nptyo2BtwFkJ8oOs6zwQv7XvdkBiA+a6YKVesp8XvklWshfXNOLFz7V/qBR4
YUCmxVyCpgWHegc5R7rxwt8/o1KFR9pxw5C02OJTXqA7IC/z51k73lKp7joa
wAt5GpzGc43t2GZmTZn0nhfU8wpj6i90YI3Tl1cUqnkh2t98q826E0+wS9yu
oeeD4RMBOoS73ZjzDubn5OSDoHN0okNZ3fh0g0mrnRAfrGXPnv6+2I2LHgbI
MRL54Mn3XKcemx7sP/pz3tSED5i6RD9SnevFWM0/6tNVPojvED064t+LV4NF
DXbt+eA9P9PmTFUvtjh2MS3pMR8cvkNH/0CpDyunldkuf+CDicfv0Q+KfmxL
acyp84kPtug4r3xW7scxl5fqwgr5IKVtXizwej+mYRCW0Gjgg7yfCVc1q/rx
4L2XpOc/yHh95pjm/QHM2CIY1rfOB99qx5jbYgbwMfESXRkKfiA8Gjl1onYA
Z/UtfPjGwg/3qbw9elkG8VOts1d51Pjhu/isBXX8INaziP11WIcfBtiFjlNV
D2IGr4Vnxqf5YVUjlu0NaRDHVL9IDrLih3JNg+UjokP4+lTn4Sx7fhDrV1q/
BENYZp9QY7Mz2S52b+TH5SH82aB0gcaPH1J3L5k8ej2EPR33PRYL5Yeied8M
x49D+MTrCww67/nBybj6ekPpEKbPSYizTOEH8c2dhIC2IdzdsaT0OJcfwo9c
S8gbG8LRvzWrosr4IeeUT7H6yhC+xu53/nMtP7i8xhf4KYax9OFeUs83fti4
ZLzXjH4Y/zQRdfk9wA9535odF7mGcfHDu/uYSfxgysVv1CEyjJ/ElL9TWOKH
yfT1AGrZYXy84oDM6b/8cHviN/dLwjCmG7tUZkcpAH8KexmNDg3jrj0fT/vQ
CcB8VEWclfowjhL99T2JQwC0Xl/hKtQYxlbH0Z0qIQG4gmSnDMhY0jaQYkxG
AFzNwl8Lqg3jJd+B4G0VAeBeIpYqqQzjgnQJUV4kAO5zizKPFIaxR8v9AjV9
AZDNkf66KzGMdZYqj188LwDelZsPS/iHMS0TQ9/9KwIQbHfcOYVlGLcTLt8M
thUAi9ej0/XUwzjifOpGlpMAfLxfLsP9ZwhbPFjzb/EQgNG3DEWR00NYPEKH
b/6FAKi/sODX6x4i39ebzH1BAiBQm8cqWjmE8weHj4pHCcByZrK9dPoQfrgl
3a6TJAA8hi9YzEKGyN/7rletsgSgRf8qT4HbEN4PNb8efxaA4SKZnENXhvDb
ZxbsJS0CsOXG0J8nNITNP2Yk9/YKwHT83qsZu4NYpP7v4dUxAYixK7duGh7E
OQdCzRTXBOD+sQoJj+BB7Co3tnB6VwBMv6h10dkN4qOG8o/taQUhqW9mqObo
IG4Jro/7yC8I9rdVNNJIAzg0n41QLSkIqdoKD3sLBrBZz9WqMYIgFGuxLMg+
G8CzXFsk3hOC8C9LKfAczwCmileSCbktCHNFt3ozyPfV9PVxWbYbOZ8AZ+uh
1T4cNNl0utVbEHQXjrr+zu/DApLWd/ZHCEIIT/nv/Qp9WCMrsuAJFgTqOq/4
YbpefKyvbXupQRA+hdQeNK/twYYUe09adgpC2l3/pkuPevD1c7cH0JQgdKsu
ULdOdeMTHsKeXtRCkFhJyv+Z3IXvCq4nassKwcXLchqupHa8lh/UsKEoBIzW
L4J+vmjHD/Vkf+SqCEGV2h41Vol2/MLJ6pDIUSH4vF2uWVvThqOqmxoozwrB
ewk3dZGIZlxjG/ej2kUI4H7PIcP6Gqy/pc7yyEMImLtH6ekmq3FbUPchFS8h
SKJ+tz9uqwoPlNB6JfkJgUT75rqd9Fe8dNCZ5UWMENTF3/fT7SnFXDl6h09U
CUHD8Khexdlk7Ph3xauBXhhWRiPdkHkR0nCy4ZhmEYZOt9Ekh8LPaP/8YAYV
lzAwKsR43mEqQx+HqnuPigjD0c60OM9mjEYq3soVHhKGsAW+GOG0GnTmhXp/
gqUwPP40Skup24aUWZ4qeuQKwyeJymnu1H5EEbBW865IGHLeLxpfPTKA2qjs
zYrKhOFruc057s4B5LB27sVKrTCoH+hMKt0YREn9YkO2g8IQGm4ME/AdccQ1
vLxAJQKF4cwPfnaNIRLnEb57+0XASU3x2hGucZQXlJv7hl4Eto7qKO01H0dn
vKOGmzhFwOTyvpyf4+PI19pRWVtOBKK2EstHpyfQhizTiLyxCECEjS1NJwmt
v+chfwiIgFvVNRf1g1NolVFcTN1SBDiTyk4V6U6hpd/q9sfsRIBiMOL107wp
NFF2fd3ssQgcet+RwuAzjUblb0daeYvAzptLvah0Gg3HuWnZ+IhAzar8raTF
adT77JW3U7AI5I7sfbhtOIOaThUz+H4UgUcXPx5Ko51F9eVfc1+li0DqzvfH
iodmUY1iy4XQbBFIDtjO77k6iypYx6NiS0Qgq8CW371oFuUNHZAsbBWBCxbf
WMcvzKHs/9ibSjtFgKRgmyr7cA59woK3KvtEwHPzMulF7BxKTlTJbx4XgUjt
n4rXSHMoysECTayJAPezXtWAG/Mo4vvNiZl/IlD1zbFW1HsehZ25/+LHrggc
SNoniWPn0Wuib/NfWlHIfcq6b6N7HgV8DLm9wyAK+vEZ22FL88iX8z3zXjZR
sJgsL1LYt4C8N3MvMQqIAsvSNtUl1QXkeevLPzZRURjlfuwzabCAHo3WveeR
EoUiTvVPdpYLyP1sBwjJi4Kcf/Sb2XsLyKV6aFJcWRRO2GlbWL5YQPdVp1/K
HhaFkch9F1rDF9DdlJ/SBC1ReP6K4wshZQE5BFDf1TpB5qduZz5Us4BubjOy
6pwSBYrYTlfBzgVkc4en6KSRKFS+Gmu+NLKAro+Lmf5nLArBYV9/PptbQFbn
FbfOmYmCILfw68TfC+hKrXqciaUo1ErKXS7aWkBmh4/pWNwg+2u/FfiydxFd
SjOcum4nCk6KEVkFBxfRBV5TX7vbonBjYP1nHPMiOvvquuyd+6LgIbx36DHH
IjLcvdXm7CYKJVWRToY8i+iUk5vTw8ei0ELka2TmX0R6k95sXt6i8P6VK3WD
wCI6bvyq+IWPKNC78Jk5CS4infoIs4BAUSAxbNEykDFS/7AdFCwKenPetrHk
eK2MT/Hh4WT+OyHdIryLaEgoI+54tCiYaQ9RjXMuoofhabGrcaIwLpXwq4h1
EXHRpb5PTBIFNZ6nbB8ZFlHx0+SYc2mi4BaTM5uxfxFd/JMUvSdLFPbWrG80
71lEq46JUTl5osC4mThC/W8BhU4kRFoWk+ct6admtrKAlE3i3zF8EQVqhaWC
xpkF1NEaG1FeKQrnenzojL+T56X7Ppy8WVBFfYtqu2MBMZZEv+VtEoV79gft
qmoXUJZCVFhTmyhkOvFyJX9eQP8lvQt17xIF56zQ9dT0BbTIHREi1S8KN6Oj
15qjF5A0dVjQy3FRqFOPPOvisYAaHoa8UZ0WBZx8rmHXjjzvn0GvSfOiYOO2
NzTz0gJKGnoVqLMqCpqD4u0PlRaQ7tnAgJW/5P3pe5ofw7uAJur8/eO3ReH6
i4CWGeoFJJTn47tDIwbtd9rXd/rmEZZ86ZN5UAyCGWdbW/E8snj//KU5kxhk
LB6xaU6eR9G+T5+XcovBKxG9fpN784jD0sPLRU4M2CRqZ2d351Bht7unOEEM
9hj+SDEdn0MXDNyedKuKgXSLmRRN1RwKUX3wSBmJwd4PHcncT+cQPd0dt6Wz
YkDdB5qW67Nob8m1uzauYtD9pfGaJJ5BiQpX77A/EoOCabou9HYG6SRZ3q7x
EgMp892/BfYzyPONuaOIvxicYxOqq2CdQf+sL94ciRGDNiqj1FCLabTCYmB1
sUoMJmM3su8PkFC/o0i7fb0Y8N7QOCLzgYQq6/4hzxYxeO3E1WhkT0JBDzME
U3vFYOPlyPzm30mkNEE3ujEvBglt48cVmCbR7dxvV96zioNAyKVXh6XH0fwZ
48ukG+KgfVeueRUGUWeafPNfO3EIMr0y8u3LACqlotGkvyMOv7hcTz9RG0B+
xUU8h9zFwWv2dqOzYj+SEuQa9HklDiMjtO1JfL3IdmnQRLZIHPgqGXbm/nUg
UqDVxXv7JKA6OzL1x99qdHteTkSJTgK4fc47x7FWoz8nN378YJKA3EKmkx8V
q9ABqpAXdjwSsJ51ZrXfoRIpuVcXWMlLgDrr2Vq+xRL02FqC9cx5CYjKSmHm
dCC/36t/jdCZSIDEDane8KPJKEgIpzeZS0DSa4eqX9yJ5H26pHPCRgLuOSvt
+9ARiZrO+jkdcZcAoVeGNo1WVxDH0cVvsnESYDI/uvbm6kccH/05ei6RzPdB
kO4VilQsvfHcNiVVAublwzb03qZjrQL+XZE8cv6Lnq8YE7LxdZkzCjy1EhD+
wexjTWwBXvTh/dfXKAGPTKlzNGoLscvUTO3bNgmgVaS0NZ8uwv7xXleY+yXA
jN/c2ZWrBOdw5AXuX5AAj89nwpc1yrGG8xOTumUJCFI8r5CkWoGrOwzEnq9K
AN+9zawiGYx7AyfLdrcl4JWjw/v5p5V4i5J9YZ1JEvw896S/VavCL63GiwrY
JeGa3njtbmwVZqzI9L7HIwnTduUmjymrsYj7CZ4lUUlgtX4TnVpZjfWXXfWn
DklCeF7R76fctZiPIPByv5YkuPP+yy67XYuX7tVUyWpLwur550v3K2tx2DqT
1r1TkvCngP61mWkdtlErdntrJAkaY7fGX8bXYfWHVwo/G0uCwvOpaHlSHR7Z
TlPYtZQEJx/L3VmrepyDjBxErCXBgyMubTuyHj97up5y3F4SGBQulwd+q8cX
q2NIN+9IQnLs29HwPQ1YilpXONBZEibjl9b5lBrwvxNzV7LdJaHnkb+s0OUG
3Or7JqrziSSUl/yaTvBuwPFNqn1rzyRBqP9XV2JyA75HN8zK7ScJr97dHZGs
b8DHDL2NtF5LAnsnIiqRGjBnkNQry1BJeDm0gvB2A57vaGv0ficJiv7xeX2s
jfgL6wOa5PeSoNVc4P5IohG/NubVbfwgCbyDqdU5qo34asRXz8UUSbjAXbfj
qt2IVQZsvzBmSkJS8Eh/j34jpuFl2FDOk4TXfJSozbAR95sXqF4slgRVULxi
bdSIM2LN7rl/kQThyt33cWT7kzGK7JivkrAyb5T+lBxvJJKygOvI9dJmbjKR
84vc+E9qslkSzlxg2jEi11/7+PsGTYckyF7RaNYj82uYiUyQ7pUEt/o3t7fJ
/KOkYeT0kCRkPvWtct5pwI4O0zx3xyQh8oP794KpBowyAy+FTknCvmAh5prG
BsyyrBxWNE/mLywzn5regElKA+0Dy+R5ZBUq2vs24KJ7nvTbq5Lw7lD3BMP1
BuxXIG4g9E8SKl9SHY3VaMAKaveqbfZKgc/t+7+ixuoxxUMuCn9aKRBI+zHI
mV2Pu8oqtDIZpEDlSL1v7MN67IYOFv3mkoL86Lbs+f31+NTT3F8cAlJwM2TN
8WtzHRaovqSoISoF2g2yLjUBdbj6RFKql7wUdDPKH3KmqsPhvgZTicpSoG4S
0EEsq8U3m34K1x+Wgp6HlV7H79ZiBsMj0fQ6UrDo6LPPp7MGmxj3voq6KAVZ
yZrpSW7VWCbiUVP5ZSlYa6d1Z+erxtv9IvvGraSAzbNnU668Cn8wv+Ml6SAF
qrnW1Y//fsWL1/ffL/CUgryo6e2lC5V4KfZYOX4uBV81Xvyo6cB4ecBrX7Mf
2X7GXml4rQL/OrMRPR4qBRRGj402lcvxH835GoZUKXCS6oxNeVaCKdlaOOza
paCk7QFNX1gu5q55U8ovLA2sukQ7jUw9zLPbvFdaQhoKvOKZ/NpuIT6N/WdU
ZKVBSCnyYesDLySQ4zVpoCoNtp9OfeiDYCQW40Tnpi8NfbV8PxNSEpCS83mL
TidpsPR/NveoJhcpZ79J/e4iDXuL3ibpjeQh4nzzr1kPaWCX6hj5up6PDlkd
89l9IQ39m+p6p0WLkOZp1Rw58hIFc8rO5tmWohNinJQ+VdJwj1ft8pjOVzR3
7WSqZr007BzdiHYp+ooCE1wNfzZLQ5zX6p5yqSrUJdAfZdojDYwkyvtKtNXI
ijuSKDcrDReKb/0K/lyDqEwaB8YWpeFfsdOYr1AtSg7f8Hy7Ig1MYSFBIy9r
0SKrWcvOP2ko/qyLPA3rkDsDr3UHvQy43TDO8m+oR3z/nTr4kkUGJP30vzuI
NKDKAI9cDU4ZqPcYCLB62IBoaIe3E4VkQKZhp89KrBGlnaRLMhGXAc0c4l8z
l0Z0+qWWAb2MDGjFnI09XteIQqjeh7sQZeDnUlV3k2UTUtVp1ZJVk4Es4f3j
F9KaUL/X9sSolgwM9XE7Zv1sQoI7VxT1T8gAQ/CKZY5bM/r0V6CB11QGvsZc
H+G+1YLOHD5zu/2KDNxaH+LVT2pBvx54sr24Rq7HnyVIN9CC1H+PWi05kPk/
dj6prNmKhglM+xLvysDCBUdF35utyOsuZF56IAPF6K3NpdBWVPcjfqPyiQxM
/nVb0htvRXZyHXEPnsnAjFzsIcu9bYjOYc8JGV8ZEK7yKe8Va0PZaYTFkUAZ
oCncGU/TaUPnZq+GhAaTMQezbNeVNrQmEaKmFy4Dp83s9P5zaUPvrKtGtqLI
/ZkmsrAGtiGtpF/Pc+Nk4OFGbIBgXBsanRCRtUmSgVPu7SO3stuQt/D5Dp40
GSDceH1140sbkrB65votUwbm+K6Elte3ocbYfP7neTKgu0dNoOhbG3L8Plmt
ViwD6aL9vSPdbYiRj83+R5kMJIX8/ULsa0N5ZseYPlTKQKfcu82c3jZkHOlc
dLFWBiq21ebOdbWhv31J5gebZOAHP/9+jtY2FM3RQ1nZRp4n+1OaP9Vt6Kgx
dZpzlwwElHRV/CpuQxOhqmek+2VA0G/hME1aG3rRab32fVgG2h6qf1SIaENS
zOHRIeMyoHZsw8bOuw21nKnTPjlN1pfR8kCBfRu683p9ZnNeBr4kVunTGbUh
llaJ1znLMtD+q57urnIb2llW+ti0KgNU0l6vthja0DyL5hfSBjnevfnSwdlW
1Kt6vGtnRwZaD5U+iCpvRVUmZ+a59spC2e1ipdQ3rSjLw3QPkVYW/t3IZSZa
tKKo2Otc/zHIAlvtkXF16VZ0n+R64imXLDRU3cgsLmhBVvu8r0Tzy8KPbPeH
8g9a0GmZQOdCEVmIYII+PuUWJHY3/sOcnCy0GEYk3ExoRkyh6SVUyrLwac5u
rPZ8M9oqLGjnPywLsrfcz8ZSNqPuzYads9qyEHnqi0KtcROqFOhidzwhCwl2
brc4/jWiT9rf5V6ekoUg55vPZqMa0QufFbNSY1lQPsgcxdnZgA6x8hSL2MvC
y1vjUvMc9UjkkFib1h1ZiL/6iMMvrg4xmCpMXXSWBTPnnzyVYnVoOlaHNeCJ
LFCPbhTTiNeiCBmHO79DZGEqoJDBZbsKPf/vwUv6d7JQUlNWe96hCt296/le
8r0s1Jn5PP7Z8xXpFYU2X04h5zc3W3qSUIn+an+RrCmThdVFt3J98S/IzJR+
LIwkCwYfWuc26nLQiUecf7LmZMHyq8VbI+8spBwnzNC4JAusSs6vQhwy0IEp
Va3tv7Kw82e3zoL/Iyq7a/HOml4OXKUMzEl7gxCfb7bRoUNy8NiDnUp4fxJO
z8qs3tCQg/FsrmcP7qdgtZ6MQ+VIDmbO0NBwT6fjCyKpfMf05SDZwcXc+GcO
DvwSP3vWXA6ckndLD7F+xps/g71uecuB0VBDT/L9ajxo6pyT1CYH2pdl3b/5
deCbXvdEb3bJganLJCmJthOvJ98Nl+2XAwVbC6p0v07Msur4KG9cDm7rs5ZK
+3dhg9fWepWrcnDSkJRjENiDS6oujg3xyMPnAFfNG28G8DtZdSZWW3mY/x3N
HZ87ho1PtQZVOMjDy3bC24M/xjCLw1Vm+7vywOO5clFGahwHpPuxfHWXB5Zo
8/oH78fxE+lBtjuB8rCiHdW88mwC35D04G7OlYfd/64eWz9CwsInGaNciuTB
tDu+We0+CY/YJPKIlMlD54h0DUUqCV9KbuZ1r5GHcfZONQ6mKWwgzicg2ScP
tBpZlXSDU5ggWi7ybEsezghVKM2dm8FLOmcTFfYoAH6RQXPKcwanX5sSHaRW
AN7frjO0GTNY7AO9OIFRAfaE2ia/pZjFXMIWkqPCCpC7SjGanDiLe+BXir+E
AuiqGcbkNc3iEKuXUodkFSCKYXiZdmUWH4zPkn6logBqbQtHQzXn8I7Arqzm
SQVYZdnMHaifw2VHQz9Nn1IA1VfveA7OzWE3C0n5ECMF4PuW3+pGO49X3p9R
mDNVgNaaMn5KvXmcVT6ZFWahAOcPzl7isZnH9t9dFeG6Arw21+a8+Wwek/ji
lSIcyfH3F5rfl83jBC2VXB0nBbhM4ZTp3TuPLcwbCEsPyP7rnxfDf87jvuif
ysc9FSChuLzlpMgCbuLRVv0drAB0fJFGHz0WcLtAtsTeCAVIEt9nGRi8gHtF
+LnYYxRA9sXtIKfkBTwus/HvULICKJ5Xr1dqXcDTCraLJzMUYKJgUHL/6AJe
VO75bpKjAKX/+K/1Ly/gvxq5lQ9LFaAnu+mrBcMi3jkqmBeAFUCjd+gLC98i
3qv7KjGmRgE42KmOlEkt4gMnN8MyGxWAAi+ev6SyiBlP2b2saFOAK76LItNH
FzHbmT7Xb11kfrZ0QzZ6i5jn/HG7sX4F8L3HU95vtIiFLuWbrXxXANHiQm5N
k0UscVn4NOWkAggxmZ19ZbGI5SzfHGGdVYCrv+27264vYuXr2wpiPxSAS+OI
6K7tIlazdRBS/aUAK+OCbfwOi/iIwwDziT8K8L7u+gOZW4tY585JqktbCqBy
/lqj2O1FrHe/cNV2jyIwyD7zpyNjQ1fRaTcaRchsBL9xx0V8wSO4z+8geWTc
csmJ9ovYzHO3IYpJEbwoljvOketZPbtVmsGuCC2k/+iXry1iG5+hjC88inBO
XMrO7coidgjQf98qqAh6/q40yxcX8d03xa9HxBThaIYhx/kzi9glVNxrWVoR
Uk/1DiSdWMSPIkKdKBQVoT1T/wNJaxF7R++5zqyiCOnDK+0syovYN+7OBRF1
RXixKNinKLGIXyd+P048qgj/ESUOaXEv4rCUU4eP6SqCn5uRp9rBRRyZUSJl
rKcINfxD58W3FnBstiSPzX+KMIDmblAtLuCk/LcHXc8pwnCH+/2uwQWcU+a0
9M5cEfaXCQ2fLlzARXh0NO2qIvxoZdz3N34Bf6n+r6PURhF0vrN3vAtYwPXN
0gXDd8n9qPx9g68s4JGhcXehF4pgqimiXr1G3u/RMw4Ef0XA13nuaA3M4/nJ
cnOdN4pgUh5zu5C872sLkehGpCKoKzLsfno8j+m2zlKnZirCZyzBPL42h1ko
Ktc/5ynCryKPnpcdc5hrr8JsY7EiTLjL6Wt8msOidAeaF74qwj3+BO1Oizms
wVcVpNirCDRn1IL3lMziCVGxkblBsr4Duz3aQbPYT/albNKoIrw24eetsJnF
/RoGdVxzitAV9/TpPeZZ7Graublni9zPSHoflcUMNjvlRJxnUgIB52/12T1T
WOGMiNlJViV4KtLGmp0whSnPd3klsSvBl9Orv+lvTeE0M9U2Cx4lMFcR8Fzd
M4X/2m3c7BJVgmJun7ZPYiTye+Rp7JdDSiC7PsQnYjSB7QOVa7nVlWCntvr8
JdYJfDRocsFFUwlEDwn6cPaO46mI4+oEUALxwZzwY2bjWCWFtvujvhLcPCd8
NenKGO6sDaZ9Y64Ej01Ja7rJw5iB6oPzVW8lMFHS2GAV6MY0G/j8ynMyf08f
0Zc+XXhn6bvyUx8leJZd+bvjZydeHuReiQ9Ugth/FLGc1R24PS/41li4Etxu
35l63taGQ649tbHMUILqzc1zr+xrMUeVlcmVbiXo20v1YIgqCjN8fnL4R68S
NLfe22bRD8Y0WTEcjweUoI1kSrA+/BT/iezvjhlRAqWSQ648Mk9Rv5PR2eFZ
JfA0KSwTE/6IooTB4PK2EpSWhRnaRpeiEE4L6YVdJeBlyhLM8/mC/Okf7feg
JIBvTB379u0K5LFRXBe1jwCrx0K+83B+ReYdirqDzASwPIz8LhfVIIGnglqm
EgSok7a2LHZoRln394t8lyKA6AQ7iBJa0FGblX1XZQkAV19x+P5uQVdOVXfd
VCKAD8/uV747bSiG3dbBTYMAewN4L52Jb0dy+43ObmkR4PPWdP6T9XZU9k/t
sBcigPQI2y36Ux1ocPQAle8xAsgwv3+gtdyBuNOzoiIMyXy9vVLeiHah1JgI
L96zBIib7Ji3dexCam+8bOLOE+BmU4GbX34XMnE+p5xiQoCDmoVv47S60ayN
JpfsZTIf7tLdN0+6kaup2E7WFQIEXjOx/1rRjcKPrjcWXSP7vy1HY+o9SIIw
mq1hTYCqjQHnJuceVCTa8LbClgC69jfQcmYP6tkfdbXOkQCE8/UPJnl6EVvX
kY0eFwJ8e/GVaDrai5JqJUZN3QlQo/OW7t/BPkT8zFj73YMApo+qzrcd6kPn
3o8HTXkRwEiU/TujTx+aeNPkYveMALw3/aoffepD97zzzX+8IIAr17IVX3sf
CrZ9IbXmT+5vT53JKnM/EjK7zeD+igAnze+fklfqRzmnL61uvSFAWaezeNTp
fgQIBr1CCBD9u/uJpm0/aidIV+59S4CisAl6Fq9+ZCXGkuwbQYBuMcEUgYh+
tMyxGUAXRYCo/bJHrn3qR09oSU5BMQSwocoZ+477EcNWyyW2OLI9U78ypKMf
xS4VHnmXQACzDQcp7/F+pDAeK8qXRICUhpPPMpf7UUWXD218MgHS3maacGz1
o//q7i6LphHAQ3HpvwqaATT82bQnJYOs56sS8RTGAeSYoVMmm0WAmNJN3Mkx
gLbeyyZk5xBAY6SYW5dvAAUGsfkQ8wnwx2L89D/BAcT3bNuxuJAAalLEoH/C
AyjjwfQ5zc/k/MzUh0+IDCCNm9/UcCm5fwfB3FGhAdRk9llAt5wANEWB/o38
A8jsv4S99ZgAvzztHGi4B9A88p83qCLAJ7c8zkiWAfRQ+X57Ww0BcA7TnecH
BhCtuHnRuXoC/GVOcmymGED23Mggo5F8D9ruhdrr/aiJXmSEqoUAb+WXQ87M
9yNZSup75m0EmFUczP4z3I8C12eoC9sJ4FSn0KzV1o8W55si6bvI9/Ktp1i4
gqzPaKa8TQ9Z7xRP8zSy/gwN9405BwnQnHCr6dOLfnT7y8W5O8MEyH52oUrh
bj/6lqP+uGGEADxHRb5ZmvajoMjdJPdJAtzy+894WLIf/Xw1odY5RQB6w61Q
Bfp+dNa7tkVmlgD+15ucjqz0IRaHgNWhRbIelbvmcYXkfbO87auyTL5PtQa8
8bYPdZ0/y/dqhQDfL1M4Cj7oQ2FanMeOrhPggbs97bBiH+JkSAyN3yWA1331
Ab+IXuRG+VJyY48yJF5YfZ15uxf1r98sO7tXGWylWGnLj/WiqFGFSUpaZSi8
ZpaX86MH8eWWKluzKIMdDZ60JfagRx/f15WzKUNbu/JlG8oe9D3Sy4yDUxlU
B9WHnNu7Uaz3Ce96XmVw/3eKu8euGwld6OyQFleGgsYZHdmQLiT+Z+7u0mFl
qItWjI0s70AKR7izXa8og2dPuEycfjPKF7XbpLRShhiVJ2X7C5qQ2oGSk6+v
KYOzX8XpTv4mpNNnMpZkqwy+juvalcsN6KLTO+ZOJ3L95fj7Sa/rkOdHTme5
l8oQ3Fo38bj2K9obaFtZ7Euub2lQ0Sn3FfnfK6bTDVCGTzzFeffDKlEYuvTR
NEgZ7pps9Kc2VqDUgfDel1HKECd89Z8RZylqp+dQH89SBm8mKf6zWznIeNX6
hWOuMuznQB071dlocLCw40++Mlhpv6XjCctEpBRje4YSZbChv4isddPI76+3
0ZrVyhCo9uuMOCkePZaamqmrVQYiE3N6fNF7RMmoqnKuQRkeumYxf82NRHTD
3S03W5WhJKdidO1bMBJ2Ydt526cM7+ZdXmt8tkbJ5jcMhAeV4diTnFVRhf+w
nG5B+KdhZSgt2jI7PuuEDzFdUKweV4aAQ3ld2d0vsUF6qNXPBWX4q+j6RPbx
O/wtaPKTx5Iy8BJ6Pu97G40vuBI3aFaUgSI2KsEgKhZbHOsK5l9XhhaTzdIR
1Q/43ghLtQEFEZq1Tx8aCkrBDXXm5emURFD8ebxeryQVC2QnFx+gJoKoR5dH
cH8abvLU+NRESwTpwC8PdDYzsNDN58kydER4Q2ty5v7OJ+xi1Bbvz0CEIeFb
bkx/M7GI8LW3BqxEOOtQmSTZlo3daD+9SWcngsdEfcRh4xzctrLmd4CLCFb/
HWSwrMjBD6v8njTxEUFHg4bb/2kubk/vcpMRJML7KNq9rkO5WCKU/76/MBHK
M2b+01DKwx3Xc20NJIjAfPmpIU9THpY4vXk1XYoIbycf7xVlzMePVI6bH5Al
Qt9JDu5Bw3zcyffmor08EVTrm6wP+eVjKeoBoyZFIow8PcOnWJGPn/wQOSWj
TOZ3mKe+7Ec+7u5xPO6vQoTw7nn9bs4CLFNRhOYPEYGpxnDirlYB9kqm0DBQ
J4I6haCU/+UC3PvaQCVdkwhl/X/puR8UYDnXMIUDR4lQYpc7zuFXgL0tR6Ts
gQhzpdWnH0cU4P6TUqJNOkQQeFpy4UR8AVZQuscvc5wIhY9eX3ZMLMDPub5w
+p8kwhdHBqF5sn2QgoZlXp8IGm/lK0rfFWCluTN0BqeJ4PbtcvaAfwF+2RFJ
k25IhGLhziYd1wI8XDJJceAsEZ4PDB7/daUAK3+Q37Q7TwQqUbYC0tEC7Ovv
utZoTAQ93sx9nDwFeOTe12VpEyLkmbwPfrmcj1UuH5z3MyOCy3TvHgLOx/66
xqQ5cyIM5tyzZSPrNyYbN6JvSe73Sp+S4n/5+BDbXH/aVSI0BA/Keh3Mx4Fb
yl20N4iw8H74BU1NHp4gPWq1syEC59uR5q8ueVitta6+8SYR+OpD5nNF8/Dr
QqYqaQcifEiwVehrysWk92Zf/G6R92EtUFfZMRcH3V7K0b9HBIbQk06v3+fg
6YtqGWnOZP3OkypD5HOwFvL+SOtKhPQnPnHJd7LxLCNHVKMHEZoSXO0kXTLx
0b+WYdJPyPvwYMmDePMTDhtLe+3nRYTDxRP97YYZGHKPPNN/QdajRcZ+bCMV
h0f6PE7zIULE2+bfNypS8OLTDldaf/I95EY4xbkm43fnrB0bXxMhYD2c7npD
Il7+HWis/44IsVY9c/SN0Xi4P+Hi+ygi3P98VPJCzjvcVF50aSWGCLVxch7F
3m9xks+YaWQCETJnphXTO19hM14Vi7l0Ipif9oi8ckgP61HoWx7JJALlv4Mr
e7tskerUFavgbCLEOwzK9Ut5IKZsn2vqBeT5tMt92tR7hWp1hmz8yolgt608
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
HiWO
          "]]}, Annotation[#, "Charting`Private`Tag$46225#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$46225#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t(s)\"", TraditionalForm], 
       FormBox["\"x[t] (1/A)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     AxesStyle -> {{Medium, 
        GrayLevel[0]}, {Medium, 
        GrayLevel[0]}}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> GrayLevel[0], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Evolu\[CCedilla]\[ATilde]o do sistema no caso \[Omega]1 = \
\[Omega]2\"", TraditionalForm], 
     PlotRange -> {{0, 30}, {-0.9969317903106912, 0.9999999999998126}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"x1[t]\"", "\"x2[t]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                 PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8742641750726776`*^9, 3.8742641888092923`*^9}, 
   3.8742642224289155`*^9, 3.874264263649736*^9, 3.8742644198395157`*^9, 
   3.8742644610337386`*^9, {3.8742645316972094`*^9, 3.8742645670392885`*^9}, {
   3.8742646152806215`*^9, 3.874264672783142*^9}, 3.874264765352219*^9, 
   3.8742648019554253`*^9, {3.874264875323552*^9, 3.8742648954213066`*^9}, 
   3.874265298704549*^9, {3.8742655024139957`*^9, 3.8742655282500553`*^9}, 
   3.874265868360535*^9, 3.874266393967046*^9, 3.8742698409153166`*^9, 
   3.874274351910964*^9, 3.874277404553811*^9, 3.874277684066568*^9, 
   3.8742778457781773`*^9, 3.874278790143978*^9, 3.8742790275743914`*^9, 
   3.8745984317880325`*^9, 3.874599026724707*^9, 3.874599997302528*^9, 
   3.8746005306046495`*^9, 3.874600607374631*^9, 3.874600754910367*^9},
 CellLabel->
  "Out[497]=",ExpressionUUID->"72f144cd-f75c-4819-9c9e-b19adffc23f2"]
}, Open  ]],

Cell["\<\
Temos aqui o comportamento t\[IAcute]pico de um sistema ca\[OAcute]tico. Uma \
vez definida as condi\[CCedilla]\[OTilde]es iniciais \[EAcute] \
poss\[IAcute]vel simular a evolu\[CCedilla]\[ATilde]o temporal do sistema, \
mas \[EAcute] imposs\[IAcute]vel prever onde cada oscilador estar\[AAcute] em \
qualquer instante de tempo futuro. O movimento resultante n\[ATilde]o \
\[EAcute] peri\[OAcute]dico.
\
\>", "Text",
 CellChangeTimes->{{3.8742660420257597`*^9, 
  3.8742661104127364`*^9}},ExpressionUUID->"a5c16a25-87f0-4ca9-9ecb-\
4367e7ad4cbe"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Caso", " ", "2"}], ":", " ", 
    RowBox[{"\[Omega]1", " ", 
     RowBox[{"<<", " ", "\[Omega]2"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"valores2", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Omega]1", "\[Rule]", "1"}], ",", 
       RowBox[{"\[Omega]2", "\[Rule]", "10"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"solsPlotUnidadesA", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "/.", "valores2"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "3"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t(s)\>\"", ",", "\"\<x[t] (1/A)\>\""}], "}"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Evolu\[CCedilla]\[ATilde]o do sistema no caso \[Omega]1 << \
\[Omega]2\>\""}], "\[IndentingNewLine]", ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x1[t]\>\"", ",", "\"\<x2[t]\>\""}], "}"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Red"}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8742656403477464`*^9, 3.874265704128042*^9}, 
   3.8742657482832875`*^9, {3.8742659176436214`*^9, 3.8742659204748836`*^9}, {
   3.8742662283706837`*^9, 3.874266228620206*^9}},
 CellLabel->
  "In[498]:=",ExpressionUUID->"c694be7d-7dcd-4a01-8a99-1aa41ba72a81"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$46308#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
vF4fvXk2loKNnsFPHTQYgT0SoiJCLylYPHXc/zBjGOKF/1x7nkScV8lpgwOS
w+DGLb2c9JGCBc7bJQlZU0GW0b23oIaCRb7RK6cl98GDjFOP4+ooWF310a0O
1/ugwza/424DBaNK/PCLkOmDiKEwP/UWCrZ7RXwu6kQvLPUcqS3upmDnxDTM
NdS6oan+hX01g4JNtH078R9XOwQUXEzqX8uF1Vv+MRA/UAd76vWCxvi4MMe/
PtLvVWuhk67pPLOeC/tHDvqix/4HqlK7j/IKc2E8SqrGB/2qoDeAu33PZi6s
pRHb8TCkFNTOFwj6KnJhDzZabt1O+QbjDHFfqdNcmATPvSckrg8onlvgxn/6
XJge+7VO5dpcpL2NS1/1HBemvplfIysyDyVcmNh80pAL2xmkJj+X+A3pFVYU
3DTlwp6nbI1jdBSjd4+98CJHLuxMtvuicnsVMpXuMrvyhAujDYYWySS1ohyX
f6+PPeXCjp0QUebf3YZI6GeXwjMubJ0JLd25sA29u5Jkwo7mwpwSglWj6tvR
eLSNUUw8FyZ2uCd2md2JAtZMnKnN5MIcPiXeaxfpQy0XB8K+ZHNhRqIB682M
+pDC28aq1x+4sA86Tb2Bz/tQDfbllONnwp/F605IvB+Je907wfud8L9Zjfvt
xgGUxeA6erySC5M1vPuDY3UQrajN3dtZzYWVZPC6bVWjIoNgWuGGGi5s9nLb
7mo3KprdUXWor57QZ/PGvZJGRZh5xD6fdi5MpD715IGqIdRUL7GrgMaF9ftZ
3f/sOYLktvE5JNC5sLUjMrKbs0bQXafl9EcMLuz+aSOp5Z4RJLWuT95wnAvz
uLE1SPE4DdlqpcpMzHFhczxhMsJco2jxi/JmxTXcmM1WveNbnehod/zsXx5e
buz9VZ+V5ud0ZOH3w2V4LTcWM3rl0NIvOvqjp1eatJ4bE3p3KyVqwxgK67O5
Jb6RGytaFbBpyRxDP/8qSc6KcWPbHkoJTtSNofGM6dLGTdzYz5vv/dxmxpDh
HX/Jp1u4sZUzQfG56gwkuTahjGsHMa4SFDn7m4H08f9VbO7hVGdrHFdqLVMa
FTmu2yXRcDQj6XKo/dqpMTLd3Bq5a0o6U+Oa0F2KxiWXIkIyNjEckpHKyxF7
kz3Zcmkccle09/451QyS9vzmz/U86/m+7/p+3/U86/PHOhQ8YkzA3nyMxxuV
4LlOM92GtQRKVpo9n1KU4mjOg+DofxIoNNEaCLGVYqlll+47SwJ7HNJD5VVS
fKmRLWy3ItAV3tS3p12Kyz/5hZRtIpA2v3jVp0kphgqnhEetCSgtPFwexJGh
jady6CCP1Uu46194WobHec85dXYEXL/TVu5m+TzP5GZL1k4CpmZBTt4sny96
a6Ln5kDAoSZnIrpDhht7ZC0bHAlULOh2XT4uw4BH90NX7iawaUd17tyMDNti
t7eK9hHIi+hY+0KH5b9jS8JKnAiML3UsEJoz+NU+sV6cC4H1mrIglW0Mpml7
h9l9x/aXa5Kf48Fgs4KxvuFBArk+HM/xQJYnxyStcg8CngK51sUIBj3+E6n/
0IfAe6PUiNprDCam2z7N8GP9zZQnON9isD5SKTz8EIGDRb9d4xWxfOr9TN/5
MAG1r9XtYyoZNNpx/alFAIHb2rkRmo8YdDX1DFcJJNBaNiZbwPLoFRUjA+kx
ApYJ2pFbRSx/v5982voDgWSntdKnLN9Kfq8ILzpBwK/wLucXlo85GGEQG0TA
e9Xs68EhBvcWcNv8Q9j6k4amR14xeCGOnLQNY/VHphq5Epbvj4sM9E4SqO8d
ywqcYnnTKa3tYwSBWGdu1qt3DGpsOXiyN5LADfkfZdV/MujAMTSsiSawXadO
0DPDYLTiRFv6GQJ32mmvwwfW3+3/Wpp9jkCE0us0jTkGz8dc/Sb/Aut/YWuA
Jrte1NR3uSiGgIFWj8u37P7Yxeuay2IJKMt9fatYPaWdZxfdv0KAfpSk72br
xce28x7GE3A+Y6yow/ajLDA43/ATgf3OE491GAaTaAgKEglUGdsM7p1kcKX9
k3lRMoHl7XvjakbZPK+ssulMIbAm9WK/00uW31sOR/amEeB/6U5W9zCY8VlN
zeB1AlldF9YbP2NQy+Gz6fEMApenO9I9mxm8Fe9uJb1JYMXcjqMtbD75S+cr
ZnMIDG7e5MXls/k57p6S57Hz5Oex1CGLQf5PuevIHQIC9m0Zn8hg6TJeyUo+
e95jHxJLgxlctzt1QqOYQHPYYq8kfwYrEkdN9EoIZNZl6xY7MVitcrnArJzA
lHmMykULBjfvfTFsUUFg20eqZ6fH4MPkLww232PvU8Op37cqs/O1ou2W3a8E
kiqpbf+IDFtUV9zwRAKdkrjk3jgZOjr7dfk3EFAhA3EngmT4W9o91cBGAvLO
hlTbA3//33dNDhcQ0EDzwNzVMuz7R1Zc0jPWf8MoU5cKKXodkAjSxQQm7c4m
jqVIcShjK8l+zs53UdWdmhApjmsOXijqIeBrzV9mainFKe010Q0DBHrWjOrs
K5ZgsEd4rWCIQMxiJePPL0nwj2zBjGiEQLC5pFLNR4IfdAPDel8RsJpGzYVq
ElTULz/+jiEQ6JF15FTIG1Q32uK7RoGCbKxQo3HFJELmpWmlhRRao/pP4NgE
Hv28I0GiSEEyWVVk9mACH80E1t6jFHad0Sx385pAP1G2Kk+FwumN1x218l9j
WbhCsxeHQp/7VJ3V8le4s0VgmmFD4duULdWPE0fwx21qDVHbKHSdUM3r3j+C
mfd83LyBgkPmp9AY9RGU3Jq9aGxHIdiRb1GQPYwpwWb9Vbso/Bq2oVKzYAhf
aiclid0p6Ad8IV7NG8CTx13fLzlFoZwPPSm13aiz8ZDQOIoCR1M9cZFuN9bP
B2XzTlMYCnoYNnCmC5ckJNhFnqcQ5cJYDkMn5pQ8SZuIo6D7IUCUXifG5tfr
rYQ3KSh36Smt/aYF1fxVwi89omDD7665+vw2PjDVdbhdR+HO92fbRaaZ6PXW
lPO4noJ449VdGzwSsOj8zub3T9j+Ju/6pZqf4lrnnVY/JKKwIFnH3l27iOvX
/6aa95JCrKtlSktYPZf+PBvvNUjhv9+/3fyioYFb+m/qHTlMQdX22hHfZY3c
P+cMaeU4hfHCEUXMb+LGa7m7GTAUjM7N3C9uauV+OXzEbOv/KUzJ3igkKbdx
O4vD5AfeUXCxtrleuF/E5Wy5xk+epsDofT1s3/eM26iQG1U6S8H6f8mjg0nt
3ABh6R7hHIUa1au/GFmIucrJtatH5ymcbTLweSMWcyvchNNyOYUb/I7Ur4I7
uH8BMQx2Mg==
          "]]}, Annotation[#, "Charting`Private`Tag$46308#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t(s)\"", TraditionalForm], 
       FormBox["\"x[t] (1/A)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     AxesStyle -> {{Medium, 
        GrayLevel[0]}, {Medium, 
        GrayLevel[0]}}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> GrayLevel[0], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Evolu\[CCedilla]\[ATilde]o do sistema no caso \[Omega]1 << \
\[Omega]2\"", TraditionalForm], 
     PlotRange -> {{0, 3}, {-0.9994017645560298, 0.9999999999998125}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"x1[t]\"", "\"x2[t]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                 PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.8742662292606726`*^9, 3.87426626810607*^9, 
  3.8742698411759377`*^9, 3.8742743521921473`*^9, 3.874277404860669*^9, 
  3.874277684477956*^9, 3.874277846276544*^9, 3.8742787904946604`*^9, 
  3.8742790279828143`*^9, 3.874598432309859*^9, 3.8745990270912933`*^9, 
  3.8745999980028734`*^9, 3.874600530997674*^9, 3.874600607824989*^9, 
  3.874600755321023*^9},
 CellLabel->
  "Out[499]=",ExpressionUUID->"fef9b261-993c-43df-be8e-62650defdc90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Constru\[CCedilla]\[ATilde]o", " ", "de", " ", "um", " ", 
    "gr\[AAcute]fico", " ", "espec\[IAcute]fico", " ", "para", " ", "o", " ", 
    "movimento", " ", "da", " ", "primeira", " ", "massa", " ", 
    RowBox[{"(", "m1", ")"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{
      RowBox[{"solsPlotUnidadesA", "[", 
       RowBox[{"[", 
        RowBox[{"1", ",", "1"}], "]"}], "]"}], "/.", "valores2"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "8"}], "}"}], "\[IndentingNewLine]", ",", 
    RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
    RowBox[{"AxesLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<t(s)\>\"", ",", "\"\<x[t] (1/A)\>\""}], "}"}]}], 
    "\[IndentingNewLine]", ",", 
    RowBox[{
    "PlotLabel", "\[Rule]", 
     "\"\<Evolu\[CCedilla]\[ATilde]o do sistema no caso \[Omega]1 << \
\[Omega]2\>\""}], "\[IndentingNewLine]", ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"{", "\"\<x1[t]\>\"", "}"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", "Blue", "}"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.06"}], ",", "0.06"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.874265788557403*^9, 3.874265842159198*^9}, {
  3.8742662413120675`*^9, 3.8742662414214177`*^9}, {3.8742662793391004`*^9, 
  3.8742663495628085`*^9}},
 CellLabel->
  "In[500]:=",ExpressionUUID->"82d194d0-6317-4b77-b15e-f3b8f01a00b4"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
/L22xgL1I8t3uMR9sP8BNnZ+WA==
          "]]}, Annotation[#, "Charting`Private`Tag$46389#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
     All, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t(s)\"", TraditionalForm], 
       FormBox["\"x[t] (1/A)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     AxesStyle -> {{Medium, 
        GrayLevel[0]}, {Medium, 
        GrayLevel[0]}}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> GrayLevel[0], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Evolu\[CCedilla]\[ATilde]o do sistema no caso \[Omega]1 << \
\[Omega]2\"", TraditionalForm], 
     PlotRange -> {{0., 7.999999836734694}, {-0.06, 0.06}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"x1[t]\""}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                 PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.874265842674195*^9, 3.8742662418276057`*^9, {3.87426628001082*^9, 
   3.874266300419017*^9}, 3.874266350928359*^9, 3.874269841566139*^9, 
   3.874274352613922*^9, 3.874277405126477*^9, 3.8742776850144005`*^9, 
   3.8742778467327504`*^9, 3.8742787909135017`*^9, 3.8742790284198313`*^9, 
   3.874598432616663*^9, 3.8745990276170855`*^9, 3.874599998448439*^9, 
   3.87460053137422*^9, 3.874600608202099*^9, 3.87460075560553*^9},
 CellLabel->
  "Out[500]=",ExpressionUUID->"58b5c359-90ae-4bcb-85ff-78ce261d18a7"]
}, Open  ]],

Cell[TextData[{
 "Uma vez que as constantes el\[AAcute]sticas  ",
 Cell[BoxData["k"],ExpressionUUID->"51f8e622-1e41-41cd-8823-f04e43ec217a"],
 " das duas molas s\[ATilde]o iguais, a condi\[CCedilla]\[ATilde]o \[Omega]1 \
<< \[Omega]2 implica que m1 >> m2. Ou seja, para esse sistema \
espec\[IAcute]fico seria esperado que a massa m2 oscilasse harmonicamente \
(com uma frequ\[EHat]ncia dada por \[Omega]2) enquanto a massa m1, pelo fato \
de ser muito mais expressiva, permanecesse aproximadamente em repouso.\n\nDe \
acordo com o primeiro gr\[AAcute]fico, tem-se (aproximadamente) as seguintes \
coordenadas entre dois picos sucessivos associados ao movimento da massa m2 :\
\n{{0.6245888157894736, 0.9836130434557333}, {1.259251644736842, \
0.9836130434557333}}\nNotemos que a dist\[AHat]ncia entre ambos ao longo do \
eixo horizontal, a qual define o per\[IAcute]odo de \
oscila\[CCedilla]\[ATilde]o do objeto, \[EAcute]  cerca de 0.634 s. Em outras \
palavras, temos uma estimativa para o per\[IAcute]odo de oscila\[CCedilla]\
\[ATilde]o dessa massa. Mas, pela defini\[CCedilla]\[ATilde]o de \
per\[IAcute]odo, sabemos que ",
 Cell[BoxData[
  FormBox[
   RowBox[{"T2", "=", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", "\[Omega]2"}]}], " ", "=", "0.628"}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "a665de6a-daea-43f1-84fd-47ff0e1e6b5f"],
 " s (dado que \[Omega]2 = 10 Hz). \nA din\[AHat]mica observada para a massa \
m2 est\[AAcute], portanto, completamente dentro das expectativas.\n\nA din\
\[AHat]mica da massa m1 tamb\[EAcute]m est\[AAcute] sendo descrita conforme \
esperado. No segundo gr\[AAcute]fico constru\[IAcute]do \[EAcute] poss\
\[IAcute]vel notar pequenas oscila\[CCedilla]\[OTilde]es em torno da posi\
\[CCedilla]\[ATilde]o x1 = 0, mas que tamb\[EAcute]m evoluem no tempo de \
maneira peri\[OAcute]dica com per\[IAcute]odo de aproximadamente ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"2", 
     RowBox[{"\[Pi]", "/", "\[Omega]1"}]}], "=", "6.28"}], TraditionalForm]],
  FormatType->"TraditionalForm",ExpressionUUID->
  "af126d7e-3a7a-4b64-81b1-c328b0d861d0"],
 " (dado que \[Omega]1 = 1 Hz)\n"
}], "Text",
 CellChangeTimes->{{3.8742661169446507`*^9, 3.874266212270591*^9}, {
  3.8742664011232333`*^9, 3.874266755652327*^9}, {3.874266787214452*^9, 
  3.8742667882454205`*^9}, {3.8742668207936926`*^9, 
  3.8742671789000425`*^9}},ExpressionUUID->"95c5ddfc-c53a-4199-b2b6-\
c64c3bdc1b47"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Caso", " ", "3"}], ":", " ", "\[Omega]1"}], " ", ">>", " ", 
    "\[Omega]2"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"valores3", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Omega]1", "\[Rule]", "10"}], ",", 
       RowBox[{"\[Omega]2", "\[Rule]", "1"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"solsPlotUnidadesA", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "/.", "valores3"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "18"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<t(s)\>\"", ",", "\"\<x[t] (1/A)\>\""}], "}"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Evolu\[CCedilla]\[ATilde]o do sistema no caso \[Omega]1 >> \
\[Omega]2\>\""}], "\[IndentingNewLine]", ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x1[t]\>\"", ",", "\"\<x2[t]\>\""}], "}"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"Blue", ",", " ", "Red"}], "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8742658490336723`*^9, 3.874265951934785*^9}, {
  3.874266198796135*^9, 3.87426620037433*^9}, {3.8742671961054296`*^9, 
  3.8742671969181623`*^9}, {3.874267411867043*^9, 3.874267413522771*^9}},
 CellLabel->
  "In[501]:=",ExpressionUUID->"8e411f9c-2637-4a98-853e-232f9050c8e2"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
4DqJ/gc/VPeF
          "]]}, Annotation[#, "Charting`Private`Tag$46467#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[1, 0, 0]], 
         LineBox[CompressedData["
1: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
YMvZSxSwsnwnnEZyYdT8J4lIClzI1x6cJTnRMDGBFkuB6ONFmjZtZP9H1Pet
TaZAY/cfjyckM7da1FtlUOBXhbSi2WcCL/s+FOGWTYHAxL3pcSSPpJ03Ccij
QHLNKcPPJGf+ySxPK6YAb2WlkUM7gUNz1gc/LaOA9ePT1ZkkO1h+MHpXRQED
RZmcUZKXP5t+NdRMgR+CFl2+HQT+5RB1+lc7Baoebdz0iuQ2UeU1y3oosMfw
uNwfkp+/eUEs/0aBBP5Wiw2dBI53M8tnjlNg6TLrpDMke8v2eGwiKHA5UdY8
j+Q9Vb6a+6YpwP6xrbiLZMappSNOsxSYN3dtW/SFwIIqt7NOLaKCVNp3PwWS
hxpX/3dZkAqf/bWMtEiuCKxSShGjQueVsw9WkZyhZdOdI0UF1tSYkATJwR3c
W6+XU8HrFn/GIOnf7sqlww3KVFhyvPZyGskb18rJ9Kwi7UVkr0mWH8ht5TGp
QPjt2FlK5jMdC/F8a6hwXl5LXIHkVuPPe6mGVIgbFvltSdanYMJdRG0zFZLV
V3JdyfrG3lyoM9hOBZ3QD33mZH88TZPCd+yiwsLaE/WCZD93/dTYbmNBBZpd
7Os4Ui+amSWLTlhR4ampT/M3Um9LLfbjIDsqzFoomi8i9fhtfjgo9igVotk+
icOknstzAzZmuFHB4X2Hauz/9W4jMfPMmwqrc5qezJDzESR4/2XlaSp8jZeR
ppPzY/vS0O9zABVWScUfFXlHzuOxRr3RUCq02jf0PSXnT5ZylDcTTgXtObqw
xBsC/yz7lSt8jQpa567c1nhF4BbPaHeFJCr0/yiLnnlG4CcrVDR0b1FhX7gb
9WI+gWPqCofQXSpkf7d8WP6QwGZqvY7Hcqnwdyuh50zuL+qtpxTPPCP9NS86
WneTwItDBbvCi6hQql+vNJRIYNylZ/W4kgqiF55eMwkn8LqksD2TXVQQ2xG5
/LM7gaW3yAsLDFLhzkhrqvxRAk/y8mqlx8j8nzWaq9gSOG9X+1bDn2Q+l6Nd
w3cSmM6vtSFEVAoSxrR9Z1eRet37dEGTKgVpi5O69yoSuP6WQVWrnBQcNnCW
DZUm54m1dZ86XQoupySpx/ITuMTpiEvjBin4d/0OTunh4UP4WsJKVynwtQ7q
MSfPFw0R6cPVnlIAcveHC8jz569VqsLJU1KwRvZAEjWYhzN42TkVF6RgWMCM
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
          "]]}, Annotation[#, "Charting`Private`Tag$46467#2"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t(s)\"", TraditionalForm], 
       FormBox["\"x[t] (1/A)\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     AxesStyle -> {{Medium, 
        GrayLevel[0]}, {Medium, 
        GrayLevel[0]}}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> GrayLevel[0], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Evolu\[CCedilla]\[ATilde]o do sistema no caso \[Omega]1 >> \
\[Omega]2\"", TraditionalForm], 
     PlotRange -> {{0, 18}, {-0.999907139758999, 0.9999999999999325}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"x1[t]\"", "\"x2[t]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                 PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8742659481732874`*^9, 3.8742659539812126`*^9}, {
   3.8742671833553123`*^9, 3.8742671978393865`*^9}, 3.8742674140692587`*^9, 
   3.874269841909808*^9, 3.8742743529263487`*^9, 3.8742774055140185`*^9, 
   3.8742776855520673`*^9, 3.8742778471514487`*^9, 3.8742787912919207`*^9, 
   3.8742790287620296`*^9, 3.874598433013444*^9, 3.874599028437219*^9, 
   3.874599999161931*^9, 3.8746005318472605`*^9, 3.8746006087184725`*^9, 
   3.874600756093045*^9},
 CellLabel->
  "Out[502]=",ExpressionUUID->"ed561889-f889-43cc-8f22-f33fbb46304a"]
}, Open  ]],

Cell["\<\
No caso \[Omega]1 >> \[Omega]2 temos uma condi\[CCedilla]\[ATilde]o \
exatamente oposta \[AGrave] do caso anterior: m1 << m2. Nessa \
situa\[CCedilla]\[ATilde]o esperamos um comportamento no qual a massa m2 \
oscile harmonicamente com per\[IAcute]odo aproximadamente igual a T2 = \
2\[Pi]/\[Omega]2 enquanto a massa m1 seja \[OpenCurlyDoubleQuote]arrastada\
\[CloseCurlyDoubleQuote] em conjunto com m2.
Perceba que tanto no caso anterior quanto nesse caso particular \[EAcute] \
esperado que m2 oscile com per\[IAcute]odo T2, mas \[EAcute] importante \
destacar que as raz\[OTilde]es s\[ATilde]o distintas. No caso inicial essa \
oscila\[CCedilla]\[ATilde]o ocorre devido ao fato de que m1>>m2 (e, portanto, \
m1 poderia ser visto como uma esp\[EAcute]cie de parede na qual m2 estava \
apoiada). Agora essa oscila\[CCedilla]\[ATilde]o ocorre j\[AAcute] que, pelo \
fato de termos m2>>m1 e m2 ser a massa externa do sistema, seu movimento deve \
ser predominante sobre o movimento da massa m1 acoplada.

Novamente, \[EAcute] justamente esse o padr\[ATilde]o que observamos no gr\
\[AAcute]fico constru\[IAcute]do. Enquanto m1 oscila rapidamente em torno da \
posi\[CCedilla]\[ATilde]o de equil\[IAcute]brio ao passo que acompanha o \
movimento da massa m2, os primeiros dois picos sucessivos associados \
\[AGrave] curva x2[t] t\[EHat]m coordenadas {{0., 0.9951995424154843}, \
{8.885279605263161, 1.006790183394812}}. Isso implica um per\[IAcute]odo T2 = \
8.88 s, que \[EAcute] um resultado um pouco discrepante em rela\[CCedilla]\
\[ATilde]o ao valor de 2\[Pi], mas ainda aceit\[AAcute]vel dadas as caracter\
\[IAcute]sticas da din\[AHat]mica n\[ATilde]o trivial associadas ao sistema \
em estudo.\
\>", "Text",
 CellChangeTimes->{{3.8742657429348516`*^9, 3.874265743482046*^9}, 
   3.8742672143954706`*^9, {3.874267426602191*^9, 3.874267502661792*^9}, {
   3.8742675453582277`*^9, 3.8742678781268454`*^9}, {3.8742679975066404`*^9, 
   3.8742680765744934`*^9}, {3.874268115201168*^9, 
   3.8742681861943474`*^9}},ExpressionUUID->"8cca2b8a-10f0-41e4-b44c-\
08783052fca1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Determina\[CCedilla]\[ATilde]o", " ", "dos", " ", "instantes", " ", "em",
      " ", "que", " ", 
     RowBox[{"x1", "[", "t", "]"}]}], " ", "=", " ", 
    RowBox[{"x2", "[", "t", "]"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"values", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"A", "\[Rule]", "1"}], ",", 
       RowBox[{"\[Omega]1", "\[Rule]", "1"}], ",", 
       RowBox[{"\[Omega]2", "\[Rule]", "1"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"solsPlot", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
         RowBox[{"solsPlot", "[", 
          RowBox[{"[", 
           RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ")"}], "/.", "values"}], 
      "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", "\"\<t(s)\>\"", "}"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", "\"\<Estudo dos instantes x1[t] = x2[t]\>\""}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"{", "\"\<Curva x1[t]-x2[t]\>\"", "}"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", "Blue", "}"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.874268997491764*^9, 3.874269292446637*^9}, 
   3.874269537122633*^9, {3.8746002022714252`*^9, 3.874600224587526*^9}},
 CellLabel->
  "In[503]:=",ExpressionUUID->"ceb1e3ca-254b-4512-86e6-2efd24df6a3e"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJwVl3k8lN8Xx8ea3RAGYSZTSFL6Smm7J21ISKhQIaGUoqjQZq0sISEVKlpU
ylok11YksibLDMNgJtuUfc3v+c0/83q/7n3u+ZzPOec+r2e58zmrk/wkEmmd
AIn0///H15yF9VzCt9/+t0j8eLiiiWZ2iHYK7fA+snuI4MWvxUE02hUE5gyF
LIKlYvPfi7UGIrdK9kVzgh+XRFKFaLfR2q4ljhX/eFiH5xK16HYX5TmrtskS
zJRK/jf/Kxa5/t7QbbjAwyueixrMzt1H+5pSrhjO8/CZbT5np6gPUN+e/mcy
czyc08xKG9/5CH3XbXAqm+HhWQ8zxl+3FJRncDJv3zQPp/Ixbk/tfoIsqtip
byd5eFdtzMrJX0/RgyXfNbjjPMxN3Fs6fioNDf74aTI3ysMRLgsOY3Pp6HbG
nATnDw83zbnH/aG+Qh91nt8wHuJh30q1dbysDDS4yWRT8W8eVr7X/H145xtk
rbQrWYLDw87aIDDo9g6RyhVD/+vmYf45v7rxgPfo3dMJskQnDzezbFTHd2eh
yYvrHD638/DlN+IFo7+y0Vj4ceOMJh42je0XHk3NQfj95vG+Oh5WuVxq/fdU
Lmrx3eE7+52HS3Ze+sOby0NKKRvlM8t5eElHj+YwtQDVzxX5QhYPt5Z89hni
FqDz8rvv7HzDwxnPE8sHswpRVGl3BvUFD5t7mx8f2FmEZKV3/nfiEQ/HixbG
c9wwWqenuV8xhIdzL5l6X1AsQZvW6+X2XuPhRwMblcYCStCBjo2edy7zsGe9
rNvo7lI0TX3M7+zBw7KPqvj//ipDj/18ao0seHhOKv/V+a3lqMbRa7B9Lw/3
3nxm+Se1HB3R3JBlBjyc73YtmXeqAqnu7nT+vI6H7f7T3zwy9wWFXVHNaZbm
4SfVKV6D1G+I96v3dP/XETyemKfdFfENsUSWZZkWjeA9bt/ZjTPfkOufkZ7A
rBE8JDBlU9hUjTLkaw+deziCN20z33w7rAZRXpsVbT47guvfzfNr8upQ8qtw
9UyRESyLRI9J6tajL9WqE3Zzw3iLRtzmMJd6NGztS2YOD+Oo8Vdjfg316OX6
M0FOjcNYP+bnSefXDagqvU7R88Ewvl6tY6p3vAnJ53uPvKEO45dZHzRe329C
1/henSyUHsaNiUYCK2uakOs7Zl3y4hBe4Xa4SNGwGb0vlR4d6hzC1QLBuqSl
P5Etc9+7Jw+HsMK2Dtm6ry2Is+KL6C3JIZz57nbHGd12RLM8W6nbPIAHZAci
TJ3akZkyY+WnkgGs6Wu6XSuuHUX7qh/VfDuAU7eKP2HPtCPunZyGlJABHPst
wtXuSwdqLdm+XW7DAPZl3/2714GJAqnrlmtG/cYp4t+DZHaz0ERKT3nnKi52
Qw0PhrzZaLBA4uQl6T5MejpZ2BHORgKJBi53J3pxoqAKozqNjTpvbdsa09GL
q765qr1qYSOpsMKlB1/0Yi3r+acnN/eiBGHHrKZtvZjrrvmmk68PGX3Lvz/o
ysanY68W10f3o91aCvfuZXRjz75V7NzM3yi7lPKRzM/AYsuDNbs2/UH5oR+D
qvW/4ijyd+0njmMIbkZk6Tpmo4KNqnnmnmOI5umdds01B/UeO4fm/ceQ1vmE
AeszuWjL26XWhxLGEMn+2a5I33zENXG4KvljDM1bX9wwF1yIdgYN113ZMo4c
WXQmdRfRtxPSPlYKE2gkoD5JXeoboqs6Ly7SJ5B6/JonC2HfkPmu3Ntv9SZQ
T82/TTf4qlF67OFkkf3E+tDv5stj1chq7ZPK4qAJFPvhwjCtqQa9dV+vvPrv
BJrS/bDTDOqRc4c1FqiZROmtwrdsK5uQ2MPus15tk2hno8TW2fkmlG3nqdLV
P4keWWQ6ua1vRgLtYVcK+aZQxcEvaY8eNaO01sL/vDZOoeYbKfGnPH+i/p+0
l51Pp5BVqOgfoyW/0On6oeiCK9NoR/qK3I/i7Ug2+grSDJtG79l2+b8N21Gh
hfBIXNw0elVaQGl3a0fiddR9599Noz9Ct5qnytrRm1orIc2+aXSo6MsRqm8H
Gqn+eCXOcgY9cvyyr7uOgby+BDuf05xFx4S7ZJ0supBa7x7hyf9m0Zk1VU98
vLvQd37RjACYRZ77W7pN73ehlRD59/aRWfTKQqTYoL0LtRXev5EWPotWPV11
NWwdC+14/zy5jTeL1uqd+bw/i4VGfrgbOc7Pom/jVtuaSljo4bB2f7/IHErd
rIk31hN9qf1uzfjyOfTgj7Hf4xEWepX+oUjKeg6dNtuY37aqG8k8rGrf+XEO
nVlqvlEoqRsVF9y5Vl0xhyJjjyp7v+hGHq1m6gca5tCeMomuotxu9EW+4dSx
gTnU119fM/ijG12Jbpu+rDKPRsN5gW/5elB3yIBC5o15dGuHjn2OYw+KSntT
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
XbfufFT5L1Q8pjGzuEgHsZsXdlWk/UL/A0LQ+tw=
          "]]}, Annotation[#, "Charting`Private`Tag$46548#1"]& ]}}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"t(s)\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     AxesStyle -> {{Medium, 
        GrayLevel[0]}, {Medium, 
        GrayLevel[0]}}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> GrayLevel[0], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, PlotLabel -> 
     FormBox["\"Estudo dos instantes x1[t] = x2[t]\"", TraditionalForm], 
     PlotRange -> {{0, 10}, {-0.9999999999999584, 0.9729055894026886}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Curva x1[t]-x2[t]\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                  False]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             InterpretationBox[
              ButtonBox[
               TooltipBox[
                GraphicsBox[{{
                   GrayLevel[0], 
                   RectangleBox[{0, 0}]}, {
                   GrayLevel[0], 
                   RectangleBox[{1, -1}]}, {
                   GrayLevel[0], 
                   RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                 "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                 FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                 PlotRangePadding -> None, ImageSize -> 
                 Dynamic[{
                   Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                StyleBox[
                 RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> False]],
                Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
               Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
               With[{Typeset`box$ = EvaluationBox[]}, 
                 If[
                  Not[
                   AbsoluteCurrentValue["Deployed"]], 
                  SelectionMove[Typeset`box$, All, Expression]; 
                  FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                  FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
                  FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                  MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
               Automatic, Method -> "Preemptive"], 
              GrayLevel[0], Editable -> False, Selectable -> False]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8742691859425287`*^9, 3.87426929313356*^9}, 
   3.8742698420816426`*^9, 3.8742743530825644`*^9, 3.874277405694479*^9, 
   3.874277685840716*^9, 3.8742778473384905`*^9, 3.874278791495797*^9, 
   3.874279028915106*^9, 3.8745984332048025`*^9, 3.874599028665098*^9, 
   3.8745999994182825`*^9, {3.8746002081919537`*^9, 3.8746002256787806`*^9}, 
   3.8746005321757946`*^9, 3.8746006089641075`*^9, 3.8746007563337*^9},
 CellLabel->
  "Out[504]=",ExpressionUUID->"60eb6be5-a46a-4493-bdab-ebca5b1d9810"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"A", " ", "fun\[CCedilla]\[ATilde]o", " ", 
       RowBox[{"x1", "[", "t", "]"}]}], "-", 
      RowBox[{
       RowBox[{"x2", "[", "t", "]"}], " ", "se", " ", "anula", " ", "quando", 
       " ", 
       RowBox[{"x1", "[", "t", "]"}]}]}], "=", " ", 
     RowBox[{
      RowBox[{"x2", "[", "t", "]"}], ".", " ", "Portanto"}]}], ",", " ", 
    RowBox[{
    "ao", " ", "encontrar", " ", "as", " ", "4", " ", "primeiras", " ", 
     "ra\[IAcute]zes", " ", "dessa", " ", "fun\[CCedilla]\[ATilde]o"}], ",", 
    " ", 
    RowBox[{
    "encontramos", " ", "tamb\[EAcute]m", " ", "os", " ", "4", " ", 
     "primeiros", " ", "instantes", " ", "em", " ", "que", " ", "a", " ", 
     "igualdade", " ", "\[EAcute]", " ", "verificada"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"raizes", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.1081414473684217`", ",", "0.001984178850573226"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"3.0893640350877196`", ",", "0.013418329926023098`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"4.600466008771932", ",", "0.024852481001473414`"}], "}"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"6.883908991228072", ",", "0.013418329926023098`"}], "}"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"FindRoot", "[", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"solsPlot", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "1"}], "]"}], "]"}], "-", 
           RowBox[{"solsPlot", "[", 
            RowBox[{"[", 
             RowBox[{"1", ",", "2"}], "]"}], "]"}]}], ")"}], "/.", "values"}],
         "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"raizes", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "raizes", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.874269300849554*^9, 3.8742693570231867`*^9}, {
   3.874269391996977*^9, 3.8742694861742554`*^9}, {3.8742695441453915`*^9, 
   3.874269550675095*^9}, 3.874269580814315*^9, {3.874269611745273*^9, 
   3.874269661495716*^9}, {3.874269787284903*^9, 3.8742698215584106`*^9}, {
   3.8745984070212765`*^9, 3.8745984072805758`*^9}},
 CellLabel->
  "In[505]:=",ExpressionUUID->"6779eee7-1d6d-4cca-b646-c76eaeaa9d8f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "1.1521052481030547`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "2.975002337199227`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "4.6220746735186955`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "6.898550527661059`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8742698307143073`*^9, 3.874269842253478*^9}, 
   3.874274353145048*^9, 3.874277405793252*^9, 3.874277685966742*^9, 
   3.874277847457057*^9, 3.8742787915984755`*^9, 3.874279028986545*^9, 
   3.87459843328609*^9, 3.874599028722451*^9, 3.8745999995062675`*^9, 
   3.8746005322595243`*^9, 3.874600609162326*^9, 3.8746007564372373`*^9},
 CellLabel->
  "Out[506]=",ExpressionUUID->"3c658e2c-fa0f-4aae-b7a1-cd81202b6685"]
}, Open  ]],

Cell["Exerc\[IAcute]cio 2", "Item",
 CellChangeTimes->{{3.8742627654452696`*^9, 
  3.8742627666171007`*^9}},ExpressionUUID->"3c75a6d2-d7d3-474e-abda-\
736f71423f87"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "Defini\[CCedilla]\[ATilde]o", " ", "dos", " ", "pares", " ", "oordenados", 
   " ", "de", " ", "dados"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8742701123067417`*^9, 3.8742701240850472`*^9}, 
   3.8742774445081353`*^9},
 CellLabel->
  "In[507]:=",ExpressionUUID->"ad076657-8c4c-461d-8605-40621f7a776f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Temperaturas", "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "8"}], ",", 
      RowBox[{"-", "5"}], ",", "0", ",", "5", ",", "10", ",", "15", ",", "18",
       ",", "20", ",", "30", ",", "40", ",", "50", ",", "60", ",", "70", ",", 
      "80", ",", "100"}], "}"}]}], 
   RowBox[{"(*", "\.baC", "*)"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sigmas", "=", 
    RowBox[{"{", 
     RowBox[{
     "77.0", ",", "76.4", ",", "75.6", ",", "74.9", ",", "74.22", ",", 
      "73.49", ",", "73.05", ",", "72.75", ",", "71.18", ",", "69.56", ",", 
      "67.91", ",", "66.18", ",", "64.4", ",", "62.6", ",", "58.9"}], "}"}]}], 
   RowBox[{"(*", 
    RowBox[{"dyne", "/", "cm"}], "*)"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listaTempSigma", "=", 
   RowBox[{"{", 
    RowBox[{"Temperaturas", ",", "sigmas"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"plotDados", "=", 
  RowBox[{"listaTempSigma", "//", "Transpose"}]}]}], "Input",
 CellChangeTimes->{{3.8742698795590844`*^9, 3.874270065639594*^9}, {
  3.8742701299829597`*^9, 3.8742701429433312`*^9}, {3.8742701950912576`*^9, 
  3.874270197184373*^9}},
 CellLabel->
  "In[508]:=",ExpressionUUID->"f164da05-ec1d-4968-a2c8-3185196f75a2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "8"}], ",", "77.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "5"}], ",", "76.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "75.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"5", ",", "74.9`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"10", ",", "74.22`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"15", ",", "73.49`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"18", ",", "73.05`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"20", ",", "72.75`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"30", ",", "71.18`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"40", ",", "69.56`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "67.91`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"60", ",", "66.18`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"70", ",", "64.4`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"80", ",", "62.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"100", ",", "58.9`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.874270045185033*^9, 3.8742700660613704`*^9}, 
   3.8742702226221848`*^9, 3.8742743531919127`*^9, 3.874277405877632*^9, 
   3.8742776860899453`*^9, 3.87427784753743*^9, 3.874278791717661*^9, 
   3.874279029073786*^9, 3.874598433360691*^9, 3.874599028782745*^9, 
   3.874599999670895*^9, 3.874600532376215*^9, 3.8746006092688866`*^9, 
   3.874600756550118*^9},
 CellLabel->
  "Out[511]=",ExpressionUUID->"578d1644-a724-4abf-a2f2-76897d8569f4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Obten\[CCedilla]\[ATilde]o", " ", "dos", " ", "par\[AHat]metros", " ", 
    "de", " ", "ajuste", " ", "linear"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Fit", "[", 
   RowBox[{"plotDados", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "T"}], "}"}], ",", "T"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.874270147070205*^9, 3.874270184745962*^9}, {
  3.8742702629756413`*^9, 3.8742702643777227`*^9}},
 CellLabel->
  "In[512]:=",ExpressionUUID->"9540502e-baa0-4d89-9814-8f4f2171250e"],

Cell[BoxData[
 RowBox[{"75.86552344833568`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.16462443654646322`", " ", "T"}]}]], "Output",
 CellChangeTimes->{
  3.8742701869668007`*^9, {3.87427021773388*^9, 3.8742702284053044`*^9}, 
   3.874270264658476*^9, 3.8742743532387753`*^9, 3.8742774059135437`*^9, 
   3.8742776861968284`*^9, 3.8742778475890584`*^9, 3.874278791793544*^9, 
   3.87427902913264*^9, 3.8745984334177785`*^9, 3.874599028816717*^9, 
   3.8745999997568707`*^9, 3.874600532441012*^9, 3.874600609351617*^9, 
   3.8746007566506596`*^9},
 CellLabel->
  "Out[512]=",ExpressionUUID->"72171b81-28a9-4b32-99cf-f48bff016179"]
}, Open  ]],

Cell[TextData[{
 "Portanto, os par\[AHat]metros a e b t\[EHat]m, aproximadamente, os \
seguintes valores: ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", "=", 
    RowBox[{"75.87", "  ", 
     RowBox[{"dyne", "/", "cm"}]}]}], TraditionalForm]],ExpressionUUID->
  "87a89db0-8333-4aa3-a202-2c257524bac7"],
 " e ",
 Cell[BoxData[
  FormBox[
   RowBox[{"b", "=", 
    RowBox[{
     RowBox[{"-", "0.1646"}], "  ", 
     RowBox[{
      RowBox[{"(", "dyne", ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"cm", " ", "\.baC"}], ")"}]}]}]}], TraditionalForm]],
  ExpressionUUID->"fea9ac65-c963-4dd6-985f-6d2d20b45b6d"],
 " "
}], "Text",
 CellChangeTimes->{
  3.8742701066279545`*^9, {3.8742702523574295`*^9, 3.874270424909221*^9}, {
   3.874272158654216*^9, 3.8742721657618933`*^9}, {3.874601360405818*^9, 
   3.874601371464199*^9}},ExpressionUUID->"3283a792-5381-409c-82f6-\
3e4d4521d3d2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Constru\[CCedilla]\[ATilde]o", " ", "do", " ", "gr\[AAcute]fico", " ", 
    "de", " ", "visualiza\[CCedilla]\[ATilde]o", " ", "do", " ", "conjunto", 
    " ", "de", " ", "dados"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Pontos", "=", 
     RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
      RowBox[{"plotDados", "\[IndentingNewLine]", ",", 
       RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"Black", ",", 
          RowBox[{"PointSize", "[", "0.02", "]"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Sigma]", "[", "T_", "]"}], ":=", 
     RowBox[{"a", "+", 
      RowBox[{"b", " ", "T"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"values", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a", "\[Rule]", "75.87"}], ",", 
       RowBox[{"b", "\[Rule]", " ", 
        RowBox[{"-", "0.1646"}]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Ajuste", "=", 
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Sigma]", "[", "T", "]"}], "/.", "values"}], ",", 
       RowBox[{"{", 
        RowBox[{"T", ",", 
         RowBox[{"-", "10"}], ",", "120"}], "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
    "Pontos", "\[IndentingNewLine]", ",", "Ajuste", "\[IndentingNewLine]", 
     ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<T [\.baC]\>\"", ",", "\"\<\[Sigma] [dyne/cm]\>\""}], 
       "}"}]}], "\[IndentingNewLine]", ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Ajuste linear do conjunto de dados fornecido\>\""}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.874270423610521*^9, 3.874270922049776*^9}, {
   3.8742721373392897`*^9, 3.874272139459897*^9}, {3.874272290837519*^9, 
   3.874272351817829*^9}, 3.8742773821169047`*^9, {3.874598595470948*^9, 
   3.8745985963705745`*^9}},
 CellLabel->
  "In[513]:=",ExpressionUUID->"f75a5d0b-ee75-4eae-a617-ab08d738fedf"],

Cell[BoxData[
 GraphicsBox[{{{}, {
     {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6], 
      PointBox[{{-8., 77.}, {-5., 76.4}, {0., 75.6}, {5., 74.9}, {10., 
       74.22}, {15., 73.49}, {18., 73.05}, {20., 72.75}, {30., 71.18}, {40., 
       69.56}, {50., 67.91}, {60., 66.18}, {70., 64.4}, {80., 62.6}, {100., 
       58.9}}]}, {
      {GrayLevel[0], PointSize[0.02], AbsoluteThickness[1.6]}, {}}, {
      {GrayLevel[0], PointSize[0.02], AbsoluteThickness[
       1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
       LineBox[CompressedData["
1:eJwVkms01HkAhicpNbIVoVVojEtmXEq62ehF5fab+7iOP5Ml1lZCZ1JRbElZ
2mQjJG2KVhpWsrlkh+q0mdOSNooz24lWZgmLbqJZ++E573k+vN8eRkScMEqL
RqNxZvl/r0unyjQapqLIZwFz/k4RxFb69eeGmIrjMu3iQqkI02pbJbubqdhT
SjN2nHVuYvBooJyp2DrzgR4ULsJY+u2N1aFMRX+1evxnSoQN12W/S+stFHbL
la2cEBFa3o6rWxIYiqaB7IhzIhHkht3BC5SmCtUxg8uWO0TwYFzK9mrQV3QX
RPrRbEUY/dd40dE2mkK7dG5gm54I6zju+uHNvVtP55/XMZ0Q4l5XT2pF/EJ0
Rif22XUJ0f7WQKk7ZQRv9gVzdqMQqa/URid0GZC10TMGioV4rjCmGaZaY65/
XC4rTQjGxskTD/LYaO1kaFG7hPj72khyVfYauNiZFBEfIZyOuczTY6xDf5I0
j+UgxIuAPer48vUYqr6wIcdAiDvJZZ4PIzeh8p7ZnFvvBMgdrdvtNOGCEuWI
/YNeAQprH+mevu0KX7l2el6zAKn1UceSNgH+yUvSRn4SwHErf9ApxR05rrEv
nDMEeP/G9eQulQdO9CyM2RQrwFee+YuZ1ttQGfteyOIJkN8y8Tgoczuyulgx
z9cKUNrk6aE/uANt9mKLpYYCsMM0BWIHb7gkKd02TvGhXN1st+SMDyIunkw3
UfHxumCwTNzjizu/5joMt/BxM2N++0ozAlnTj8k7yvk4f9HGKSyFg8ELvZNU
Jh8fJbXJq+9zkbVvX/vXcXxsZljM2bCMD7W535/WQj4edfYXFrTycaVhxZGE
9XyUBEquuUcJkOPtkllpwsfMPrGozFCIuEjXNK9PPBRQcxN4DUKYmV2u0b/P
Q/aCyugGiQhZ8nH70R940PPumnpJFyP23R8z2wN4UIbUzeHKxai09Dp7cBUP
RlrLy2Th/pDS/Q7bDHBRkuzY3K8dgANd/6yuqeIi9RZu6JcHgByUreIe4uLN
d082fw4IxNkn2bsjwcV55koXh0+B2LLMPSWQzkV70EC3yY0gBC1K7bvXzkEY
qSAPJcFY01uR45nHAdvAcn3T52DsORM/r0TKwfG95o3fVoVgxczdR/utOVhR
3FEbLpbAjl8TYjNGQM88nG74ToLpg1lrhxoI0nWvTWRcDYWrZDzUNo3ATZr5
1M2HwkuLSbLNj2Dkpk7Pl4RC6ASnTORLUKyT/tckl8Kzu+WaCB+CafnR1xVi
Ch2Rkpo0L4L6mf0fjaQUmstajX/zJHAuCjcdlVEoYuX0bd5CwOpyjiq5QsHf
ySHJ0Z6gx7bmm0Pls3+tk4/d7AhOpTju9a+gQJ68ZHHZBIOWrAO61RS27T+n
2m1LcDXR/NSBRgpOddMeFVYEq5bSb/A6KSx2UepZzXbSHpnxC+sphUy6VbSz
KcGR29p1855RmN97ROG5kkAVrmluVFH4fNgpMcKEoFA+2WGjpjB8p+BZiRGB
r1bCU61hCjGnJ9ZWGRJ89B99rhqh8CqM833zMoKgGXVf7iSFHg3NTaVPoCOI
fr33PYWAjpD84aUEdVdeDflMUei8VDv2aQnBrg87xyxnKHDjv/DVnXVD8mJS
o6Hw0D2m1GQxwX8CriH/
        "]]},
      Annotation[#, "Charting`Private`Tag$46660#1"]& ]}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"T [\.baC]\"", TraditionalForm], 
    FormBox["\"\[Sigma] [dyne/cm]\"", TraditionalForm]},
  AxesOrigin->{0, 57.894444444444446`},
  AxesStyle->{{Medium, 
     GrayLevel[0]}, {Medium, 
     GrayLevel[0]}},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Medium,
  LabelStyle->GrayLevel[0],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox[
   "\"Ajuste linear do conjunto de dados fornecido\"", TraditionalForm],
  PlotRange->All,
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.874598597287155*^9, 3.8745990290200176`*^9, 
  3.874600000098209*^9, 3.874600532610399*^9, 3.874600609639532*^9, 
  3.8746007568012056`*^9},
 CellLabel->
  "Out[517]=",ExpressionUUID->"63fbf0f9-9f26-41a4-b3f7-acb97154d324"]
}, Open  ]],

Cell["Exerc\[IAcute]cio 3", "Item",
 CellChangeTimes->{{3.8742627958683453`*^9, 3.8742627966177883`*^9}, {
  3.874271024130269*^9, 
  3.874271024130269*^9}},ExpressionUUID->"b5f6544d-136d-4e80-8517-\
da979761c995"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Constru\[CCedilla]\[ATilde]o", " ", "/", " ", 
     "Solu\[CCedilla]\[ATilde]o"}], " ", "do", " ", "sistema", " ", "de", " ",
     "equa\[CCedilla]\[OTilde]es", " ", "diferenciais"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Clear", "[", 
    RowBox[{"x", ",", "y"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqx", ":=", 
     RowBox[{
      RowBox[{"m", " ", 
       RowBox[{
        RowBox[{"x", "''"}], "[", "t", "]"}]}], "\[Equal]", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"k", " ", 
         RowBox[{"x", "[", "t", "]"}]}], 
        SuperscriptBox[
         RowBox[{"(", 
          SqrtBox[
           RowBox[{
            SuperscriptBox[
             RowBox[{"x", "[", "t", "]"}], "2"], "+", 
            SuperscriptBox[
             RowBox[{"y", "[", "t", "]"}], "2"]}]], ")"}], 
         RowBox[{"1", "+", "\[Beta]"}]]]}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"eqy", ":=", 
     RowBox[{
      RowBox[{"m", " ", 
       RowBox[{
        RowBox[{"y", "''"}], "[", "t", "]"}]}], "\[Equal]", 
      FractionBox[
       RowBox[{
        RowBox[{"-", "k"}], " ", 
        RowBox[{"y", "[", "t", "]"}]}], 
       SuperscriptBox[
        RowBox[{"(", 
         SqrtBox[
          RowBox[{
           SuperscriptBox[
            RowBox[{"x", "[", "t", "]"}], "2"], "+", 
           SuperscriptBox[
            RowBox[{"y", "[", "t", "]"}], "2"]}]], ")"}], 
        RowBox[{"1", "+", "\[Beta]"}]]]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.874271026963332*^9, 3.874271137594345*^9}, {
  3.8742713121338873`*^9, 3.874271313883526*^9}, {3.874273039446535*^9, 
  3.8742730450448284`*^9}, {3.8742737537780094`*^9, 3.874273764558977*^9}},
 CellLabel->
  "In[518]:=",ExpressionUUID->"2a546c91-4d86-4629-8db8-c4524832fb3c"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "An\[AAcute]lise", " ", "do", " ", "movimento", " ", "circular", " ", 
   "uniforme", " ", 
   RowBox[{"(", "MCU", ")"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.87427463487431*^9, 3.874274647521547*^9}},
 CellLabel->
  "In[521]:=",ExpressionUUID->"9de903c0-9687-4dff-b619-994229740ea8"],

Cell[TextData[{
 "O movimento da part\[IAcute]cula ser\[AAcute] circular se a for\[CCedilla]a \
resultante (que, nesse caso, \[EAcute] simplesmente a for\[CCedilla]a \
atrativa de um corpo central) for a resultante centr\[IAcute]peta. Impondo \
essa condi\[CCedilla]\[ATilde]o de igualdade para \[Beta] = 2, temos:\n\n",
 Cell[BoxData[
  RowBox[{
   FractionBox["k", 
    SuperscriptBox["a", "2"]], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"m", " ", 
       SuperscriptBox["v", "2"]}], "a"], "\[Rule]", "v"}], "=", 
    SqrtBox[
     FractionBox["k", 
      RowBox[{"m", " ", "a"}]]]}]}]],ExpressionUUID->
  "e46d8b63-ac40-4e81-86dd-8bb65b2ec555"],
 ", sendo a o raio da trajet\[OAcute]ria circular.\n\n\[CapitalEAcute] \
importante lembrar, entretanto, que essa \[EAcute] a \
condi\[CCedilla]\[ATilde]o que o modulo da velocidade deve satisfazer, ou \
seja ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"|", 
     OverscriptBox["v", "\[RightVector]"], "|"}], "=", 
    SqrtBox[
     RowBox[{
      SuperscriptBox[
       SubscriptBox["v", "x"], "2"], "+", 
      SuperscriptBox[
       SubscriptBox["v", "y"], "2"]}]]}], TraditionalForm]],ExpressionUUID->
  "7d712658-cd62-4f92-9519-63e52e42daf9"],
 ". \nPara termos um movimento circular, ent\[ATilde]o, basta impor (por \
exemplo) ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["v", "x"], "[", 
     RowBox[{"t", "=", "0"}], "]"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"41e4d819-8997-4389-9944-741d92b18271"],
 " e ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["v", "y"], "[", 
     RowBox[{"t", "=", "0"}], "]"}], "=", 
    SqrtBox[
     RowBox[{"k", "/", 
      RowBox[{"(", 
       RowBox[{"m", " ", "a"}], ")"}]}]]}], TraditionalForm]],ExpressionUUID->
  "ba4fa5cd-4137-47bd-a4e4-835396583ba7"],
 ". Desse modo temos que ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    RowBox[{
     OverscriptBox["v", "\[RightVector]"], "[", 
     RowBox[{"t", "=", "0"}], "]"}], "|"}], TraditionalForm]],ExpressionUUID->
  "eb40d6cb-a437-4f89-a5a8-9c7f80df43c8"],
 "satisfaz a condi\[CCedilla]\[ATilde]o de movimento circular e, \
consequentemente, uma vez que estamos lidando com um sistema conservativo, ",
 StyleBox["concluimos",
  IgnoreSpellCheck->True],
 " que o movimento da part\[IAcute]cula ser\[AAcute] circular para todo \
instante de tempo.\n\nAl\[EAcute]m disso, para garantir que o raio do \
movimento seja efetivamente a quantidade ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "ec3c9f5c-bad7-44ec-a175-76e69260f7bb"],
 " descrita nas express\[OTilde]es anteriores, podemos impor ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"x", "[", 
     RowBox[{"t", "=", "0"}], "]"}], "=", "a"}], TraditionalForm]],
  ExpressionUUID->"57b58554-4ad0-4824-9f72-01242f74cf7f"],
 " e ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"y", "[", 
     RowBox[{"t", "=", "0"}], "]"}], "=", "0"}], TraditionalForm]],
  ExpressionUUID->"717e5c55-452e-4ea8-85be-46f211718889"],
 ".\n"
}], "Text",
 CellChangeTimes->{{3.8742713278093176`*^9, 3.874271735001358*^9}, {
   3.874271779384678*^9, 3.8742718770154963`*^9}, 3.8742727819667454`*^9, {
   3.8742730042301745`*^9, 3.8742730203943596`*^9}, {3.8742774683360443`*^9, 
   3.874277481876547*^9}},ExpressionUUID->"a4c4044d-1719-4411-9f81-\
8bab3352a4b0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Solu\[CCedilla]\[ATilde]o", " ", "num\[EAcute]rica", " ", "do", " ", 
    "sistema", " ", "de", " ", "equa\[CCedilla]\[OTilde]es"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"valuesAux", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"m", "\[Rule]", "1"}], ",", 
       RowBox[{"k", "\[Rule]", "1"}], ",", 
       RowBox[{"a", "\[Rule]", "1"}], ",", 
       RowBox[{"\[Beta]", "\[Rule]", "2"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sols", "=", 
     RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eqx", ",", "eqy", ",", 
          RowBox[{
           RowBox[{"x", "[", "0", "]"}], "\[Equal]", " ", "a"}], ",", 
          RowBox[{
           RowBox[{"y", "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", " ", 
           SqrtBox[
            RowBox[{"k", "/", 
             RowBox[{"(", 
              RowBox[{"m", " ", "a"}], ")"}]}]]}]}], "}"}], "/.", 
        "valuesAux"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"solsPlot", "=", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"x", "[", "t", "]"}], ",", 
        RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "sols"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Evaluate", "[", "solsPlot", "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", "10"}], "}"}], "\[IndentingNewLine]", ",", 
     RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{
     "PlotLabel", "\[Rule]", 
      "\"\<Trajet\[OAcute]ria de uma part\[IAcute]cula sob a\[CCedilla]\
\[ATilde]o de corpo central (caso MCU)\>\""}], "\[IndentingNewLine]", ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.874271739088953*^9, 3.8742717666996546`*^9}, {
   3.874271879781489*^9, 3.8742721014623847`*^9}, {3.8742721879690504`*^9, 
   3.8742722367024727`*^9}, {3.874272423358305*^9, 3.8742724240926056`*^9}, {
   3.874272463304412*^9, 3.8742725233043804`*^9}, {3.874272554936454*^9, 
   3.8742726144104085`*^9}, {3.8742726522205915`*^9, 3.874272676069065*^9}, {
   3.8742727962143116`*^9, 3.8742728068629775`*^9}, {3.8742728399711275`*^9, 
   3.874272847464723*^9}, {3.87427292316992*^9, 3.874272966045514*^9}, {
   3.8742730228506436`*^9, 3.8742730327280426`*^9}, {3.8742730839536324`*^9, 
   3.874273209638603*^9}, {3.8742733357462068`*^9, 3.8742733612894673`*^9}, {
   3.8742736591498194`*^9, 3.8742737192796125`*^9}, {3.874273771697757*^9, 
   3.874273772291314*^9}, 3.874273817753147*^9, {3.8742738533234744`*^9, 
   3.8742738928535757`*^9}, {3.8742743669203997`*^9, 
   3.8742746191687655`*^9}, {3.874275094515779*^9, 3.87427512209727*^9}, {
   3.8742752067393646`*^9, 3.8742752246849246`*^9}, {3.8742774615360193`*^9, 
   3.8742774919749527`*^9}},
 CellLabel->
  "In[522]:=",ExpressionUUID->"f799f147-8014-4442-adff-13888f9569f1"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], FaceForm[Opacity[
      0.3]], LineBox[CompressedData["
1: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
wldvlNeQ3rBFQGZ3XHgcGPsurmiRXmoYkqTwYDYWJvNLG+cmSW+9XzS/XT4G
kv/E1tqTnqpslPow3isKvG58mpwmvWVmd9PwkcFIyHI2l1YnPbXJ99WH8CM/
4JLUme/epKfaTQn6MzuFA3eI8N5C0oNYRKTlr9aHgqq6XEMH6Umb+GXz/AVD
QIa/5Xsn6VFinJ1y9ZZBsAVEXItJz4qJBLaFV9/gjryzlx/pYfTVB49OCnyF
I7zG2Vqkt50ujhczy/IBFYbD6xb/eZzWi8DXup8h7Lu92bt/nro54pnY5Eew
nBodW0N6IQ+TfZuk+Ds4b7bt7fV/3insf3yfuSP8rsuWiSZ5zW7hdhHlp1Bs
Gr+9+x/bzh+rcroJ1MKSDQv/OOZO64ykKjrTiR3/PDXep54vWPUhLl4QVaT9
47unT7U02yFfsLV7IcnnEkXCXhx0QZVdi5PO/673i7XixbQbVmkNP5QgeUY9
5VtSxydkPWy9MY9cb+Ox0x8Dznhj6drpktMki/Blqz4J9EWbp3nfg8n70xcY
tTy7NgCfB6l+Jsh4eBm/cJ26EYhKY9sjdpPsdkyIR+lGMLbvSGr556krrR4v
/tsaig2GGXvVyfiqEWtPYkEYlhzt9ZMh488R/4f/lnUEOrwY2i9A5mfN0Mrk
gkgkyt/17+n/l8+QOPtXTT9xo89AigfprYlVUfNq0rHYHsRQ/YP01OSLJk/9
hn9hjSF982ayXkofNViYqsTj8S0+tjdJb03mEDr3ZDEB8yrnygsopEfektl/
tyER2W4oJvz7P6h+to2BmtFJGLzeqaB0hIA9htTUOd0UHJP+/vDRAAHvTPOK
HNN/48mhvYLJbWQ9wcbWAMd0fPd+KfoE6ambNxxm+qGSgaYuzUbRpKd+7mnO
eNeViZ6eLBcuk+dC8fXi/TZrEA8prtdIIc+NfdoW21nKEImN1y4HkJ56fPxY
Xq5SLq79Wer2gPTUUTWOFzs252Gj05+Y9lQCdqmOGqoF52NQ9pqugkgCuv+c
pANTATb/0qnfEE56fNbrUBHzAuSqn+eQCSb3WynPm7JDhVhw18/iIXkOFuK1
vWWDRbhhh8OfgbcE6D04flSmvRQPer7+wmtC7qeaUyxXz5Sh9sNmxX3kOduq
VVHIMKgMY1eX7orokv3lR8rhk6blqOVxja9XjQDTgJg1+ycr8KFwz1OLkwT0
fIj2SWeswXVNj7gG2AiQOXB8NvVWDX5XXfDOYCL7UdXTgqCSGvxYsjnPbpUO
WdNvDQLka5Gu4bKvaooO9vuKUtNZ6pCj4kySYysd2pqLjQm3elRcO696JYgO
C2ZVfZfy6jFF9tPfa+Q8qRMM+/l9th4lt20/f8GDDmFaCdZchg2YYxmYM/iK
Dm63OSp0JRrRbk8p3yZDOmieVD/MWdmE74I2DZ3hokNcwLCcy2oTshjcUujd
QAdx7moYkWzGeea0qHuMdPi65YjWM79mZBLc4Cs7QYNE6eeD9bda0NtzR8V4
KQ3EMx8RSoutqBzMMyPyhJyvpXzTEeJteK9favjOXRr43Td0nTJqQxfpxxr+
xuQ8Pf66V6OwDbe9Z0/KVKZB8qjZXnG3drTauuS0yE+DjH0Rp6V5OpE9uumr
XS4VGmteCvns6kHBW9EZNbMUCGB97O+g1oPrr5lWJ41SoHtl96q2XQ9umuA4
4txBAT+xGAbs6EH1sQfbxnMpsOVe+KFc5V4UOScBFa4UUDDhmtVi6MOHZixB
FF4KrPZx2N0w60cimzFp/MA43HrG91rHrh8179RM3uUfh79KXA7g1Y/u56yL
2tnHoZq+gXcU+1E9QUbHgT4Gwxn5gl+5BrDR0lNv+tcYTHmPHLXOG0DPmLXF
1gfG4NksveTLhiGsh5D4s7yj0MSjKmS1cwjdDp5qSmcdhfdDc6/PSw5h+w++
E7v/jkDE1NpTaTpDWOhrNVLfMgLj8qW8TCFDeCjSadnWawSq1CXydx0dxpgV
AVF+thGgDhhRWVVHkHfiaXcLbQjiLFcTDhmNYO6GjEsfO4aAxfvzzguWI/i6
oknzRNkQNFN+lqp6jqBsbrjKrbAhIIYJiZimEXx4Kf+ogO4QXHgifTHi2ih+
41Yd5S8YhPYtW6M0tMewL/rex4j3A/CWnau733QM34zdTd3+ZAD637VkX386
hrKNDvV2xgPgz7FeY6/vGJaI6ezdKTUAiWd4bFtaxxBjg9dmdPXDHvO/uUna
4yj6eIOs6YF+uLDccILXdBxdN87sXMPVDzG/5SMsHo+jwCDDhNtqH7Sr5op3
fB7HvuS7Ua/q+8DiZn1hTc04bli4oF7xtA+qXrLGccpR0G+vZjYreb6QjAhR
V9CkYPlQ7rP2yF7QvGB26qYxBQvP1kkEfuoFvusVBddtKbg/kVq17mYvnNLT
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
       "]]},
     Annotation[#, "Charting`Private`Tag$46755#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->{{Medium, 
     GrayLevel[0]}, {Medium, 
     GrayLevel[0]}},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Medium,
  LabelStyle->GrayLevel[0],
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotLabel->FormBox[
   "\"Trajet\[OAcute]ria de uma part\[IAcute]cula sob a\[CCedilla]\[ATilde]o \
de corpo central (caso MCU)\"", TraditionalForm],
  PlotRange->{{-0.9999996987046329, 1.}, {-0.9999993189419824, 
   0.9999995751999937}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.8742725554201016`*^9, 3.874272585433235*^9}, 
   3.874272616039579*^9, {3.874272662690542*^9, 3.874272676584147*^9}, 
   3.8742728479173183`*^9, 3.8742729246227026`*^9, 3.874272974167646*^9, 
   3.874273054899604*^9, 3.874273084922152*^9, 3.874273210122861*^9, 
   3.8742733643309584`*^9, {3.8742736987093725`*^9, 3.874273720622794*^9}, {
   3.874273773665988*^9, 3.874273783179223*^9}, {3.8742738810447245`*^9, 
   3.8742738933690324`*^9}, {3.8742743535043373`*^9, 
   3.8742744331322107`*^9}, {3.8742744955962324`*^9, 3.874274506561981*^9}, 
   3.8742745410737247`*^9, {3.8742745884501696`*^9, 3.874274619626175*^9}, {
   3.8742752079023314`*^9, 3.8742752252785325`*^9}, {3.874277488557009*^9, 
   3.874277492523543*^9}, 3.8742775802003193`*^9, 3.874277686614215*^9, 
   3.8742778479097085`*^9, 3.8742787923354*^9, 3.8742790293770056`*^9, 
   3.874598433837678*^9, 3.8745990292207804`*^9, 3.8746000002892103`*^9, 
   3.8746005328452525`*^9, 3.874600609907976*^9, 3.8746007569507008`*^9},
 CellLabel->
  "Out[525]=",ExpressionUUID->"e1b83eb9-79bc-460b-8884-51cbe0f7544a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Fa\[CCedilla]o", " ", "uma", " ", "an\[AAcute]lise", " ", "da", " ", 
     "mesma", " ", "configura\[CCedilla]\[ATilde]o", " ", "do", " ", 
     "sistema"}], ",", " ", 
    RowBox[{
    "mas", " ", "para", " ", "diferentes", " ", "condi\[CCedilla]\[OTilde]es",
      " ", "iniciais"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{" ", "0", ")"}], " ", 
     RowBox[{"x", "[", "0", "]"}]}], "=", " ", 
    RowBox[{
     RowBox[{"a", " ", "/", " ", 
      RowBox[{"y", "[", "0", "]"}]}], "=", " ", 
     RowBox[{
      RowBox[{"0", " ", "/", " ", 
       RowBox[{
        SubscriptBox["v", "x"], "[", "0", "]"}]}], "=", " ", 
      RowBox[{
       RowBox[{"0", " ", "/", " ", 
        RowBox[{
         SubscriptBox["v", "y"], "[", "0", "]"}]}], "=", " ", 
       SqrtBox[
        RowBox[{"k", "/", 
         RowBox[{"(", 
          RowBox[{"m", " ", "a"}], ")"}]}]]}]}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sols", "=", 
     RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eqx", ",", "eqy", ",", 
          RowBox[{
           RowBox[{"x", "[", "0", "]"}], "\[Equal]", " ", "a"}], ",", 
          RowBox[{
           RowBox[{"y", "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", " ", 
           SqrtBox[
            RowBox[{"k", "/", 
             RowBox[{"(", 
              RowBox[{"m", " ", "a"}], ")"}]}]]}]}], "}"}], "/.", 
        "valuesAux"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"curva0", "=", 
     RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "sols"}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Trajet\[OAcute]ria de uma part\[IAcute]cula sob a\[CCedilla]\
\[ATilde]o de corpo central\>\""}], "\[IndentingNewLine]", ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "Black", "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{"{", "\"\<MCU\>\"", "}"}]}]}], "\[IndentingNewLine]", "]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{" ", "1", ")"}], " ", 
      RowBox[{"x", "[", "0", "]"}]}], "=", " ", 
     RowBox[{
      RowBox[{"0", " ", "/", " ", 
       RowBox[{"y", "[", "0", "]"}]}], "=", " ", 
      RowBox[{
       RowBox[{"a", " ", "/", " ", 
        RowBox[{
         SubscriptBox["v", "x"], "[", "0", "]"}]}], "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["2"]]}], 
         RowBox[{
          SqrtBox[
           FractionBox["k", 
            RowBox[{"m", " ", "a"}]]], " ", "/", " ", 
          RowBox[{
           SubscriptBox["v", "y"], "[", "0", "]"}]}]}], "=", " ", 
        RowBox[{
         FractionBox["1", 
          SqrtBox["2"]], 
         SqrtBox[
          FractionBox["k", 
           RowBox[{"m", " ", "a"}]]]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sols", "=", 
     RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eqx", ",", "eqy", ",", 
          RowBox[{
           RowBox[{"x", "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
          RowBox[{
           RowBox[{"y", "[", "0", "]"}], "\[Equal]", " ", "a"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", 
              SqrtBox["2"]]}], 
            SqrtBox[
             FractionBox["k", 
              RowBox[{"m", " ", "a"}]]]}]}], " ", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", 
           RowBox[{
            FractionBox["1", 
             SqrtBox["2"]], 
            SqrtBox[
             FractionBox["k", 
              RowBox[{"m", " ", "a"}]]]}]}]}], "}"}], "/.", "valuesAux"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"curva1", "=", 
     RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "sols"}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Trajet\[OAcute]ria de uma part\[IAcute]cula sob a\[CCedilla]\
\[ATilde]o de corpo central\>\""}], "\[IndentingNewLine]", ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "Green", "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<x[0] = 0, y[0] = a, \!\(\*SubscriptBox[\(v\), \(x\)]\)[0] = \
-(1/\!\(\*SqrtBox[\(2\)]\))\!\(\*SqrtBox[\(k/\((m\\\ a)\)\)]\) , \
\!\(\*SubscriptBox[\(v\), \(y\)]\)[0] = \
(1/\!\(\*SqrtBox[\(2\)]\))\!\(\*SqrtBox[\(k/\((m\\\ a)\)\)]\)\>\"", "}"}]}]}],
       "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{" ", "2", ")"}], " ", 
      RowBox[{"x", "[", "0", "]"}]}], "=", " ", 
     RowBox[{
      RowBox[{"a", " ", "/", " ", 
       RowBox[{"y", "[", "0", "]"}]}], "=", " ", 
      RowBox[{
       RowBox[{"0", " ", "/", " ", 
        RowBox[{
         SubscriptBox["v", "x"], "[", "0", "]"}]}], "=", 
       RowBox[{
        RowBox[{
         FractionBox["1", 
          SqrtBox["2"]], 
         RowBox[{
          SqrtBox[
           FractionBox["k", 
            RowBox[{"m", " ", "a"}]]], " ", "/", " ", 
          RowBox[{
           SubscriptBox["v", "y"], "[", "0", "]"}]}]}], "=", 
        RowBox[{
         FractionBox["1", 
          SqrtBox["2"]], 
         SqrtBox[
          FractionBox["k", 
           RowBox[{"m", " ", "a"}]]]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sols", "=", 
     RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eqx", ",", "eqy", ",", 
          RowBox[{
           RowBox[{"x", "[", "0", "]"}], "\[Equal]", " ", "a"}], ",", 
          RowBox[{
           RowBox[{"y", "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", " ", 
           RowBox[{
            FractionBox["1", 
             SqrtBox["2"]], 
            SqrtBox[
             FractionBox["k", 
              RowBox[{"m", " ", "a"}]]]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", 
           RowBox[{
            FractionBox["1", 
             SqrtBox["2"]], 
            SqrtBox[
             FractionBox["k", 
              RowBox[{"m", " ", "a"}]]]}]}]}], "}"}], "/.", "valuesAux"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"curva2", "=", 
     RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "sols"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Trajet\[OAcute]ria de uma part\[IAcute]cula sob a\[CCedilla]\
\[ATilde]o de corpo central\>\""}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "Red", "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<x[0] = a, y[0] = 0, \!\(\*SubscriptBox[\(v\), \(x\)]\)[0] = \
(1/\!\(\*SqrtBox[\(2\)]\))\!\(\*SqrtBox[\(k/\((m\\\ a)\)\)]\) , \
\!\(\*SubscriptBox[\(v\), \(y\)]\)[0] = \
(1/\!\(\*SqrtBox[\(2\)]\))\!\(\*SqrtBox[\(k/\((m\\\ a)\)\)]\)\>\"", "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{" ", "3", ")"}], " ", 
      RowBox[{"x", "[", "0", "]"}]}], "=", " ", 
     RowBox[{
      RowBox[{"a", " ", "/", " ", 
       RowBox[{"y", "[", "0", "]"}]}], "=", " ", 
      RowBox[{
       RowBox[{"0", " ", "/", " ", 
        RowBox[{
         SubscriptBox["v", "x"], "[", "0", "]"}]}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["2"]]}], 
         RowBox[{
          SqrtBox[
           FractionBox["k", 
            RowBox[{"m", " ", "a"}]]], " ", "/", " ", 
          RowBox[{
           SubscriptBox["v", "y"], "[", "0", "]"}]}]}], "=", 
        RowBox[{
         FractionBox["1", 
          SqrtBox["2"]], 
         SqrtBox[
          FractionBox["k", 
           RowBox[{"m", " ", "a"}]]]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sols", "=", 
     RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eqx", ",", "eqy", ",", 
          RowBox[{
           RowBox[{"x", "[", "0", "]"}], "\[Equal]", " ", "a"}], ",", 
          RowBox[{
           RowBox[{"y", "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", " ", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", 
              SqrtBox["2"]]}], 
            SqrtBox[
             FractionBox["k", 
              RowBox[{"m", " ", "a"}]]]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", 
           RowBox[{
            FractionBox["1", 
             SqrtBox["2"]], 
            SqrtBox[
             FractionBox["k", 
              RowBox[{"m", " ", "a"}]]]}]}]}], "}"}], "/.", "valuesAux"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"curva3", "=", 
     RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "sols"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Trajet\[OAcute]ria de uma part\[IAcute]cula sob a\[CCedilla]\
\[ATilde]o de corpo central\>\""}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "Orange", "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<x[0] = a, y[0] = 0, \!\(\*SubscriptBox[\(v\), \(x\)]\)[0] = \
-(1/\!\(\*SqrtBox[\(2\)]\))\!\(\*SqrtBox[\(k/\((m\\\ a)\)\)]\) , \
\!\(\*SubscriptBox[\(v\), \(y\)]\)[0] = \
(1/\!\(\*SqrtBox[\(2\)]\))\!\(\*SqrtBox[\(k/\((m\\\ a)\)\)]\)\>\"", "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{" ", "4", ")"}], " ", 
      RowBox[{"x", "[", "0", "]"}]}], "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "a"}], " ", "/", " ", 
       RowBox[{"y", "[", "0", "]"}]}], "=", " ", 
      RowBox[{
       RowBox[{"0", " ", "/", " ", 
        RowBox[{
         SubscriptBox["v", "x"], "[", "0", "]"}]}], "=", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["2"]]}], 
         RowBox[{
          SqrtBox[
           FractionBox["k", 
            RowBox[{"m", " ", "a"}]]], " ", "/", " ", 
          RowBox[{
           SubscriptBox["v", "y"], "[", "0", "]"}]}]}], "=", " ", 
        RowBox[{
         RowBox[{"-", 
          FractionBox["1", 
           SqrtBox["2"]]}], 
         SqrtBox[
          FractionBox["k", 
           RowBox[{"m", " ", "a"}]]]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sols", "=", 
     RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eqx", ",", "eqy", ",", 
          RowBox[{
           RowBox[{"x", "[", "0", "]"}], "\[Equal]", " ", 
           RowBox[{"-", "a"}]}], ",", 
          RowBox[{
           RowBox[{"y", "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "  ", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", 
              SqrtBox["2"]]}], 
            SqrtBox[
             FractionBox["k", 
              RowBox[{"m", " ", "a"}]]]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "  ", 
           RowBox[{
            RowBox[{"-", 
             FractionBox["1", 
              SqrtBox["2"]]}], 
            SqrtBox[
             FractionBox["k", 
              RowBox[{"m", " ", "a"}]]]}]}]}], "}"}], "/.", "valuesAux"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"curva4", "=", 
     RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "sols"}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Trajet\[OAcute]ria de uma part\[IAcute]cula sob a\[CCedilla]\
\[ATilde]o de corpo central\>\""}], "\[IndentingNewLine]", ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "Purple", "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<x[0] = -a, y[0] = 0, \!\(\*SubscriptBox[\(v\), \(x\)]\)[0] \
= -(1/\!\(\*SqrtBox[\(2\)]\))\!\(\*SqrtBox[\(k/\((m\\\ a)\)\)]\) , \
\!\(\*SubscriptBox[\(v\), \(y\)]\)[0] = \
-(1/\!\(\*SqrtBox[\(2\)]\))\!\(\*SqrtBox[\(k/\((m\\\ a)\)\)]\)\>\"", 
         "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8742746854528236`*^9, 3.8742751665731163`*^9}, {
   3.8742752342897816`*^9, 3.8742752407085323`*^9}, {3.8742754393931417`*^9, 
   3.8742754782213883`*^9}, {3.874275532272094*^9, 3.874275544995187*^9}, {
   3.874275596718007*^9, 3.8742757372663207`*^9}, {3.87427579082135*^9, 
   3.8742760029452257`*^9}, {3.874276364979143*^9, 3.8742764447998447`*^9}, {
   3.874276510291631*^9, 3.8742765642049646`*^9}, {3.874276745792925*^9, 
   3.8742767477775354`*^9}, {3.8742767859455495`*^9, 3.874276947479185*^9}, {
   3.874276980081461*^9, 3.8742770201553574`*^9}, {3.874277496306232*^9, 
   3.8742775740931826`*^9}, {3.8742778088149004`*^9, 
   3.8742778088904896`*^9}, {3.874277963353159*^9, 3.874277989844408*^9}, {
   3.8742781039452176`*^9, 3.874278104067237*^9}, {3.874278136074684*^9, 
   3.874278212687601*^9}, {3.874598530922891*^9, 3.874598553839846*^9}, {
   3.8746004055429525`*^9, 3.874600496516081*^9}, {3.874600560258915*^9, 
   3.874600588776392*^9}, {3.8746006337276382`*^9, 3.8746007152675147`*^9}, 
   3.874600809385909*^9},ExpressionUUID->"085ae5a2-37f0-4df3-904c-\
29e904ab319c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
  "curva0", "\[IndentingNewLine]", ",", "curva1", "\[IndentingNewLine]", ",", 
   "curva2", "\[IndentingNewLine]", ",", "curva3", "\[IndentingNewLine]", ",",
    "curva4", "\[IndentingNewLine]", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8742754815879397`*^9, 3.874275505751069*^9}, {
  3.874275549903087*^9, 3.8742755536148987`*^9}, {3.8742757408612456`*^9, 
  3.8742757646042676`*^9}, {3.8742765713868427`*^9, 3.874276589528653*^9}, {
  3.8742768983235984`*^9, 3.8742768986703625`*^9}, {3.8742769520412893`*^9, 
  3.874276974338457*^9}, {3.8742781311807117`*^9, 3.8742781338330927`*^9}},
 CellLabel->
  "In[536]:=",ExpressionUUID->"4d2c040f-2f85-455d-9620-2b18c328d632"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           GrayLevel[0]], 
          LineBox[CompressedData["
1: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
wldvlNeQ3rBFQGZ3XHgcGPsurmiRXmoYkqTwYDYWJvNLG+cmSW+9XzS/XT4G
kv/E1tqTnqpslPow3isKvG58mpwmvWVmd9PwkcFIyHI2l1YnPbXJ99WH8CM/
4JLUme/epKfaTQn6MzuFA3eI8N5C0oNYRKTlr9aHgqq6XEMH6Umb+GXz/AVD
QIa/5Xsn6VFinJ1y9ZZBsAVEXItJz4qJBLaFV9/gjryzlx/pYfTVB49OCnyF
I7zG2Vqkt50ujhczy/IBFYbD6xb/eZzWi8DXup8h7Lu92bt/nro54pnY5Eew
nBodW0N6IQ+TfZuk+Ds4b7bt7fV/3insf3yfuSP8rsuWiSZ5zW7hdhHlp1Bs
Gr+9+x/bzh+rcroJ1MKSDQv/OOZO64ykKjrTiR3/PDXep54vWPUhLl4QVaT9
47unT7U02yFfsLV7IcnnEkXCXhx0QZVdi5PO/673i7XixbQbVmkNP5QgeUY9
5VtSxydkPWy9MY9cb+Ox0x8Dznhj6drpktMki/Blqz4J9EWbp3nfg8n70xcY
tTy7NgCfB6l+Jsh4eBm/cJ26EYhKY9sjdpPsdkyIR+lGMLbvSGr556krrR4v
/tsaig2GGXvVyfiqEWtPYkEYlhzt9ZMh488R/4f/lnUEOrwY2i9A5mfN0Mrk
gkgkyt/17+n/l8+QOPtXTT9xo89AigfprYlVUfNq0rHYHsRQ/YP01OSLJk/9
hn9hjSF982ayXkofNViYqsTj8S0+tjdJb03mEDr3ZDEB8yrnygsopEfektl/
tyER2W4oJvz7P6h+to2BmtFJGLzeqaB0hIA9htTUOd0UHJP+/vDRAAHvTPOK
HNN/48mhvYLJbWQ9wcbWAMd0fPd+KfoE6ambNxxm+qGSgaYuzUbRpKd+7mnO
eNeViZ6eLBcuk+dC8fXi/TZrEA8prtdIIc+NfdoW21nKEImN1y4HkJ56fPxY
Xq5SLq79Wer2gPTUUTWOFzs252Gj05+Y9lQCdqmOGqoF52NQ9pqugkgCuv+c
pANTATb/0qnfEE56fNbrUBHzAuSqn+eQCSb3WynPm7JDhVhw18/iIXkOFuK1
vWWDRbhhh8OfgbcE6D04flSmvRQPer7+wmtC7qeaUyxXz5Sh9sNmxX3kOduq
VVHIMKgMY1eX7orokv3lR8rhk6blqOVxja9XjQDTgJg1+ycr8KFwz1OLkwT0
fIj2SWeswXVNj7gG2AiQOXB8NvVWDX5XXfDOYCL7UdXTgqCSGvxYsjnPbpUO
WdNvDQLka5Gu4bKvaooO9vuKUtNZ6pCj4kySYysd2pqLjQm3elRcO696JYgO
C2ZVfZfy6jFF9tPfa+Q8qRMM+/l9th4lt20/f8GDDmFaCdZchg2YYxmYM/iK
Dm63OSp0JRrRbk8p3yZDOmieVD/MWdmE74I2DZ3hokNcwLCcy2oTshjcUujd
QAdx7moYkWzGeea0qHuMdPi65YjWM79mZBLc4Cs7QYNE6eeD9bda0NtzR8V4
KQ3EMx8RSoutqBzMMyPyhJyvpXzTEeJteK9favjOXRr43Td0nTJqQxfpxxr+
xuQ8Pf66V6OwDbe9Z0/KVKZB8qjZXnG3drTauuS0yE+DjH0Rp6V5OpE9uumr
XS4VGmteCvns6kHBW9EZNbMUCGB97O+g1oPrr5lWJ41SoHtl96q2XQ9umuA4
4txBAT+xGAbs6EH1sQfbxnMpsOVe+KFc5V4UOScBFa4UUDDhmtVi6MOHZixB
FF4KrPZx2N0w60cimzFp/MA43HrG91rHrh8179RM3uUfh79KXA7g1Y/u56yL
2tnHoZq+gXcU+1E9QUbHgT4Gwxn5gl+5BrDR0lNv+tcYTHmPHLXOG0DPmLXF
1gfG4NksveTLhiGsh5D4s7yj0MSjKmS1cwjdDp5qSmcdhfdDc6/PSw5h+w++
E7v/jkDE1NpTaTpDWOhrNVLfMgLj8qW8TCFDeCjSadnWawSq1CXydx0dxpgV
AVF+thGgDhhRWVVHkHfiaXcLbQjiLFcTDhmNYO6GjEsfO4aAxfvzzguWI/i6
oknzRNkQNFN+lqp6jqBsbrjKrbAhIIYJiZimEXx4Kf+ogO4QXHgifTHi2ih+
41Yd5S8YhPYtW6M0tMewL/rex4j3A/CWnau733QM34zdTd3+ZAD637VkX386
hrKNDvV2xgPgz7FeY6/vGJaI6ezdKTUAiWd4bFtaxxBjg9dmdPXDHvO/uUna
4yj6eIOs6YF+uLDccILXdBxdN87sXMPVDzG/5SMsHo+jwCDDhNtqH7Sr5op3
fB7HvuS7Ua/q+8DiZn1hTc04bli4oF7xtA+qXrLGccpR0G+vZjYreb6QjAhR
V9CkYPlQ7rP2yF7QvGB26qYxBQvP1kkEfuoFvusVBddtKbg/kVq17mYvnNLT
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
           "]]}, 
         Annotation[#, "Charting`Private`Tag$46832#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0, 1, 0]], 
          LineBox[CompressedData["
1:eJxd2nc4Vu8bAHCpjKjMyohKaVmJUuSOCqUdRWVkj5B2KimiSEokIxFRSCEj
4bZnNu+LKPsd1rtOVMrvfP/9dV398bke53mfc849nnNdz2o7r+OO/Hx8fPwL
yP98//+PBZmL1jcuqjyHYpoqEn1CLLiermm9sNIb758usPwozoKC6yk1UxV3
8VtB+8sdSiy4ZHqoIqbiKV43HVTq2seC5l10z6PlifjUz2f74YcsWCNy1OpC
cRa+k3gjaS/MhsisiWjOgWzUOMd/XkacDfLqzFj3rmx8JiawoWYFGzS75osY
cHNw05ktE0Ib2LBmId3j0oY8XBqd+0LZiA0j7NyDNU8K0TKiO6XVjw2GO5/b
MdLLcLAj69RKFhvcNz58XTNdho8HJ+/bTLNhWStlNG5POTrkZhS8+MeGflr8
cpVv5Thfs/IwS5QDkuUbnXuEK9E3vlxdeyMHQjJ75e0cq/HFOly30pYDielC
HwOlGtBk8TneyxoO8P3RLZWxacBzMq1xLY0cKEwRVUt814A9kyuN/7RzYJPx
t95H+l/RLTGsWKefA/dDq9M6nRsx8t88wmyGA9+FncoUCpqRODXv3or1XGj/
Ovs1fH0b7m+ef+uXLxd2tu7+m7q/Dalhfa79/lzoeLvzUL57Gx6df1Wi7AEX
+ot26VR+IMcrP6Z4hXPBYLL+4/Pt7bjyi6fVvTdcOLb1yEJZow48nHRq7m49
F+bv8jS8aU3BsxCWLCTGg9vcLQ8b7lCQLzkrRF2KB4Nieg7SiRSkHRrPP7qC
B28k99RGDlHQv9Fj6u4qHkj3NwyYuFCxb7bJOEGDB+MrAw2vXOjCfmH3n81H
eDCtTb3ffLMHCQpTUDqYB5qP1yW9je3BW6pGt3xCeeCyR0Hj5pcetFmS9b3n
CQ9WP3F+LPqnB1uOmfo8iuLBUYFRif4b39A9vtU+J5kHmQmL+Uyu9mJjVNZ7
iRIeXKYVhS9y+44b6KlVmyd4IK7u3C368Dtek49q5E3xIOVC5h6ht9/xw0Wd
1Z85PHgem+vDHPmO88Kt8rbO8GBnxYTO2XM/kMcQG2LxE+D4TyHmxuZ+LDhb
Gx66nABa6q/BCwoDyOnzk7TbRcCvtR+U6tQGcIGA7vU6IMDzru32lTCAblfY
2ZsNCfhQ7dheYDOAbav08vqNCNjqsLa0OGEA1+76brT4KAFf3hT7/109iMdO
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
           "]]}, 
         Annotation[#, "Charting`Private`Tag$46918#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, "Charting`Private`Tag$47004#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[1, 0.5, 0]], 
          LineBox[CompressedData["
1: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
Y/bya5zPNEgvYaMA3xtno/utwUgnTrRqtLfCCzmO+YiAKPx9aMZywb0Vpj5Y
J67vi8GNQbk7hAxboblalmNBOgHfEds+lpB5JG8WXrS99jsazveu8K1rgQ9+
HjmFUxloXSFwrHCpGY7NvlDV88/C+S2m8L20GS5++NY9JZGDvBimze3TDDqx
VrfjbuThcsDcI8GNzSC5semTGSsff2ZefFfb2gTKKXuLXnsi/nfme994UBNQ
mzaPJ+gWYaD0JTavDU3g7O/5pnZzMbo3HfNZVdsIsyHn32l2FON/Dj/Sltwb
YexeZPa/a6Xo7uZ7AUcaQPnVkf5/GhWov7JFeZTMk7JmKadm7krUnt8/mk6t
BaZpgASzoRItp+pPKe2thT1JGaK5WtW4W2Hoxlh2NTgIxwzJrqzBfTqKp478
rQKjne01Cbk1uEYtcMpHqQqGDtp6bBWpw2r/5Xu1eRXwxnHoNVFTh+5vUKt/
thwM896dcH5Sj0b1Lhz3D5ZD6u7r/VcLGtDobNkhyZBSMNWN3MG2sQkPr+de
+UirCITZutbbX23CxgbuFMbjQvCp9dQQ/tyElhXZGeeOIUj077g+IdaMLnW8
lTXluXD/KMpsMm/GCZviebm1P2FAUl3rXmIzSvAdLufWzgbVKCX0292CPNsm
sourfsCFlrh6k+st+H7w68q1K9PhfHCwuVlwC7J7Tq3wUUyFwjtqR3nYWnFB
oJs2bvAVqPW8MrsKW/Fovs6oKTMUQjp+nKWMtmLbig69NbmB4IhxczQBChZs
LxK7uMITig784Om7TcEp++CUOb+7OLTTlovwouCRP1rrtK68xP0rEmOskij4
Y3anes3tN+j5xSrv+yQFk9W+Wzc1R6JCz3l2Nx4qnu0SfG70Iho7fZdtKBJU
dL6RMMMuGI8hddZGm29RMXWsd6uTxneUbX9+dKMjFbUu/TaYG0/BlzNm9C+B
VMSqLY3RmWn40CSktTifiqEB7orPVTOxhueCg24TFav+e5jvvTobzdS3NL7r
p+KxSRUjuboc7BKcexrKouJd7fUnHfxzMXST8/obK2j4XbXI5eT5fJR+E8E/
xkfD+hmLS7brEV87pLJp7qDhHaejM96mhXipsEvW+QANDfeNxHqqFuFPpu8a
f1kainHcO/V1ZzHekBX44aZMw4jjCjJTy8X4eH2ogZEmDZu7zulfaC/BlJYV
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
oMP9v1xqh38RWM4TxXiUQAeVXrk2Q9LfrQZEnDPosPHb+2UX0gnPNO3di+lw
5ZNLVhTp+gFd5qsGcjw5KpyFpEsdn/m96qQDPUl+4hfpGjnNMy8ZdJhe+GHJ
JK1/TH6v0ywdZLs4PVd1EBiXXL3DmoMBO66/UPjfecmh1S4KxhsYkHvazncP
6agqqs1ZIQYQ4ocdD5KeC9GtPSrOgN9m/60+Rrpd4bHyVlkG9IpJy/7vfKZF
dE7LggoDlq+v4/yfFdrj3KjnGcBV3unwv/Oe1lx52snXGUCfHAmQJH3Y8enR
l/cZ0CDnrL2bdF+oicwlOwY41HemCJC+NTKvu+slA+6maOX97/zm1fV5XqMB
DBBK5Xk4RT6PY8XBXykfGXDd7l5jG+nWsWaVR4kMuOMS1pFPmtdGvPxQFgNE
BQffRpJOMs8yZpQwwMfe888z0rqLi3yRjQxIfI8bDEjzmzztPN/FgNVXq2lS
pDP+/Mj7y2BAq0P/+ZX/O88pdTA9YZYBwr6nn/1v/pje91CHYwQEOcVvxJDm
jx7qmVo/AsZQxbIinbJfYrO/4AhsuW94SuZ/53U/8hXisRFYSRXjzCXjJ04r
V1r31Ah0TDa62pOm9hzL7NEZgf5UhczDpDOqvhHTd0fgafdOg49kfG6XT062
sRmBC9bLldqk7cv8n864jgDb4rWFP2S8Xy+ZUxoMHYEqr2uf/ndeucDXXUE/
bgQ2Hrq4dZLMly87/6pWpI3AF16XK/6kBT/kuYXWjIAW8O0vJ/NrWrz6A8/y
CCyVWB7nJvMvh1beYblmFETenKv1JfNTz0zvceXmUVDO7P7ARTpdOTLuweFR
uPOnfIFF5vf1gpB1HndHQaezoO0Tmf/jz+Ln0GYUGor4XdlJb1vSPkY8HwXZ
CjtrY7J+vKnrjr0QPgr/cSxK89YS2DgYodncOArMLaU31Mj60zE1lj3UNQpy
ZoZPvMl6FXG21WZ2ZBTal1f1VFeQ9fLyZDPnyjH49pUnS6mcwP8LIAPf/Nhh
1BbyOOw/XSaCkQDD9b8NUPUw5J/sP3POICHSu/W/atKwLa2s7D+AphgZ3Lr1
v8V/+21xuew/betCeuK59b/msre269LsP1uBSn3kt/W/fOkUV6cF7T8BIaWp
vbP1vyDvIkU6au0/J/Kns8Wq9b/8RrUut3btP8zZldWWqfW/rvSoUS+D7T/0
RZ10ZKj1vwxRIkERnO0/VHDKLvWl9b/lZ1O0m83tPy85HLXsoPW/U6SrWsov
7j8pUPYRNZb1v96nVwsqO+4/yeRyqOaU9b9MPHKKhUbuP0rohkCVk/W/NJDQ
8S9d7j/UBCh56ZD1v0rNNFZSiu4/hVoGJm6L9b+M7gL9zOPuP8eLaTnpf/W/
YOAdVOnu7j/qgbZWa371v6HTBHEB+u4/pL4MhOp89b83XQb6JBDvP4wYVxLg
efW/+jN4OTk87z/6esgVqHP1v4DbT/KVk+8/ciPkeKxm9b8rWAFkbp7vP4ph
gP7/ZPW/xFChkkKp7z+S+dmhUGP1v4FBbCTevu8/1pEZRelf9b/jUVsK4unv
P7Ky8hT4WPW/V9UMMI4f8D+oNRiRjEr1v7XJ0ZMrc/A/4dnEkJYr9b8kUmpe
7HjwP09fvs1SKfW/XjOXdap+8D+e3nmSCyf1v1H2AYgeivA/cSxkt3Ii9b8C
gFgx5qDwP0ksD4wXGfW/oGoQN/PN8D/HEv5FvAX1v/Y3QQgBJvE/Oe3O9njc
9L+zseSQaivxP2s/viDI2fS/4XU0WNEw8T8RWiHyE9f0vzYfCKGWO/E/jAL/
jqHR9L+0pLgOAFHxP4x+D8uUxvS/FCTx8k178T98bJ4Z3K/0v/8KNi+LgPE/
30grKfas9L+9Ob6ixYXxP/B5v+4MqvS/+HuyLTKQ8T/lKoefMKT0v2XGzcXp
pPE/5MkpsFCY9L/ofdKuEKrxP7bAjIhQlfS/GqlFyzSv8T8nsfUdTZL0vypa
hpx0ufE/Y1VKgzyM9L9Ff1pQkL7xP/WR7FQvifS/7lWqNanD8T/y2gHnHob0
v91L+Eu/yPE/AZVjOguD9L/gc8aS0s3xPwNm6k/0f/S/p2UekQ==
           "]]}, 
         Annotation[#, "Charting`Private`Tag$47090#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.5, 0, 0.5]], 
          LineBox[CompressedData["
1:eJw1m3c4Vv8bx6UyorLLiKS07ChFTkZmO0Jlb0IqkkqKKEKJZCQiCvmGjITb
ntk8j539DOtZJ5Ly+/THr+vqunpdZzjjvt/v9+18krb3vuDEzsbGxr4B/WX7
/x8a/P9ffCpyAiNcNMjbtLdtU50dPL5cavmZnwb+OSrWG+t8YKi0581RGRqU
+mc2LtY+BH+TCZn+kzS4aXK6NrH2BbwICjhy5ikNOo6Tvc7VpMFHgfeCDtx0
2MVzzup6RT4o2bFfE+WnQ1z+fALDuABe8nHsa9xOBwlFapJHfwEcuKI8z7WP
Dir963m0mYWwNaHotaw+On4j2fPmvmKwjB3I7AqiwzS96FTj8zKY6M0330Gj
g86xV/aUnGqImlh4bLNEB4/9T981LlWDY1Fu6eu/dBDpIswk69bAepW6MzRe
BoyRUrbJDdVAYEqNotp+BgjW7HcZ5K6D13tgzw5bBkTkDUvYOzWA4WY71ptG
BqTlcH0OFWoFO9Gu5M42BrD91qgStWmFwYUdBr97GFCWyauQ9rEV3NOiK9TH
GHDAYGj4mdZ3iPu7DjddZsDjyIbsPpc2wM3XPdq+lwmj3M7VkqUdYNSx/t6v
QCb0fF/9HrO3G4jRI25jwUw41nXiT5ZRN5xb7ydQ/YQJvR+OnS7xQNvrPmd6
xzBhrPy4et1/3bDjm5fVo/dM0F5o+fzqSA+cSTdfe9jChPOHzm4U0++Fq1h0
BhcfC9Yf99K5a00Atoz8CEUhFtxnKj9tfUAA0um5knPbWTDBp+konEaA4DbP
xYc7WfBeULcpbpIAI6vtBqlKLBAeax03dCXCGLfHz46zLJjbEarje70fcAKV
UzicBUtqxMcddwfhnrz+vYBIFqhE7Un/kDQINlvyRwefs8BVV1Lp7rdB6Dxv
EvAsngXSz12ieH8PgkdKl0NhBgvOccwIjN0Zgrb4/E8ClSzIS93MZug3DPvI
WfUH51lwi1Qes8l9FG5LxLexFlnAr+gywPt0FP67oS79lcGCzOt5ulwfRmFd
jFXxoWUWvEoqCqBOjwKLwjdJY8fhWO28+lW7H1B6tSkmchsOTn8lE+8cHAPG
SJCg/XEcSFm/Jq5LjsMGDg3/ZgyHX7v/k2lWGAd3X3rBQR0cvB7aHtmBjUP3
Ts3iMX0c/mtw6im1GYfdx0f1N5/D4ZDj7qqK1HE4f1lZ9KYdDt/eVwT/kZ6A
XwLPNZ464LB6zdZPQGUC7Eh0u0QnHDI3hh2U0ZmA6XtN9Z/ccFj4L2DgiP0E
PE0+ezjBB51vF+d+hXcTIDWaJ/Q4CIfDt4prT0tPws2Ukm+nHuFg9jL3mqTy
JLzq8HuxNQSHtH61ZuqJSZC4a9ETGoaDdeatBD/bSeAvrV3SiMKBasYVePnt
JGxixjFqEnHIemr56oLEFKRPPCjQSsZhYu4c3+jBKXDP72wqeoMDcWK/kpPG
FAjoKrG/SsUhUPeYtfPlKdjxg58qmYmDzLKklerrKbhfLxZv+hkH+1DVQ38F
puHcFtnwG/k46OMEkpb0NGxSyox8VoCD9w6RxruK02BuhbV9+YLD3tOL7FST
aWgU32BHKEXv50KX9euQabh7l8Hd9xWHdsp287KYaXjWlNDVUYZD1E0R3/7U
aRAOEKj7Wo7DxuQWKe6KaUjs0XO2qcJBQ8BMShOfhh9jb9WwahyCDEJVsfUz
cOTQY2XxGhwKfma5a/HPgMSWkqLGWhwE5uyOKMvPwOMnXZLMBhyaPc7pkB1n
QDKTgxT7HYf1Lo3JST0z8P4jXV+9DQfXG453bcdnwDCwZp6IWFsCfKQXZ8B6
8IYIbwcOD0O80+M3kWDukS6bYRcOS6FSPGbaJFByfVPbhliinPv1yhkSXDrr
PXi2GwetFC315KskEHfK4jLqweFuqunnntskGJY0idnahxgI3oJ5JPCPPy/h
j7hAtiws4RsJ+oLWcYwgTkt7kifeTILZQsu/SQQcagwrZIWmSPDw/OrWn4gP
3dp6O5xOAp7Nx8NOEVH95u7uXf1LAtU793MXEF92vlnQJ0qG9z88rI714/Bu
V5KK5l4yyPb13XmE2OeKfUWKKhk4T1JXOAdwGHDMo5mfJQNBwd/+JGIPU5nX
eVfJwPPMUOMBYvZf2wzXuZNB3NFVn4w4p9ceEkPIgLEb6osPovp+8XfqTwwZ
fDdckTJGzGvuZnM1jQzWsdd6biFuTF+SL/6PDIm8+o5JiNft/3uWp5IMoat5
PRWIteu76q58J8NmSU+ZYcRl8Y0RWYNksNLXM/uJ2Ha7WsYCmQxPvH668w7h
0Md9fbPyEhnul+g6SyLW921v8NpIgYueVEM5xDeyMjuyBCkQsylL6DDiKvmz
e4elKfBAQ7VVA7Fej2QbjxIFnMaNvY4jbntzreqwFgUmhN+tHUOMt0SzWZ2i
gLzCYpAqYoW2H88CL1PApXKauR9xo+EXxyRXCowlH7ksjngDv1NYoR8FHKZj
i7gQy+wxZjWEUCBkNYeTga7f49O37L4YCkzH7L9ARKyxzJ/9I5UCjz+UvipF
LHD7PX0qjwIcz9mJcYhTvrUHTZdTYI2eJ+SNuP3WzKXxFgoc73Q4r4e4z+Pk
zf5+Cgg/rY8SRqz1UK+vZYYCuYN+7RPo/Sx91LxXyqKA9sx2gVzE1nOhLmns
VDh8yOSKD+Jkq3uvHvNR4feHnBwVxOkH/LicJKmw9zFhAw3Vh2NmWzkmR4WN
CiyiNeLUN78pMwZUyDm5zYwPcZf1Y7tCMyocs3Ear0D1pm7Ws/2uAxX4Arrk
NyPeFCqjtxpIhTiWAD0P1SurfqC46BkVhN0amk8hltMud3ZPpMK9X6XV91C9
H0rzultfRAUTka1TWxC/XGWMetSi7aobd73pxeHmXd77m7uoUFK68PMT6icd
fldnnTkqFIspKaah/ntSmjZ0Y9csXDq4yVII8U6J/9YxFWfh8MnX2cGdOAhn
yFh5HZ+FoJXKlkuon4uuZ+dfspiFhj1u+zqQHmgJc8N85Cx4xOz8KoP46Mf9
gQZJs7AypXP/VivqD+JDz+QPs1Bs+eT9phYceFpPDB6pnYVhGlcKdyMOwWe+
D6guz8J7i+MfdJHeTLHx3jywcQ58OGiCAfU4DG/kdhQXmIP5xm3Cw0iffu6t
M148OAe55J2Tt5C+ib9cFrWxmQMnUzbJGEB+oDVio3htDort2+pyKpE+XY9a
XvGfg65d56/0In10ThiSComZg83CqR0rSF8tIkHVun4OPsm/ivxdgsO9F1lr
XN1zULKQVL1cjAMh2WH7f6Nz8Li38zkZ6fOXHQNK80tzoHjQf+EN0vedMcfm
lA7Mg7FSTYltFg6KA6fZCJHzcGN9ntt+5Ac3F05aqSXOg/vw1vcLGUivtqz/
G505D7EKlHKvd+h6FbW5jsA8KDq+eXES+cvvnSz5U7R5OP2uu/NMDA5xGm0K
MecX4PoutkDiHeQXf5sCn/AtwpfrmtNn/VG/fNVODRFfhKOvOV3r/XDYHE95
fk92ESwbC2qzbiI/Nk4asdFcBKOILbNGnkjfcCNhlssi/Oe0rWiDLQ57Xh8I
vlC5CA137eYsdZG/u0h8ox+iAWPfsPVtbRy4MKaa3FEaBC8OcMQg/8994xvt
qEWDWaLPSqUGDnP9ZiPthjRwar31eOkQDhFP3IefWiEebuiZlMFhv36CbEIo
DQzujd7JW4cDzd+4X4xIgzs/2Tp111jwcOPrxLvDNKjqy/zVt4ryUuKNzoFx
GhS1crbSlliQfkgjLmoO7W9bFci2wIKZV+z+A+vo8CMyce7JAAsmrQcMWQfp
kGjV3KGbx4I7LbuPawTS4fHdKMw3hwU82u8+GAXToSGh8U36BxZ6XpEBZk/o
ULJct2/pHQv6mpbOOsXQ4ao0X/QdlL9S8ziLnDLpYOtCMJl7wIKsG7EclDY6
BI+VDEWdQXmQNpL9U4wBD7KahuJMWLDr3NECWykGLEac1Us0ZMEHe0G3JhkG
MAyEzyfpoPvDKiafyzGA06bSLfAwCxZS5dg5tBhwx+HvtuYdLHhkW/MsCOXq
ZThkdovKBCdqsdCXdAbM9yjd309iwoU7FUY9WQyomL0nNTzJBL2qcGlaDgP8
T0n3HR1hwkmvjpJdXxjw9rC1ILGDCY2Jxjc96hjg7ul7LuELE9zyzBvDpxhA
0zpqc+IeEwJqxUf/7GKCeA5jtcSfCQO+o1crZJnw+XfZcXlfJvgqvXsScIAJ
7t7G2XxeTDh403d6XpkJfE/5NL/ZMOHMxSMfSk+g6zB8kPlWhwkXeZ/SRqyY
UCIg9eEDBxMcczu9HF8x4RfNMLiPnQnO8zyF/QlM2PDn1la2NQb0djDjjN8w
gavyvuaZJQZgz8hqezPQcZIUVjuJAQ+fHeyqzWeCnQD9mH0TA/mu2Kbw70wI
P/KJ2h3GAA/KWXEDNhYQci7ssgpmwLrsivqC9SxYKzudPxXIgKLiM8/FOVlw
uPgwcdaXAUar6sFTm1lA8bA+N+jAgH2L6W0XxVlAXFFyUMcY0EcotM5SY4GZ
lNeFVSYdLExk0ne4siCAJ8BGZZEO0gGy6+Q8WPB4sLbbiUoHLQUFtyNeLFgX
SpyvG6OD54Ct6clbLDhOtmR3RHVyybb50fEgFnTSEzlkUR1VrTNLSEF1tdlr
KqDcjA5K9n6WknUsSHpxv2HpHB3ORG3MT2lgQSnTaFDpFB2uPL5kI9HMAv0d
HVeSdehgWZFcsbWdBQLp1R0WinSQVT7sRSCyoOjIqToXLnS975q4J6ksWDZL
3jFWSoMyh3c2rC0od0Y2b+0rpMHSpWuYJD8OjwKtehvzaGAoTLU5KYjDSg6z
LzODBr4GorYRKPfTmp1rjZ/TQF+yw/CnFA7m9icjDrjQwM51SthACQc+kdQp
E0EazHS0nO84g8PXgTn3p5tpkNz7q7AB5XypquOedZw0SLTYCmUXkA/dr2l3
Wl4EinNf6+tLSOczC25PNi+CjcHCOzlrHPLYI68teCyC/ObjVgXXcChkczwn
arsIDHP2rpteOMTcrj2CmS6C/erIsPJ1dH09i4L3kI5dEnxUmo50rb75i3AZ
Lzq+eM7WOgD5vLr3kEHuAoSNxgcqoJzvpzVuIpO6AJLvPyyWPkE+m7Ku9dfL
BfhB2kjCwtH1afEsx99dgDcifI66kUjnzO13JhgvwJLH1ts7X+JQ+1FD5z/S
PByJeLminIJ8cvn4osbQPJxbe68X8hb5rm9DUW37PJCMlNh70BwQF7wtpq5o
Hqq2d3Y7peMgH+KZGBE8D4ed8SzbD8jHL5ICFSXn4TKrjCcbzQE55Ot9H/nn
Yd3106MVaA5IdFO8L7VxHjJXuFXaC9F2VkPN6uwcaF2VtpgqwkFEsvTIg69z
EDPucW8GzQFdt3T29+bOgf6GX2qjaA4ITWRd3506BzYmPc7d33BY/KK/sSR0
DuRFPfZ/rsChyZJ4IePiHGyLadqijeaAE94Ejl79OVhodLGRQHNAT9eM8NrR
OfjMkNvBQnxbMc/AYOcc9KX8HXxdh3wsDd+UOjcLBZLnNEqQbwfuS/mQ/WMW
eE6Xdvo24XDujkbm5+5ZSBrrbFJqxkHlQH1tXukscBtUDSUh338uui/hZsgs
xFzb5KKP5oTk2HADy9uzcGKbzxwJcVFFzeVj7rNwTqSq+XE7Dmr9uwsWzs7C
r/MJocUod1z7GbpUrTML/923czBCueSagGLGc7VZ2D4VGdOPeO1FldpOcZRL
LjycmEU55pHHuPj45llgl7jHdh3NFUcPlXi8YZsF/2QdDxriia5FY64ZKpwc
j5CeQblIfH/89qzPVOC/p0rJQDnKt9rOSjedClt3fTvJg3KXoWwF31AcFcI/
JU96Im7RiK1fDaDCi8k3I3tRbuti6DeFelJBubzz8APET8KWNXhtqbCpK6S1
G/HPoQZ/7pNUWNYOS/NCOTBoi7juwyNU+Ksz8qMYMZ1rJIi1nwpFdbUXf//L
iaUfVBwk0PGUst8aKGfG7xazbNuCcuNFbYI/4p+ebSyVdVQQ3dM7no94R681
RyyTAldXFyRI/+aM2MhIQ5RzuSLTxfVRzk3zKud70kqBqujSA56Id/poptdW
UiD/8snJ54j3UZ6d/J1PgfJKLr18xDJ68ssK7ymw60qVSTviO/xvvlm/pkBc
0r5fJMSHN1x9Hh5BAbPiVeO/iNNZFL+CQAroZP/E+FGOHx9v8Cb4UADX7CDs
RHyPeePuT0cKdC8f3yKPeOtdr0QBCwrsOfhrSg3xG/xo2wETCgRMFFn+mzM8
GGZCGJor7nLt8/g3Z7zFda6fVaZA1H327ZqIdyY/HL+ymwKltJ/WRxCHp8W4
Om6jwO/+Ii3Ff+cb/7nRbRMFsm4uFMkgLrRULHP7Q4Z3NWdqhRAfOFDx2JlG
hv/Cg53YEXfFS7vZTJKh9Lx60hy6H5vNo46mBDKIWW1z6EE8JnHrzslmMpD/
a/5WjFj6oVOWSjkZNLmX0l8hPiiluiiO5rSAiZNiNxFnc9qfX/eODCmeV3ac
Qmzp79M+EUuGhy+HcqQR3x2Zcq4KI4MMw7WOid6XUY+WeGIAGVYGM5xqENvv
ZZ/z9iSDynnFqEjEhwbzB7RtybDKmaVphth7Z9fU1otkGLD96C2KeNXgmlmq
Ohl+D5VbxaP6+ZWx+M3+IBlMRdlFziNOiaZrS0uSwe/gsdOciBWePsqLWU8G
A8VhFTdUn86LYq9O/iTBpJv3qBDiqli9tywyCYo4DddXoHpP22K33aCdBHdH
eQvZEfPr2TylVpHA2nybRirql0v3N0qGF5KA+l/64WOIX4PDl4rXJBAR8n7k
gOaQ3DNyGT/tSfDdu1w3AvWf2S4F7btmJIgfbtHiRazEL8SxakCCpZPRaU9R
/w44fOZmyJGgTUX99R3U312chzk//5yBgt+fpBSQPjwzs2cIU2Zg50NRhRik
HwRGNbf/0AxEcgm8ZqA55LmFIShVzQBed8f/A5pDOD9Vm956OgMesfcwMtIr
MWln05iAGfgqyLZXCvGDmaz+HI8ZGPctKj6P9K2KMeDTdXoGxEjRDR/RHNKf
vbQyw4/Or3bPaw/Sx03Ojw6Ns88Aq03E+ijS08wSl58E5jTIPrs6bYjmEv5r
8pJFfdOwXj2g4DKaQ7jvHt+kmTANpiOePEZIr+3uK2ULhE+D6uPxe0eRnje4
uw5OBUxDi/zkrT1oLrG/krNw9+o0dD3qWVxE+h92vfL3LalpuNxQ1nMG+Yem
9hXTlxlTgHNctlZBc4d4xQNTmbgpkLVMkB98j4PqPhN63uMpONVy2eY+mjvO
f+XZ8NV5Cg5e5xovSkPP79Bwxut9UxCssCS2mIQDxx37Z6E5k7Cn1eJsUDTy
j6wbrF15E7B5usWUF/nt2fVXBtTfTkBY3wmWpg+qf9HK9SbPJ4D9XYqhmzfq
/0pOOccbE5D7R5+zyAMdX+M55nZ4AtZ3q6Zsd8ThRVNoeG3FOOzeE3J0iyma
A7XCS4qax0BdRbLnHcoXHt0aY2ZlY7Bt3YPkkwqonrOd3RjZYxD/1Kdj8iDy
17ip1J3P0P7SJBeBvTgkPVkH58+MwYusa+LqO3CYtHXetTXjBwjEvT+ZzoWD
ezan94tPI1B/Q6ZheogFA8ZljwwjRqCSOiKR38+CttnP9kuuI9B/Z2O2Xx8L
jtacf6m5ewT27XxjQUN5Cw/Zw+uUOAzES/3Jb6pZ0KO3TlT58RAYk2/ZDL9n
wabzm1e/mw5AcbNIWrsbC0I2Xx0LVh6Azuc6Owac0Fxxqe2PypYB4L8ffXrE
jgUKP3qZdxr7YS+1rLTbEuU1mX7NnKP98M3xoIaPEQuEX3LOpEgQgWwfSvHf
ywKu0MvllOFeWKuxvvhilAmTDus2W37thcvF7JE/BpjwRWyPR3VcLwwH8Ejt
7WOC9qyE4/0zaDsvr/q7ViboeCkOvIMeCFiyzzMoZYJ0GiPwQ2o3MPmfbzN5
zoTZW1mHGq064cHcy8ebNZjwSC6L2+FoJwgKejjdU2OCgeXX7GWhTjAkc8xN
KqI83nW8d9frDlhtZu9L3o1y/6DKaebNdti5KuRatJkJJLkVHfP936HWmMJ2
b5QB054ac8kRjXBuwU5LKYABt5cfddjqN4JI6vH2bbcYsFLj/UV8XSMUuDzX
XPZkgPUZ7To/vwZgvyWenG7HAMXDMt9rbeuhFVP4mm7IAJ/3wbFNh2ohIz1u
RFeYAUOLkuVsHypgF3GzXN8HOtDpe/mjxStgYp87uTWNDux+VzT4ostBMm04
uyyRDmYf/Jtmfb8BzWRcJugZ2r7Zk8Wr+xWSOhL5sr3psKz6cX7X0BcwbBz7
dUOVDj5uVvlKXB9AkFps+LaEBnmGjaMLvZnw+Wqmdj/K0dwK1NCUtPfgrPbr
DUcmDbIyJX/3HksHN4OKc7qxNHh4nN7gMJAME8+2GGlcp4Hc44QMLY1g+B5/
L1hMlgY94/lzLkPJWNuRECEfgUVoD3fsfarzFrsSQvfh/rsAVymLPs29qdjW
mn0KTykLIGerzPZRIx3b0iesr1W1AB6lU0/TuT5gTYY1AXevLcDJJ5ID2h2f
MaFD7Hp7quahUenER2+LMuyXdD2PNsp9ZrV1UgozZVhHrLDdtuNzsMHazKv3
5jcsZNHtcq/sHPDK11X3RZVjb6fcC9atzMKzgS1zr2orsV9Jmeqyb2fB+Xxb
auHLaqyU/dqH21NUMP4gYbWdUo+dZbiGHbpMAcJgXPcH+Qbs2kSDRvwJCnia
nWmQvNGAjcqurxmWpYA3LbO7dKUBM2sefMHLJEPdbemXsZuasCc5s4YrT8mw
Ifnxpcu7W7BGfgeu6XwSRBtX/F4+1o6diWzzf02ehpU5LbG3d9ox0Q4my7N1
GgJVV/iEStsx88xRo51503AOq//grNqBbS7Rfyt2cxoefCMeMhLuxN4bnG60
+T0F3KoBD7g5ujARJxprecMUPCsgq8TKdGHLzySpQdOT4Oru4P3nRBf2qcaN
Y6J+Egra1mZc73Zh+9lVSxRCJyHnY27b84UuLOgEhUndMAmJqlLRQW3dWLLF
KZWilXGwMBDZl0Luxpqzt6997h+Hjns8SlHre7A1zmctD4vHwa94HB9X78Gs
1N7qpfmMQ6eE3H6ttB5s7pbihs7pMbDjU9nfV9aDLXKPcF6rGQPLsDLy4d4e
jH3jhs7BlDG4pmrifomjF3vqPB2uaD4GHicfh8+49GJaJxbNr0T8AL0Rd/jy
oBdrXTj+6T/tHzDzvTBFL74XG8uJWMpYGoUEh30WGfW9WEf4J4nr9qMw8saG
G5Pqw4oqqyP8D43AqYfXBX6q9mHg/OBa3cwwXFHmXHMw7sPsS2aycxOGYWJ9
boT1rT5Mx8Fo9ezfIeBrJX5/V9eHhdR+N+6uGQRqnPBy8EAf9omjJ3jPtUH4
3a3StTbfh+VNFxz5KzQInYNM70phAhZ+a7vtcacBmHmjEby6j4AJPo4Mecc7
AC3EHT9aNQiYsFVjcHhhPywoGbgI2RKwfLw1fmyNCGYR7i5PfAhYdnvqndPv
idDDOGoe/IiANQ6udh4zJkJJyMFl9nQCZkuifo6NIYCDI+/SwwIC9nLPPUW2
wwR44WwQdK+agKma1fJR+/tAbsJtY/8IAfvS9UTlyI4+qFDJ/aYyS8D2HHvy
LqGyF7Z7kr1XlwjY4N4Hvf42vRD9Or5NeQMRm5sr9u1d64Fg4y8eHVuJmNG1
xuO5b3vgi7/N9y4xIsbP47W4ptUDQunaV9X2EDFr/lqLjpFukEsKOMOvTsRu
vjzTPCbaDRuvHhZ/dIKIPa0o+bSrpAuehevM6hkSscSN0hxjF7vApZHy1ews
ERPaPzmzndYJh+3C3D+bETEDhoRvW0QnSO6403TuChFzDdIm/5HthLVGcqiK
LRFrCggSMQvugO1u89h5RyK28kEmIKukHXhntG99cCFing27p5jUNujx94k4
5E7EQkHXQ2NHG8hHzvfMexCxXB9L8wdnvoOmlc6j7mtErIj9okx1YCuMFGZ+
HkZ8iznzgD2vBdr9vWw4ES/bWJqfHG4G1f12vqfR+falCnRFcDfDzj5t+Ih+
ninF1bRfrQmUT80tiqDr8Rz1fiZv1wjV7gmp0TZE7GSVtUdURAOYlGqf33KZ
iAVRHRT+fqmHAs4brpEXiViH+SO7oJE6KJLhUOU8hbb/qJ7cvrEORH0sqL66
ROx4SMps68FacOmRyu45SsTuXxPgSTlfA/EyInfFFInYFhNV1Vi/apA9UXxW
T4aIneMJryhMrIKhiK0cJiJEbPSJd9uGewDrbh9x3cdFxFq7rn3jra6AMaUb
CoRlApZ4JyX02YZyoJQorjtDJmBRNZhNjH4ZNFVn3nlKIGBwlee6fFgptHXu
2v2oloBl5kySPBuKoSibj/9FAgHzSczfuke7ENQm1uskonp97xL8pPpePjgX
yD/Rd0fnf9W3LcXrPxAv3LjbS42AeebsDDx48QMcsDb2Gt5OwPrN08tXazLg
uC9PVc9KH5YdEjvmqZwGJaJHf+qW9WF84dxqwiKx0NiSsYk3sQ9LqttwMLEj
HNZfD5Hy9+/DhgNoOkUTAcD/zWV1n3Ifdl3juFtZQgDmWbfe25GnD0shvMSE
c8Ixqcl+THmqF1u68fdnxfpYrHoDQcTrRS/28IsWf8WnVOyj8c19BKdebMMF
gYW1dRnYAaNzX0G9FzvWKO3capqFuV35uXHTYA8WoRe3NM76hHEcdZFW2NSD
La2b9r4VUYRZGt53vdjdjd125iz5dLAEm7lZ+pr0uhubxbt3/mouxbZodetf
lu7GjH8sxEmylWP3ztikqE92YY0zS17p8RXYWcGGhMfpXdgJr9pDz+UA01N8
cPC6VBeWbtGb+0u2Ghs12XKKf6gTi+rQ2M89X40VfxLbty+uEwuxEjrrm1+D
nT54ObZ2QycWUVeVx6tWhzkGC4UbZbRhq0aM/IndjVjvNZ7gxvVtGNuqvPmj
oUbMuuhU6z3b79jiUhqLGN2E3c0Wda/nb8XOb00Wu0xvxrw3LPzxc27Bbi+8
qbJPacFsgm4YJJc2Yz2hLsUDhq3YNQ432TCzJkxMlo+jJ+47RvP8ttkntRGT
He3674h6G0bT+aC8jdKAnXLJsOkgtmFfhwqNSDfrsY50d0fnLR3YRb8kx36f
GmxP3O8yztxOjFAb/2Y8txorb9He7kPvxCJvcsSfmanC6i5GXDyr1oVd0Nt5
79LHSuw/evUju9IuLPrPC+VIwQoMH/utGbPUhf2p+DZ19O43zMF/+qqyWjeW
yJ+im6Zbihl1GN35mtONxUwldn7OKMYcnlMn3011Y+29+Ywf64sw1sjmp7/F
e7Dj3lZrWEU+1ujl07/2uAd7dQsXSz2RiT2N37YhyqAXWxUJ2UR+/w5TfBDs
2nO7F2sqkCAqCqZgS77LapaZvZjmsaWbnIejsdPFN3yO/u3FzkVpV/p9DcIy
4lpMUvb2YY+vHPuYPHwe4znXbGlxtg/brJIzkQrhwJUb92gyoQ8jP6ihOr2J
haZkVmtVeR+mbESQDxxIgpCXRQk8o30YR6AY78c976Feze3degkCJu/mOCRU
9QH5djh3pTrqq1fGpBGLXDh80FOXzZSAVV8TFbaryQet6Zp9R0IJmJJLz+uq
iEJwrOCwPfqGgJUsyN1mXCyC8x1zd0aRj6QUONVOiJXAx+E9GvKNBGzSr6E8
cKwUZnlW7eQGCVjLxsH6Lxll8KmQlD6BfERTVdDylks5KOymZF9aJWD6fM8w
NK5DHae7W4woEXPn2nvuYE8V7BJ03Ocii3Q9O67JLL8aUlzmSgRViJiy9KVD
6VE1cEN+r0eKJhHbHum4d4tHLVy7YvZgsz4R+2xXm/5Cvw7iU6vEXM4QsdpL
fpv2S9eDf0WLST7yCb6In+KdK/VA7JbkYiCfeJz9kfGopwHSw7jlFO2I2Isg
/b/HcxqB7S7jjpcTEas6vZHt78MmSLo2nFDkSsSepJ7hqDJvhsuJYqKbkC+4
qFi4PpRrAdM6aXcfpPu8s/01GFsrXLtgMEVDrPXRirXc3Qo6UTm1kYjNNN1F
czK+w7jfpf2n0fHZWXpPTX3bIOs/FXFVNyKmJMboZuq1g8SKcIiBMxFztun+
GibYASGCXKrP7IlYS0mGytbxDgis9x/jsCZixpZ3Ptdd6gSSvNXucgsi1twl
1RJQ3gnZHyODPl8gYlvnPr37KN0FJg17r5JNENvwbDof2gVVDbUbXPWImGrz
zYnr1C64MkjIO4SeZ4j7aSnuM93AFybvd/YQEXsjKFMnmt8NDxq0rGE/8uWa
rMl3gj2grxVxIUyKiAWSy1MyfHvg9OLOvTlCRIyYHS4jReyB/COcCQrcRCza
6EOugHovfFdMPiP8h4BlcQUtOi33Qt159s9ikwTMae91swbzPjh34K3GiT4C
JmFRIJJW3AdtTVdbCQ0EjKDY7Np4gwB3TEk9Dh+QLzyf3DU9RQRPj61nLzoR
sIiziTn3tPrho/vkzdyLBExPyOhafHw/7OZS/BSjTcDesh37aWE4ABd6DO35
UP2LO/a+2ZExCMEmpcWC3/uwicRPR8Z+DYJTQUbH9pI+7G40cefBs2ielVON
qkjrw06tmb25ujwEHdvUdRd8US7UO1CufXIEXplE9MiI9WHHDmRqXY4fgfmK
H9+s2PuwndY/ctgoI+CDC2foU3sxCJ3cvRI+ColJ587Kfe3FfhvLFRU2/wDJ
Cx5Tty72YrnfHov4iI4DQYQ/z+RuDzZgafR1GzYO70PbcEWbHsy/PIkzwnEc
9C6pxg3q9GDXd6/nGcgbB5tNCilh3D3YE2mPMxLaE7BzfApsY7sx+/quHRFX
J0HhtkbGSmoX5lkqmX/SZxrkXKneCuodmJN41gm26GlIUiiIIfxqx0ZKy3+8
yp2GnXlf+E2+tWOnugMVLUnTYGuxTfzN8XZMyzpQUf3KDJSujxVnO9GGcZnX
rkRpkiCk02/uqWYrdrp0fwA7iQy3d6cz9os1Yjc4OYwy2CjwUu1i2x9CA1bY
ijnuE6PAgXTm4+KXDdjhx2kH+09RgPejIaGftwGTlzmUPPiZAse+F5rS/tRh
pk3mdVE3qfBIUzB9dKgGO6ETbVg1NQts1Fc240i3t/JO3yKuzoLVKl/j+L1y
bOnkJ50uoTkYNr5sVDf9DatWSXT11JsD4yfekodKyrCcBLGLp97NQZ5rXl2H
RSlWaTwg0WgxD7ZPhMkl8YWYTrJ9UkH+AszGzmwJFMjA3iYqNrk0LMB3h5zP
jB/vsBfyEtIbhhZgky/PdotPadgZ2Tu9jPWLkNWx+w8jOgW7uBKekmO6CIkP
4oNdfsVinJ3b+jLoi9A0suBwKfkq9ptny5pmJA3cOK2vpBm9A7bm43NRcTSg
rx80/eGSDjfeMJ4Q39DAr/qiq0BoBoh8k14+heborZc/pZvVZMIt1W3lze00
oJoaHNM+lgOrSc+EBLfQ4dKhL+7JggUg+7DFWyYUzeU73drlfpVB7k1HLqtI
OrwxCHyxK+wbRB2wcY+KpYPxwOoNHuFy0J+v+Nj/jg77b1V1FClVQKKk1AIP
0CExyLnexQXgourTXSycDnlj1Q94KdXANRZg8ceKAYUvBDIaTjeASkXbiKQj
A36eDgxwjWmApEUhi6PuDEhVX5e7jtgA67UcdS39GPDqXsGYqC3S0cuHE09G
MWBP+fvhHz5NYMepZtpXzoBMqxH2opctkEuNiFwSYsL7v7rLuzrbwawsO0lH
jAn7RTP1Y5HuEc9qnw6TYsJOm1KN35c6QM4+Ku/PfiYE3N8193GkA8qGpRgp
Wkw44keM0/PthMXZwo8lzkxQT/cm7HrYBUpGliN2BWj/jRISpbE9cH9QZepU
CROibg0EPi/tATne6O3K5UzQ4s/dYj/cAwTvAcnpeiYUVW9Npcn0An/PyUOr
/Uz4Gq7xs6ygFy5dICxQ/zAhUF3371p7H2h+1v8+p8OCV+yVbgfY+yGdsHcv
pwELan4l0yX39AO7BclI3IQFD+wL+XkN+2FP+NNlpYssSH5YsKkzsh9Upstv
Cjiw4FCM7M2/2wfgeKtuQv5DFqwL0emlyw8CRfODwv0yFqwE82iKXRgGSoOz
8tsKFujcdljo8RmGpr5Hx8qrWPB3cX176IthEInp9SA1sCDdzYGnv3MYPr0V
SWHvYUH7gQiNfWdHoLh+U8cZKgvSLvu53DcehS9vL0pcEMYhZkWrAt8xBuI1
t/0Ht+GwOtOt7iA/BsUfbVWtxXAQWndgX5vmGFyn9fSZS+HwZE3X+tWVMfAb
GOEQ2o+DiuTNzX9fj8H9qGLTAg0crqvbZkkLjgMtoi893gqHXMuy2MINE+A1
Jbjxmw0OFqmnZhaFJuCVQ/j5ATscjP74zO7dg3QsIriEwxmH9AUv3oiTE8Di
SePY44UDS8E8ckfoBLTxuEjeuI/D+9vTn29wTMJ32/GHJx/gYEhbrHcTmQSd
v29XBR/i8DNQ4sFV2Umo3HBP510IDn63lQZV9SdBl/nXIiQCh1eDw6L5jyfh
QEwJ3fY1DpIFQsuE9VNQ9FGLjZSAQ2ZjxWSY4BQUMhhnXJNwaDZzdVKVmQLL
n8XFV1Nw8OGy2xukMwVdBoNM3gwcCHK+URNBU1DbTtWMzMPBvJxfuXsV7X/x
infTfzjoP4gS1eSdhvFcbq61zziI3PgdniY+DeJcBr7WhTjs4n+40ebYNGT6
NAbOlOBA2uOim3F7Gjosy7R3VKH34f3ysDl9Gl7kcC+tIe4Ijp30X5sGPiON
ptFqHHabn0p7tXkGEqeP1j+vxWFn8O1TDftn4EQp3bKhAQcPj+VzP+1mwG0+
VzK8EQfrQvKNZe8Z0GBt3Gz87/f8PC2pP+/PwPzVM56VzTioPtooSUqYAcm8
9R53vuMgXfw38nXXDPx8HpIj2YaD+mvBtYAfM0AWoO+qQlzc4n3bcn4GCviE
KpbacRhTyL+7iZsEbP8RW4924UCmXazRPEGCK/Mi9CrE+72SrdZOk+Dq/T2X
9brR86lI/l1xhQRvutb/xXpw8FQJOa54mwRfY4pKN/X9Wx96tHn8Ewmcotz3
3UIcnRTuHvKNBKHWnuQBxOm6optkmknwvTPQJpGAw22Br9qmUySYH04UxRHv
2/1f/wydBGmxUgf+rW9s4Pnk4btGAq+7nqaLiNmkIoNDxchwWVXdR6Mfhyvn
L3Fy7yNDzn9e1GDE153wkDA1MsST+Je5B3BI5Qj18D9HhrigW9EGiIsTbXuo
VmSYj1d4+hBxtcSkiqUHGdJkH3+k/vsOmfCFsD+UDNlrPD2i/9YzPlgQffaS
DC93gONJxNf3ZV6gppLhyV4+23/fIXOSzgfp5ZHB2Mq74QVi620u7xK/kaHx
tUlCAeI4fqvSuSYy5J4VGOxAPH04u/oYgQy0WMVwCuIbbvUVIZNkoIpvyVlD
nPdtT24LjQxc2DYtgSEc6M46z3j/kuE+e6GeNGLJ5hgrYx4KRAsbVv1b7yjk
GCUVsp0CP3o0Cv6tVxQdye36uocCOfoM8aOID6863ZxVoYCEbPvff/w5R3mD
6AkKPBlUuvrvu6PvUliwzmkKVN4PUFNGHMQ7TnO5jHz+t2z9XsQF5U4+Bi4U
mLfU/ymGuPOlNafMLQp8rNvZsgnx7nmTgpUgCoyr/dFe+rde80SeT3skBTr8
pW3GEPNIc5xMSaTAmwPduxr+rXfU6j3onkWBZ98uRH1ArGqXsEflCwV2Xp9+
F4bYy4ug/LOKAvr2rXYOiKMdeM8Vt1Eg6JHed41/34HNyx/cGKQAd0L0JB/i
ywEuVQdIFFhnQP3wb/3jR8Fo/h9MCrzifLHj33dlmeAvN6LZqHBQGXTuIfbF
LCc1NlNhwiUhnQvxIkWW/kSWCidvFY83o/qxVr0Yuf8QFe5TNfvCEEsHbzzS
gFEhq/jK+K9/6xub1+czLagQIX519RNi9tyLQSFOVHDke9VljdjWWvkK/w0q
bBsP+K8Y1fOsSYqyVAQVfPc9LrNCLJmpLJcaTwVSf1jIOsTRvFeUdmRQQSF6
/2UM9YfBff+LPBVUaBx7IheL+svZQmypZIEKwne5zkkj3mmaqCT6mwqCV1o1
clA//iip9vbjnIWQ2NzrRahfo8O3/tm9cxawQ2+90ztweLN++uSF87Pw8iE7
LoLYdGQk5aXVLASQ8k3CUP/fzoj+1ek2C74azj7WSB9iQ2ULsEezUHyKo2Km
BfXzsau75gtm4UJmwewJxE3q5ne3wCwE4TdZ8Uh/zieIdx9snQUP77DXmkif
Bti4bl+enAWFuhVD23ocRqxTn4cJzsEvYWN1AcBhQ5hE7M6bc7DymyS5rxKd
Hy7S2IPm4J3TcadjFThMna+LGHs2B5rG+iKm33CgWjbej8ycAztRPoWr/9Y3
OoRq5g3MgR9/6IUqpN97D/yJ24TNw97o1+3Jn3CY/3EmIdVkHrgdv1T65qLr
M0ntUkY50syNuSaRjcOdqk+jJ33mwTutcp/2e1TPChYWqunz4NVhKT2eiPxm
yFb9AMcCVOZoez9G/vJMknj8psACvPKz1pNF/pOrMOFZIrkA4DX0xCoOh4MM
QRPlIwsg57c36V00DoP5jiSqywI05CBfCsaBeLRbwLdpAfB8i/oGV/R8gi8E
jj1ehBMHm75IuOBQiLtYNDxfhOSw1HJvJxzknnZRspIWoUZqdvtmexyCt1gp
Wecvwma9K+J7rqDrJ7tpxg8vAufjdetaT6HrteNy3SFKA/Jp0k+mPA4mJosU
aU8acOSWPlk4iPQyfFPF2Rs0CJtNPzWD/P+chb/93ds0eFrW7dm2Bz1/XRGZ
7w9pkGpQdiBgB9LLxaEbF1/RwGdpVe0MLw7K3mucvyppcGNrxqdpEgvGpfIH
36BcG1t9WMZsmgUFKwfPLQjSQVZii1v1BAtm8Z8HNEXpcMZ/k9vzERZwuPZt
6ZShw3+0Zxe4UL7Z+XVzSL86HU6sn46wRfmo9pNhg4c9HSqjkm6WRrPgkd+Z
j68L6ZBa2h5X+4wFJ8Q4f8aW0kH18eS71qcsqBzWToyqoMPwQWJQdzDKSw7e
pDuNdOj1rLf7dpsFfQxmmNIQHQ4IRDiuWLPg+vHhgB3sDJjbXV+gcpAFa9/F
xhinGXB7f6TO3F4WhNTtjwi+wICbn5po73az4ElNXTy/OQNI2YY5nJIseKkO
PXtsGXD1hGBOHh8LftyNa1a4gY5X13O7iTPh1rYdOjVxDJB8sNV2GOXTbTuc
/84OMiDgRhWbxlcmrNXTZ/f+YEBaoEXvqyImnD5gddBukgEaJdki+nlM0HOo
e9M6ywCllOLtwW+Z4H3IXCdolQG0xt742w+ZcId1Udh1BxN45DnizugyYZOg
s4yCFRNoRRsPJGBMuD20Yt9py4TuL9ttxjWYcEg8XOu6IxN+sOnkuKsywf1Q
deMHDyaUGmzpt93DhJu6b4X/3GECkKenhziYILrJ9bDKKyZcesXo3drEAM9O
fdXW70xQ5K3S3VrHAIXCBK6dnUww5Txny1vFgMRnoW43ephQeMEyY62EASY9
+zu2DjKhKdXToSWLAaa2DuLyJCbo/BezjR6KnsvVRj06GwsKNzO2h+qi+7r9
SzFZhQWakb0WP7QYkP/occ6EGgsC8nrm1I4xYHD9E2XZo+g9/dgqOKTEAOk5
icsZGAvuvaxz2ijJgCHeN9z3T7EggX1X5OASHTr5y068dWJBvdg2sfCPdBjf
8t90WhzK1Ucf1kZl0KGIX0f/yWsWcFWkdzx/SwfSk7AEjyQWSHR38EfG0SFt
gUN4fxoLmrWmjJwf0uHonkqjB7ksUF1aR0myoEN+zual+BoW/Imk9IhsRPPZ
Ae73t+ZYsPxab3YXGx22V4grtC2wgIBRG+R+0+AXVWNpFx3VNdh/P0qnwYOy
dv0GnAX7BMVFj47QwCVIu3H2LwtoTonr2r7Q4NDvqJx8PhyWFJ7onbKnwVkn
yV4ZFdSXayLB/FY0KJJiMnep4lBZsRbda04D8zo2TanDyNeFhEVMT9Ogk/pO
e+sxlEOsqobU1Wnw12CSt00bh09/xJ8nbKaBjZAKrfIcDlq0JsubnotQH5Ag
73cN6cznG38/2i/Cx+u60XwotxN74+8Pmy/C4FspiQ/eODz/7r9ZTWcRak/J
fmm/gcO76rBHX0QWQUfkVMMvf5TrVQvV5ysXoDf6U0kDyu13CON144ULQNr6
0vVQKMpNketVuz8sgO6Bo0fehCFdOnu4IjNmAchqFw64huNQs578VNJ5ARge
V88OId3c8cooyIh3ARRDojvUkA5Pq/XeWWVbgLSr+sybKNeTt760zsHnwSY9
Vva/ZJSD1UtmV0fnwa/nQqnEWxw+WPTu8s6fh6Dcj1696TjUehX6Pjebh6ef
Wi8VIR+gCp23YTeeh+mVzRvrkE88zD+ieV1rHrojfxV2IB8Jp/3owvai/b+x
to6i3D9m/yogb3kOmFrO7wlfcGBwciq3JM7BcF2r++FypKsveuJXIucg4zjb
tb3It4Juf9GVfTgH74PP9wghX2M/oe7p7TIHbSniHVPI99jVJ7Y3H5qDL5XV
lyxR7n+qPv+1R3YOKMUWjvJ1OGydE3g/IDoHyn1RbX8Qm15SvEpcm4Wp1Yef
XqK5oPWgvE0i8ln/gdH7L5Hv1jyKtn9QOQumud06xsiXN67jLbLJnwXPo/EW
fxDbfukyEoifBakYAR8LNBe8iWfTw+xngXKES3EC+f4J4/ddf01n4eS66ot3
US7wNLcp/GowC8d+7K3k60Rzn9tzX2n5WRCoN7VWQrnCgXqW4+sSFVpUlDJ0
UA4pk+XWv0hFuUnWtb0CMfe5rlHyMBW6BnpU1HpxWDHkkeSooQJXtFfGdpRr
6l99q4/8QgVV9ry8EMSZnUtNfFlUWBPSmZ9DHGj3YorrGRVOCdxZV4By0acg
+b/3A1EO697ZuwXlKrJkj+/CdSqoD8r2uSDevVb6sNqMCj5qBle3oJxmfl99
225DKtyNuPzjCuJQHNv86BgVCg5Uhr9H7CDhvENJigr+jeam8ij3cWfXqQfx
U+FQaYC3B+KyrQdLWtdTYaSoMfc94oPJRxMEflKgXyt/0zDirXnPf5iSKXDu
1IewLSh3ShZ3hsegHNp8VmLXccTD6olJrd8pkKF0t99l8N/9RQqwAcq9Rsof
oxDXKJ6iKeaj450/xvxbn3hwl5/alXQKlFedetmJOCE6d+JhHAVq/j76OIv4
1f3ny+lhFMhWLOj5t75Pl7/2dvUdCrxv1uITQez2Ytp20IMCZ7IirPYgDnNN
+LJgRQGFjStflRC/lg26+fcsBY4/oMioI94brJHCrUMBpy2lCf/WJzLeCset
qVJg4eqK9j+uLLv6nL6XAolein7/5oLelNjnP8QowF+ypvrvfJiG9qvmzRRY
cRS4/+/nKWTMpP3HRgFV282ntyE2F+L+8oJJBmHDuPSNiG0W5Nq8Z8iQ7nP6
AQ3dz9FKwrzRABkI08TRf/8P6vmxCJGd38nQYdNX9Q3xbv0OA0YlGSRMpmWS
EavR9z6qyifDQvV7jjv/5qYAsYbwDDJYRhS6XEAcf0FO6Hw8GWJEs0/uQ2wl
OnlNMJwM+5/IvF35975+XTrxzBvNeaVsEIt4wWJnuY49GeToLx5dRfxEPUsP
NyWDK4OtfOe/9ahuXIFnjqHzK9SFp6B6+dxIU8TlyPB48tgOC8QABbR4KTII
XeyV+ldvZPWJ1K4NZJD6neHtjerRqsTmhesSCfgDmF/FEGe0EWJ+U0jQpvnS
qwbV82BSb4twBwn6fKb5OBFPyQhIiieQwF/8Kp8T6hcP3Op9TAQJHss1BDNR
P2U607Q5AknIZxLMAhG3nBauGLcnQXv2tS1PUe5nCme2uMmRQLKLLfsG6tev
7z14aiRJsE7sz/Qk6ueKB/1OIvwk6GwUv3UecUbkqFshPgOupAdB0qj/FV/I
VVZWzsCG3Gb5uFYc6krKhpY+z0DgoZZ2MtIPTw3nbfLpMyDeqlukjtjP23w2
ImwGdL0UT7WhnK+dHSYsfm4GRKLdbzWjnJ8yn8d8MDYNVh7Cx3mR3nW7i8QP
dE5Dy+LyDi6khzsZz70VqqehkUdAfQ3pJ782b21z2jRcaDfd8qMMh+w3TjyN
9tOw8OL5mmMx8pvS2tHhySm4wHuqIwzp93vLferUnimQ/9sveTgH3Y/h0V5G
7RSk9AoG/fiI5iBNEhFPnwK1DBNPmSxUP+mOsrUOU7CvaFe2dxryt907cu5O
TMLbOWXrbSi3rwR6Jh3vnoTfF7sifV8i/5ngHFmpnoTDP+Iz2l8gPzhNNXdJ
mwRH86f3fKJwcD1z2YDLdhKcp1rD7iA/+yL6l+w+PAGPp7dGP0d+GKfN4TDR
OgHf6BKjSX44cN5X0zL7NgF38h/MpN3C4W2WqoR84gR8jjHblnId5WwHndj3
5hNwNWMk4xKaC4LzN6gt60/AvoRT7keccVgXeR3TPzwBqT7tnQKOyE93Z8X1
Ck2A4Ya0W19tkH6EZk0KbZgAoR2FOSFWqH/by9+eY46Db8vl28ZoTjjmx9Ea
NjEOpye9ejdZ4nBq6L1zWdc4aOrWQP0lHP4HWmHE8w==
           "]]}, Annotation[#, "Charting`Private`Tag$47176#1"]& ]}}, {}}}, {
    PlotRange -> All, DisplayFunction -> Identity, PlotRangePadding -> {{
        Scaled[0.05], 
        Scaled[0.05]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     AxesStyle -> {{Medium, 
        GrayLevel[0]}, {Medium, 
        GrayLevel[0]}}, DisplayFunction :> Identity, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> GrayLevel[0], 
     Method -> {
      "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Trajet\[OAcute]ria de uma part\[IAcute]cula sob a\[CCedilla]\
\[ATilde]o de corpo central\"", TraditionalForm], 
     PlotRange -> {{-0.9999996987046329, 1.}, {-0.9999993189419824, 
      0.9999995751999937}}, PlotRangeClipping -> True, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{"\"MCU\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                   "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"x[0] = 0, y[0] = a, \\!\\(\\*SubscriptBox[\\(v\\), \
\\(x\\)]\\)[0] = -(1/\\!\\(\\*SqrtBox[\\(2\\)]\\))\\!\\(\\*SqrtBox[\\(k/\\((m\
\\\\ a)\\)\\)]\\) , \\!\\(\\*SubscriptBox[\\(v\\), \\(y\\)]\\)[0] = (1/\\!\\(\
\\*SqrtBox[\\(2\\)]\\))\\!\\(\\*SqrtBox[\\(k/\\((m\\\\ a)\\)\\)]\\)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"x[0] = a, y[0] = 0, \\!\\(\\*SubscriptBox[\\(v\\), \
\\(x\\)]\\)[0] = \
(1/\\!\\(\\*SqrtBox[\\(2\\)]\\))\\!\\(\\*SqrtBox[\\(k/\\((m\\\\ a)\\)\\)]\\) \
, \\!\\(\\*SubscriptBox[\\(v\\), \\(y\\)]\\)[0] = \
(1/\\!\\(\\*SqrtBox[\\(2\\)]\\))\\!\\(\\*SqrtBox[\\(k/\\((m\\\\ \
a)\\)\\)]\\)\""}, "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"x[0] = a, y[0] = 0, \\!\\(\\*SubscriptBox[\\(v\\), \
\\(x\\)]\\)[0] = -(1/\\!\\(\\*SqrtBox[\\(2\\)]\\))\\!\\(\\*SqrtBox[\\(k/\\((m\
\\\\ a)\\)\\)]\\) , \\!\\(\\*SubscriptBox[\\(v\\), \\(y\\)]\\)[0] = (1/\\!\\(\
\\*SqrtBox[\\(2\\)]\\))\\!\\(\\*SqrtBox[\\(k/\\((m\\\\ a)\\)\\)]\\)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          
          "\"x[0] = -a, y[0] = 0, \\!\\(\\*SubscriptBox[\\(v\\), \
\\(x\\)]\\)[0] = -(1/\\!\\(\\*SqrtBox[\\(2\\)]\\))\\!\\(\\*SqrtBox[\\(k/\\((m\
\\\\ a)\\)\\)]\\) , \\!\\(\\*SubscriptBox[\\(v\\), \\(y\\)]\\)[0] = (1/\\!\\(\
\\*SqrtBox[\\(2\\)]\\))\\!\\(\\*SqrtBox[\\(k/\\((m\\\\ a)\\)\\)]\\)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.5, 0, 0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0.5, 0, 0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5, 0, 0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.33333333333333337`, 0., 0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0.5`", ",", "0", ",", "0.5`"}], "]"}], 
                    NumberMarks -> False]], Appearance -> None, 
                    BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5, 0, 0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5, 0, 0.5], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.874275506684062*^9, {3.874275547474793*^9, 3.874275554090018*^9}, 
   3.8742757662633934`*^9, {3.874276540540095*^9, 3.874276546727065*^9}, {
   3.8742765769169817`*^9, 3.874276594234293*^9}, 3.8742767729411263`*^9, {
   3.874276871154385*^9, 3.874276992219041*^9}, 3.874277687262991*^9, 
   3.8742778482884893`*^9, {3.874278187273003*^9, 3.874278215930592*^9}, 
   3.8742787929271355`*^9, 3.874279029716179*^9, 3.8745984342432985`*^9, 
   3.8745990296820564`*^9, 3.8746000007957444`*^9, 3.8746005333943014`*^9, {
   3.874600593174677*^9, 3.874600610663268*^9}, 3.874600757557135*^9},
 CellLabel->
  "Out[536]=",ExpressionUUID->"913feb32-99ef-49e2-8ad0-04be9adde046"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"Estudo", " ", "do", " ", "caso", " ", "\[Beta]"}], "=", "3"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.8742770026771684`*^9, 3.8742770380015197`*^9}, {
  3.8742771638416715`*^9, 3.8742771746916533`*^9}},
 CellLabel->
  "In[537]:=",ExpressionUUID->"65257e18-0503-40c2-9090-8ffb0c90c2cb"],

Cell[TextData[{
 "Nessas condi\[CCedilla]\[OTilde]es a nova velocidade necess\[AAcute]ria \
para a reprodu\[CCedilla]\[ATilde]o de um movimento circular seria\n\n",
 Cell[BoxData[
  RowBox[{
   FractionBox["k", 
    SuperscriptBox["a", "3"]], "=", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"m", " ", 
       SuperscriptBox["v", "2"]}], "a"], "\[Rule]", "v"}], "=", 
    RowBox[{
     FractionBox["1", "a"], 
     SqrtBox[
      FractionBox["k", "m"]]}]}]}]],ExpressionUUID->
  "f9287657-4268-4cd0-93c7-9605501bc7b0"],
 ", sendo a o raio da trajet\[OAcute]ria circular."
}], "Text",
 CellChangeTimes->{{3.874277180909341*^9, 3.8742772318386517`*^9}, {
  3.8742776205775433`*^9, 
  3.874277654367996*^9}},ExpressionUUID->"ee945064-3d03-4cd9-8338-\
7ae68379a7ff"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Construo", " ", "o", " ", "gr\[AAcute]fico", " ", "de", " ", 
    "verifica\[CCedilla]\[ATilde]o", " ", "de", " ", "trajet\[OAcute]ria"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"valuesAux", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"m", "\[Rule]", "1"}], ",", 
       RowBox[{"k", "\[Rule]", "1"}], ",", 
       RowBox[{"a", "\[Rule]", "1"}], ",", 
       RowBox[{"\[Beta]", "\[Rule]", "3"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sols", "=", 
     RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eqx", ",", "eqy", ",", 
          RowBox[{
           RowBox[{"x", "[", "0", "]"}], "\[Equal]", " ", "a"}], ",", 
          RowBox[{
           RowBox[{"y", "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", "a"}], ")"}], 
            SqrtBox[
             RowBox[{"k", "/", "m"}]]}]}]}], "}"}], "/.", "valuesAux"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"curva0", "=", 
    RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"x", "[", "t", "]"}], ",", 
          RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "sols"}], "]"}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "10"}], "}"}], "\[IndentingNewLine]", ",", 
      RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
      RowBox[{
      "PlotLabel", "\[Rule]", 
       "\"\<Trajet\[OAcute]ria de uma part\[IAcute]cula sob a\[CCedilla]\
\[ATilde]o de corpo central (caso MCU)\>\""}], "\[IndentingNewLine]", ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], 
      "\[IndentingNewLine]", ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Black"}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.874277892605771*^9, 3.874277936049323*^9}, 
   3.874278026472348*^9, {3.874278680940907*^9, 3.8742786958382874`*^9}},
 CellLabel->
  "In[538]:=",ExpressionUUID->"69bbad0c-14af-4f12-b84b-381f6d0a0674"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], AbsoluteThickness[1.6], Opacity[1.], FaceForm[Opacity[
      0.3]], LineBox[CompressedData["
1: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
jtu8txaR3HBZZXuvRkgivKeL8TlHcmnq60AvdiIemq5Pco7PEJBw5dRAlkIc
+DtxZlqSnBpzX/WP+vtYkNrM8nyY5Ja8eJatDT3RoNFTfleR5FSqwqCB4sEo
WBO6/PQlyal/B+X4Qu2/wke9HzGpJAcdOupjM10dAb5XZJarSE56O2UdfZgv
HNp3zJlXkxwVu+feqMndUJDfKv83jeSseVGxmj1WX6B64G6CG8lhHI3SOQZb
AsDn6ai9Msltb35epfNI9IFUjgNm/zj1t84ye5T6ZxgWz3tkQ3KeYOapL6Zt
H2Btvaw/ldROLe+umHO+BoEb6t3qJCcWuI/x6l9ygVKj5JO+pLYgz9cvuW1h
OEwqs/Ifl7ZY1NjvNIS5+ZiLI/+0kWi+fcMlXAnZQDdJ6nX2gXk6LpYYefJ0
Y9u/59RnOv6bnuPpwod5CaR+YvJ5wOD8K/z18lvxg3/PjVX23mF9h/4nuce2
k1pJ8/Cl2PFPuDy9si+WXF+vpJOc9wVvrNoS4yr8775qZATNIs4PM4yfrr4m
97dtRH5Jli0IHbh6vNrIeGgwr/6afhiCc6FXLrCROq/y4vEK0zDcM2HOL0HG
b886G5e3vBGoJFa5RebffVWxoT2nqiKxdz2v8AEy/g9a2YbH7L5hu9EubQYy
P5M9zz46ikXj05iohAoyn7NHsmbpu2PwlYv/vn/3VWVjttK3ysVj5EcPZw+S
U5W43p4VpCag4Fq48TzpHxm709KxF5Nw2Vr10TmSW+8ZpWHO32RMmT5EFzVF
wFldNvqk1hQU4t/wOm2C9EO1Q41vQirKh385+X2MzF9xvZucfjrKDC0e0Bwi
wCRwJr8yLwv/VO+97tVBwMbG7ezDL7OxvzfVnbeNPKfcbHhCu5iDROL+wTck
p7LGU0Ib+3Nx9eUB7sPkuTD6TKdnMT2ixEaFFE/y3PgWry5q1CAG3jut/ZTk
VIH1GWfuXChAoQwVGTWSU0czjfcXbC3ES+uVQjMyyHPo5LL6XHgR0iTuGgRH
E1B65fTU8IZi7JS0/zNKcmpH3d34yrvF6CKU08kXRoDHqn7Ug8MlSPdM9vkF
8hzs+2MkUqCwFJ+KOHnnupPnku2ZT8a6KlCyjKpCGBKgFV56blWhEmX4pAJX
Se68re2nSx9eiQPVkrd+k9xJX1ms02dShU/TaZqpl0ju30K3VD9bja4zG4+B
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
2AacD9yXw9hOw9uR4WsaLI342CiMzy+PhrGnlROP1DZiw+6DhJgLDbf7cx/u
v9iMNiLvnh5aoyLkTf8vpQFa/k4FSda/pTjugFr17b9mCV5ks33Wv/exS2dt
6+2/7DGkHFCy1r9K2bTvTdftv8DwT9NUG9e/MA00yvqt7b/IHDTrhuzXv6j9
srcKV+2/5EWqg2qL2b9zQkZtxkvtv+Eo8drvvtm/rJrAhGtA7b9FQsdRYfLZ
v8W+jPxxKe2/1TpS/wdZ2r+LpkEJcfrsv07aqAVgJdu/JH3gnT+Y7L+Bq/VR
GLrcv8yyzLOVi+y/BTHlJk3s3L89fv+/1X7sv/NucKdrHt2/qg+p4hNl7L88
tKQQZYLdvzMe1GiJMOy/gXlgTEVJ3r/Q2RduYsPrv09ek+qZ0t+/mA6Kqly1
67/rSV6+qwHgv3uCpYJBp+u/F+HkK/4Z4L8U+Xcxy4rrv8pfNal9SuC/OtyD
vt9Q67/9XH0h5argv+zSxAwwQuu/qEx5At/C4L9KmJlPazPrv/eMvvLL2uC/
Ucep4KIV67+0P0y3fgrhvypQ40WfBuu/1HvBZkQi4b8v2azNhvfqv6622dv8
OeG/8tetg1no6r/sukQEqFHhvz3fnXMX2eq/9JO8zUVp4b+WQ6/T
       "]]},
     Annotation[#, "Charting`Private`Tag$47277#1"]& ]}, {}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"x\"", TraditionalForm], 
    FormBox["\"y\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  AxesStyle->{{Medium, 
     GrayLevel[0]}, {Medium, 
     GrayLevel[0]}},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->Medium,
  LabelStyle->GrayLevel[0],
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotLabel->FormBox[
   "\"Trajet\[OAcute]ria de uma part\[IAcute]cula sob a\[CCedilla]\[ATilde]o \
de corpo central (caso MCU)\"", TraditionalForm],
  PlotRange->{{-0.9999979304650799, 1.}, {-0.9999959069111305, 
   0.9999984943479926}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.874278028114292*^9, 3.8742786963144183`*^9, 
  3.8742787933683743`*^9, 3.8742790298394127`*^9, 3.8745984343431387`*^9, 
  3.8745990298020535`*^9, 3.8746000009948072`*^9, 3.874600533678649*^9, 
  3.8746006108250914`*^9, 3.8746007578653083`*^9},
 CellLabel->
  "Out[540]=",ExpressionUUID->"d1ceac0f-f087-4fca-b7d5-bfb370e1e96b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Ainda", " ", "para", " ", "\[Beta]"}], "=", "3"}], ",", " ", 
    RowBox[{
    "fa\[CCedilla]o", " ", "uma", " ", "invetiga\[CCedilla]\[ATilde]o", " ", 
     "de", " ", "trajet\[OAcute]ria", " ", "para", " ", "velocidades", " ", 
     "iniciais", " ", "distintas"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{" ", "0", ")"}], " ", 
     RowBox[{"x", "[", "0", "]"}]}], "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "a"}], " ", "/", " ", 
      RowBox[{"y", "[", "0", "]"}]}], "=", " ", 
     RowBox[{
      RowBox[{"0", " ", "/", " ", 
       RowBox[{
        SubscriptBox["v", "x"], "[", "0", "]"}]}], "=", " ", 
      RowBox[{
       RowBox[{"0", " ", "/", " ", 
        RowBox[{
         SubscriptBox["v", "y"], "[", "0", "]"}]}], "=", " ", 
       RowBox[{
        SqrtBox["5"], 
        SqrtBox[
         FractionBox["k", 
          RowBox[{"m", " ", "a"}]]]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sols", "=", 
     RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eqx", ",", "eqy", ",", 
          RowBox[{
           RowBox[{"x", "[", "0", "]"}], "\[Equal]", " ", 
           RowBox[{"-", "a"}]}], ",", 
          RowBox[{
           RowBox[{"y", "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "  ", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "  ", 
           RowBox[{
            SqrtBox["5"], 
            SqrtBox[
             FractionBox["k", 
              RowBox[{"m", " ", "a"}]]]}]}]}], "}"}], "/.", "valuesAux"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"curva0", "=", 
     RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "sols"}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Trajet\[OAcute]ria de uma part\[IAcute]cula sob a\[CCedilla]\
\[ATilde]o de corpo central\>\""}], "\[IndentingNewLine]", ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "Blue", "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<x[0] = -a, y[0] = 0, \!\(\*SubscriptBox[\(v\), \(x\)]\)[0] \
= 0, \!\(\*SubscriptBox[\(v\), \(y\)]\)[0] = \
\!\(\*SqrtBox[\(5\)]\)\!\(\*SqrtBox[\(k/\((m\\\ a)\)\)]\)\>\"", "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{" ", "1", ")"}], " ", 
      RowBox[{"x", "[", "0", "]"}]}], "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "a"}], " ", "/", " ", 
       RowBox[{"y", "[", "0", "]"}]}], "=", " ", 
      RowBox[{
       RowBox[{"0", " ", "/", " ", 
        RowBox[{
         SubscriptBox["v", "x"], "[", "0", "]"}]}], "=", " ", 
       RowBox[{
        RowBox[{
         SqrtBox["2"], 
         RowBox[{
          SqrtBox[
           FractionBox["k", 
            RowBox[{"m", " ", "a"}]]], " ", "/", " ", 
          RowBox[{
           SubscriptBox["v", "y"], "[", "0", "]"}]}]}], "=", " ", 
        RowBox[{
         SqrtBox["3"], 
         SqrtBox[
          FractionBox["k", 
           RowBox[{"m", " ", "a"}]]]}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sols", "=", 
     RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eqx", ",", "eqy", ",", 
          RowBox[{
           RowBox[{"x", "[", "0", "]"}], "\[Equal]", " ", 
           RowBox[{"-", "a"}]}], ",", 
          RowBox[{
           RowBox[{"y", "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "  ", 
           RowBox[{
            SqrtBox["2"], 
            SqrtBox[
             FractionBox["k", 
              RowBox[{"m", " ", "a"}]]]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", " ", 
           RowBox[{
            SqrtBox["3"], 
            SqrtBox[
             FractionBox["k", 
              RowBox[{"m", " ", "a"}]]]}]}]}], "}"}], "/.", "valuesAux"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"curva1", "=", 
     RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "sols"}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Trajet\[OAcute]ria de uma part\[IAcute]cula sob a\[CCedilla]\
\[ATilde]o de corpo central\>\""}], "\[IndentingNewLine]", ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "Green", "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<x[0] = -a, y[0] = 0, \!\(\*SubscriptBox[\(v\), \(x\)]\)[0] \
= \!\(\*SqrtBox[\(2\)]\)\!\(\*SqrtBox[\(k/\((m\\\ a)\)\)]\), \
\!\(\*SubscriptBox[\(v\), \(y\)]\)[0] = \
\!\(\*SqrtBox[\(3\)]\)\!\(\*SqrtBox[\(k/\((m\\\ a)\)\)]\)\>\"", "}"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{" ", "2", ")"}], " ", 
      RowBox[{"x", "[", "0", "]"}]}], "=", " ", 
     RowBox[{
      RowBox[{"a", " ", "/", " ", 
       RowBox[{"y", "[", "0", "]"}]}], "=", " ", 
      RowBox[{
       RowBox[{"0", " ", "/", " ", 
        RowBox[{
         SubscriptBox["v", "x"], "[", "0", "]"}]}], "=", " ", 
       RowBox[{
        RowBox[{
         SqrtBox[
          RowBox[{"k", "/", 
           RowBox[{"(", 
            RowBox[{"m", " ", "a"}], ")"}]}]], " ", "/", " ", 
         RowBox[{
          SubscriptBox["v", "y"], "[", "0", "]"}]}], "=", " ", 
        RowBox[{"-", 
         SqrtBox[
          RowBox[{"k", "/", 
           RowBox[{"(", 
            RowBox[{"m", " ", "a"}], ")"}]}]]}]}]}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sols", "=", 
     RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eqx", ",", "eqy", ",", 
          RowBox[{
           RowBox[{"x", "[", "0", "]"}], "\[Equal]", " ", "a"}], ",", 
          RowBox[{
           RowBox[{"y", "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "  ", 
           SqrtBox[
            FractionBox["k", 
             RowBox[{"m", " ", "a"}]]]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "  ", 
           RowBox[{"-", 
            SqrtBox[
             FractionBox["k", 
              RowBox[{"m", " ", "a"}]]]}]}]}], "}"}], "/.", "valuesAux"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"curva2", "=", 
     RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "sols"}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "10"}], "}"}], "\[IndentingNewLine]", ",", 
       RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Trajet\[OAcute]ria de uma part\[IAcute]cula sob a\[CCedilla]\
\[ATilde]o de corpo central\>\""}], "\[IndentingNewLine]", ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "Red", "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<x[0] = a, y[0] = 0, \!\(\*SubscriptBox[\(v\), \(x\)]\)[0] = \
\!\(\*SqrtBox[\(k/\((m\\\ a)\)\)]\), \!\(\*SubscriptBox[\(v\), \(y\)]\)[0] = \
-\!\(\*SqrtBox[\(k/\((m\\\ a)\)\)]\)\>\"", "}"}]}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{" ", "3", ")"}], " ", 
      RowBox[{"x", "[", "0", "]"}]}], "=", " ", 
     RowBox[{
      RowBox[{"a", " ", "/", " ", 
       RowBox[{"y", "[", "0", "]"}]}], "=", " ", 
      RowBox[{
       RowBox[{"0", " ", "/", " ", 
        RowBox[{
         SubscriptBox["v", "x"], "[", "0", "]"}]}], "=", " ", 
       RowBox[{
        RowBox[{"0", " ", "/", " ", 
         RowBox[{
          SubscriptBox["v", "y"], "[", "0", "]"}]}], "=", " ", 
        RowBox[{
         FractionBox["1.42", 
          SqrtBox["2"]], 
         SqrtBox[
          RowBox[{"k", "/", 
           RowBox[{"(", 
            RowBox[{"m", " ", "a"}], ")"}]}]]}]}]}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sols", "=", 
     RowBox[{"NDSolve", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"eqx", ",", "eqy", ",", 
          RowBox[{
           RowBox[{"x", "[", "0", "]"}], "\[Equal]", " ", "a"}], ",", 
          RowBox[{
           RowBox[{"y", "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", " ", "0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "  ", 
           RowBox[{
            FractionBox["1.42", 
             SqrtBox["2"]], 
            SqrtBox[
             FractionBox["k", 
              RowBox[{"m", " ", "a"}]]]}]}]}], "}"}], "/.", "valuesAux"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], ",", 
         RowBox[{"y", "[", "t", "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "100"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"curva3", "=", 
     RowBox[{"ParametricPlot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Evaluate", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"x", "[", "t", "]"}], ",", 
           RowBox[{"y", "[", "t", "]"}]}], "}"}], "/.", "sols"}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", "100"}], "}"}], "\[IndentingNewLine]", 
       ",", 
       RowBox[{"Evaluate", "[", "visual", "]"}], "\[IndentingNewLine]", ",", 
       RowBox[{
       "PlotLabel", "\[Rule]", 
        "\"\<Trajet\[OAcute]ria de uma part\[IAcute]cula sob a\[CCedilla]\
\[ATilde]o de corpo central\>\""}], "\[IndentingNewLine]", ",", 
       RowBox[{"AxesLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"\"\<x\>\"", ",", "\"\<y\>\""}], "}"}]}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"PlotStyle", "\[Rule]", 
        RowBox[{"{", "Orange", "}"}]}], "\[IndentingNewLine]", ",", 
       RowBox[{"PlotLegends", "\[Rule]", 
        RowBox[{
        "{", "\"\<x[0] = a, y[0] = 0, \!\(\*SubscriptBox[\(v\), \(x\)]\)[0] = \
0, \!\(\*SubscriptBox[\(v\), \(y\)]\)[0] = \
(1.42/\!\(\*SqrtBox[\(2\)]\))\!\(\*SqrtBox[\(k/\((m\\\ a)\)\)]\)\>\"", 
         "}"}]}]}], "\[IndentingNewLine]", "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8742780516080112`*^9, 3.874278085163177*^9}, {
   3.8742782438170013`*^9, 3.874278396141102*^9}, {3.8742784543075213`*^9, 
   3.8742785872449827`*^9}, {3.8742788112887807`*^9, 3.874278937463996*^9}, 
   3.874278985418852*^9, {3.8742791607670937`*^9, 3.8742791746519537`*^9}, {
   3.874598790260838*^9, 3.87459897926782*^9}, {3.8745990389624295`*^9, 
   3.874599196490627*^9}, {3.874599389623763*^9, 3.8745994336166835`*^9}, {
   3.87459946524016*^9, 3.8745994921193743`*^9}, {3.8745995578998194`*^9, 
   3.8745995581536427`*^9}, {3.8745997101640882`*^9, 3.874599761383439*^9}, {
   3.8746008476546793`*^9, 3.874601026772838*^9}},
 CellLabel->
  "In[559]:=",ExpressionUUID->"ae6f567b-9cd0-4534-b051-6f2243aab4d5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
  "curva0", ",", "\[IndentingNewLine]", "curva1", ",", "\[IndentingNewLine]", 
   "curva2", ",", "\[IndentingNewLine]", "curva3", ",", "\[IndentingNewLine]", 
   RowBox[{"PlotRange", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.4"}], ",", "2.4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "2.4"}], ",", "2.4"}], "}"}]}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.874278400319139*^9, 3.874278418012243*^9}, {
   3.874278951287013*^9, 3.8742789679585695`*^9}, {3.8742790362844076`*^9, 
   3.874279074313531*^9}, {3.8745989739222665`*^9, 3.8745989761895514`*^9}, 
   3.874599054173854*^9, {3.874599168887854*^9, 3.8745991932858706`*^9}, {
   3.874599561753441*^9, 3.8745995848563166`*^9}, {3.874599650936307*^9, 
   3.874599692936734*^9}, 3.8745997849960637`*^9, 3.8745999344951086`*^9},
 CellLabel->
  "In[558]:=",ExpressionUUID->"6194ed76-e0bb-486c-bc50-92f5348e9d1d"],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1: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
           "]]}, 
         Annotation[#, "Charting`Private`Tag$47823#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0, 1, 0]], 
          LineBox[CompressedData["
1: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
MQcJqInix8efIeH7oKbn/UME/AeiqlqS
           "]]}, 
         Annotation[#, "Charting`Private`Tag$47880#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[1, 0, 0]], 
          LineBox[CompressedData["
1:eJw1y30wlAkcB/Blsd7bXWuXZ8vuI50ib7fpamien5F3rtbrFiJdLZep5NpK
HK4rmyi6FJFKVyKa5jZ3KjfP75q8nQvpcFlHXhI6kc5LSOfm5r4z3/l+//mQ
MfsDd2syGIyApf67/2WC+v+tjE3SPm04Qa31iLV7JYqjh79+5mNoPkGlKxMy
ekVH6YSZUfVbpwlqU70q7hfRKVo+tDHPb9cEZcOalfmLCug+wo7j/3jJR7Hd
cleU0d17d37UT3tLjb5QnNsuuE8nn6pPt+ufpKwdxhIFzEY6pDzRk3dpiro/
GBRV3vqcVgV3sdOGZ6jyuRYThw/9dEL+nj4la45aOXlw55XOYbokuxZ3bVyg
BFWxY/6CcTrNsrRZJVmk1uvf7vWKn6RtQ5rs+asYsO3W4S/fpE/RWeaprrxP
NGBw6Hos+5tZmi5unrfkakK90jozwmeejjTe9H7BmAkGUmfJlNciva5Pz001
ywRto6vqvzMYONDn0aHXrQWc0geVigENvHuzxZTzVBuOvYp7LwxnYlZbiFP8
PR04ma/QTKnWwmUHC5X3yljgwix3sfpUB0/WJ7p+U6AL4sAFx6nrLKxfLd2y
+4geCALYvuIFXaRsRan74vQhcFrY8NMBfXwhaXj5u48B7LO+WjncZIBjjV7S
A66GsD7+JvesuxGGXwhlrrIxgra5QvselTFiXb70BMsYOtUZbkptNhY/kg/Y
zhiD1Wt1YgzNxtfHvuAUdywDhsvk4s/xHEy5XJFSJWPDY2rNu2w+F8fq7tm6
t7DBry6y51ozFzfU53g2buIATT8P8E0yweCPtNPhKg6cM6u+u34dD/PeXFJ0
23DB6sEOz2ujPNTI96a88rkQJN8tv3PeFG0nnB3UxiZw6Q/8nBHAR3VngyIp
xQQCZGqr+Vk+Xny8MNI9YgI7qvyXp18TYNmQSDcuigdhikwNf5kZNhUcmGY9
4cEq1aR7g6Y5FikiNrS6mwJZUvpM+dAcm6bbu+78YAp723M6FuUEhh7y7Q4V
8WHz0acjOhwh7mMFOa3O40NaRI1BUIMQZV01t3hMAaSZPXHenrgc+/U8DW2S
BJA9nNPy/doVGNYQ+VJ/XABV4dKm4/0rsGaw9YZ+hBm044LUMssCZ3fsEUva
zKCgwuIlc7MIf02VBySDOUR2rLQvHRfhTLQy+3yFOYiPFxa+9ROjVkyWRztJ
QN6WzHHHUjEGnN/rvPEsAbwRh9uBC2L884TfZTKXgBu+0bXNH8QoMW3Q0v+O
gNtCaa/vRzHKEi62dV0gINr7K667JoluXblxycVLPuHRIYkuiautDU7QlQR8
yzvtyOORaPPo4UGP3whIDXE+3G5LoolPVLNdMwElSTmnpHYkaqeWrOG3ErBz
uLLwiT2Je2S6vUPPCGjtdKBrnUgsign2UKoJcCuSMn/8jMSMp5qMplECXkWZ
p11wJzEysyJE9RcBtR1XznA9SLyZMFNe+IaAtSkjRWc8Sey3SQiOnyRgPLeu
+qQPiVf6p0uM5giQxJeNKbaQWFNWMTU1T0DYhO/c5NYlH6nl3fOBgCP8uzr7
A0kcHC14fUdDCI3ptRbyEBJV7zpdLzKFkDxwyGYglER37+rsVG0hrBOPOkfJ
SNzKcOmRs4Tg6Gnppt5GYq4k2n6rnhAqdln4h4WT+A+FqC/m
           "]]}, 
         Annotation[#, "Charting`Private`Tag$47937#1"]& ]}}, {}}, {{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[1, 0.5, 0]], 
          LineBox[CompressedData["
1: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
nMnmc/l7ZoLUJMj/AVuOVuo=
           "]]}, Annotation[#, "Charting`Private`Tag$47994#1"]& ]}}, {}}}, {
    PlotRange -> {{-2.4, 2.4}, {-2.4, 2.4}}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.05], 
        Scaled[0.05]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, Axes -> {True, True}, AxesLabel -> {
       FormBox["\"x\"", TraditionalForm], 
       FormBox["\"y\"", TraditionalForm]}, AxesOrigin -> {0, 0}, 
     AxesStyle -> {{Medium, 
        GrayLevel[0]}, {Medium, 
        GrayLevel[0]}}, DisplayFunction :> Identity, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Medium, LabelStyle -> GrayLevel[0], 
     Method -> {
      "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "ScalingFunctions" -> None}, PlotLabel -> 
     FormBox["\"Trajet\[OAcute]ria de uma part\[IAcute]cula sob a\[CCedilla]\
\[ATilde]o de corpo central\"", TraditionalForm], 
     PlotRange -> {{-1., 2.5870295837997968`}, {0., 19.857171464122924`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {
       Scaled[0.02], 
       Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
    TagBox[
     GridBox[{{
        FormBox[
         TemplateBox[{
          "\"x[0] = -a, y[0] = 0, \\!\\(\\*SubscriptBox[\\(v\\), \
\\(x\\)]\\)[0] = , \\!\\(\\*SubscriptBox[\\(v\\), \\(y\\)]\\)[0] = \
\\!\\(\\*SqrtBox[\\(5\\)]\\)\\!\\(\\*SqrtBox[\\(k/\\((m\\\\ a)\\)\\)]\\)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 0, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0., 0.6666666666666666], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "0", ",", "1"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 0, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 0, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"x[0] = -a, y[0] = 0, \\!\\(\\*SubscriptBox[\\(v\\), \
\\(x\\)]\\)[0] = \\!\\(\\*SqrtBox[\\(2\\)]\\)\\!\\(\\*SqrtBox[\\(k/\\((m\\\\ \
a)\\)\\)]\\), \\!\\(\\*SubscriptBox[\\(v\\), \\(y\\)]\\)[0] = \
\\!\\(\\*SqrtBox[\\(3\\)]\\)\\!\\(\\*SqrtBox[\\(k/\\((m\\\\ a)\\)\\)]\\)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 1, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[0, 1, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0, 1, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0., 0.6666666666666666, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"0", ",", "1", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0, 1, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0, 1, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"x[0] = a, y[0] = 0, \\!\\(\\*SubscriptBox[\\(v\\), \
\\(x\\)]\\)[0] = \\!\\(\\*SqrtBox[\\(k/\\((m\\\\ a)\\)\\)]\\), \
\\!\\(\\*SubscriptBox[\\(v\\), \\(y\\)]\\)[0] = \
-\\!\\(\\*SqrtBox[\\(k/\\((m\\\\ a)\\)\\)]\\)\""}, "LineLegend", 
          DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> RGBColor[0.6666666666666666, 0., 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}, {
        FormBox[
         TemplateBox[{
          "\"x[0] = a, y[0] = 0, \\!\\(\\*SubscriptBox[\\(v\\), \
\\(x\\)]\\)[0] = 0, \\!\\(\\*SubscriptBox[\\(v\\), \\(y\\)]\\)[0] = (1.42/\\!\
\\(\\*SqrtBox[\\(2\\)]\\))\\!\\(\\*SqrtBox[\\(k/\\((m\\\\ a)\\)\\)]\\)\""}, 
          "LineLegend", DisplayFunction -> (StyleBox[
            StyleBox[
             PaneBox[
              TagBox[
               GridBox[{{
                  TagBox[
                   GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0.5, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    PointSize[0.5], 
                    EdgeForm[None], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    FaceForm[
                    Opacity[0.3]], 
                    RGBColor[1, 0.5, 0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
               "Grid"], Alignment -> Left, AppearanceElements -> None, 
              ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
              "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             GrayLevel[0], FontFamily -> "Arial"}, Background -> Automatic, 
            StripOnInput -> False]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{"Directive", "[", 
                   RowBox[{
                    RowBox[{"EdgeForm", "[", "None", "]"}], ",", 
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"FaceForm", "[", 
                    RowBox[{"Opacity", "[", "0.3`", "]"}], "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[1, 0.5, 0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> 
                    RGBColor[0.6666666666666666, 0.33333333333333337`, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"RGBColor", "[", 
                    RowBox[{"1", ",", "0.5`", ",", "0"}], "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[1, 0.5, 0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[1, 0.5, 0], Editable -> False, Selectable -> 
                    False]}], "]"}], "}"}], ",", 
               RowBox[{"{", #, "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 InterpretationBox[
                  ButtonBox[
                   TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                   BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                   ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                   Automatic, Method -> "Preemptive"], 
                  GrayLevel[0], Editable -> False, Selectable -> False]}], 
               ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm]}}, 
      GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> False, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
      GridBoxSpacings -> {"Columns" -> {{0}}}], "Grid"], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.8742784188933773`*^9, 3.874278436777374*^9}, 
   3.87427850857294*^9, {3.8742785411605835`*^9, 3.8742785919535737`*^9}, 
   3.8742787940136957`*^9, {3.874278942076312*^9, 3.8742789684073243`*^9}, {
   3.8742790300181756`*^9, 3.8742790749995756`*^9}, 3.87427917752592*^9, 
   3.8745984344836407`*^9, {3.8745990301895037`*^9, 3.8745991317126527`*^9}, {
   3.87459917622445*^9, 3.8745991874296913`*^9}, {3.874599660718998*^9, 
   3.8745996933330355`*^9}, {3.8745997441674213`*^9, 
   3.8745997638802366`*^9}, {3.874599925688763*^9, 3.874599934858078*^9}, 
   3.8746000012593813`*^9, 3.874600533969639*^9, 3.8746006110078516`*^9, 
   3.8746007581086917`*^9, 3.8746010065917006`*^9},
 CellLabel->
  "Out[558]=",ExpressionUUID->"721ffa2b-c0e6-407e-90bf-80ed28face9a"]
}, Open  ]],

Cell["\<\
No caso de velocidades iniciais que n\[ATilde]o satisfazem as \
condi\[CCedilla]\[OTilde]es de movimento circular/el\[IAcute]ptico iniciais, \
a trajet\[OAcute]ria n\[ATilde]o se fecha. Em particular, para as escolhas de \
velocidade inicial feitas nessa atividade, a part\[IAcute]cula deixa o campo \
de atua\[CCedilla]\[ATilde]o da massa central e passa a se mover at\[EAcute] \
o infinito (tornando-se, portanto, uma part\[IAcute]cula livre).\
\>", "Text",
 CellChangeTimes->{{3.874278600234828*^9, 3.8742786340037045`*^9}, 
   3.8742787124645166`*^9, {3.8742790882318106`*^9, 3.874279154630134*^9}, {
   3.874279187751501*^9, 
   3.874279252822787*^9}},ExpressionUUID->"052cf095-857a-4dc0-abdf-\
06905004568b"]
},
WindowSize->{1350, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 216, 4, 31, "Item",ExpressionUUID->"aa7af4a6-95d2-403d-8431-5211de700154"],
Cell[777, 26, 318, 7, 28, "Input",ExpressionUUID->"07abc4b7-a63f-415f-9bdf-4c3441c758d1"],
Cell[1098, 35, 2633, 73, 195, "Input",ExpressionUUID->"bb3dc15e-c166-49ee-9b6a-3e854757477f"],
Cell[3734, 110, 574, 12, 28, "Input",ExpressionUUID->"fe45a2d7-bad3-4b22-a876-af4be4e95ac3"],
Cell[CellGroupData[{
Cell[4333, 126, 473, 13, 48, "Input",ExpressionUUID->"71010df3-032e-4b8d-b94e-f6f02634d382"],
Cell[4809, 141, 3886, 112, 98, "Output",ExpressionUUID->"4f5fff30-4958-4e29-a070-e2895877789d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8732, 258, 2875, 70, 476, "Input",ExpressionUUID->"db440d23-8374-463c-8184-870976de4685"],
Cell[11610, 330, 76681, 1319, 248, "Output",ExpressionUUID->"72f144cd-f75c-4819-9c9e-b19adffc23f2"]
}, Open  ]],
Cell[88306, 1652, 556, 11, 78, "Text",ExpressionUUID->"a5c16a25-87f0-4ca9-9ecb-4367e7ad4cbe"],
Cell[CellGroupData[{
Cell[88887, 1667, 1707, 43, 268, "Input",ExpressionUUID->"c694be7d-7dcd-4a01-8a99-1aa41ba72a81"],
Cell[90597, 1712, 62701, 1092, 248, "Output",ExpressionUUID->"fef9b261-993c-43df-be8e-62650defdc90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[153335, 2809, 1646, 38, 286, "Input",ExpressionUUID->"82d194d0-6317-4b77-b15e-f3b8f01a00b4"],
Cell[154984, 2849, 49270, 852, 251, "Output",ExpressionUUID->"58b5c359-90ae-4bcb-85ff-78ce261d18a7"]
}, Open  ]],
Cell[204269, 3704, 2469, 46, 276, "Text",ExpressionUUID->"95c5ddfc-c53a-4199-b2b6-c64c3bdc1b47"],
Cell[CellGroupData[{
Cell[206763, 3754, 1738, 44, 289, "Input",ExpressionUUID->"8e411f9c-2637-4a98-853e-232f9050c8e2"],
Cell[208504, 3800, 85859, 1471, 248, "Output",ExpressionUUID->"ed561889-f889-43cc-8f22-f33fbb46304a"]
}, Open  ]],
Cell[294378, 5274, 2082, 32, 210, "Text",ExpressionUUID->"8cca2b8a-10f0-41e4-b44c-08783052fca1"],
Cell[CellGroupData[{
Cell[296485, 5310, 1847, 48, 289, "Input",ExpressionUUID->"ceb1e3ca-254b-4512-86e6-2efd24df6a3e"],
Cell[298335, 5360, 27741, 500, 228, "Output",ExpressionUUID->"60eb6be5-a46a-4493-bdab-ebca5b1d9810"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326113, 5865, 2690, 70, 198, "Input",ExpressionUUID->"6779eee7-1d6d-4cca-b646-c76eaeaa9d8f"],
Cell[328806, 5937, 821, 17, 32, "Output",ExpressionUUID->"3c658e2c-fa0f-4aae-b7a1-cd81202b6685"]
}, Open  ]],
Cell[329642, 5957, 165, 3, 31, "Item",ExpressionUUID->"3c75a6d2-d7d3-474e-abda-736f71423f87"],
Cell[329810, 5962, 348, 8, 28, "Input",ExpressionUUID->"ad076657-8c4c-461d-8605-40621f7a776f"],
Cell[CellGroupData[{
Cell[330183, 5974, 1340, 34, 140, "Input",ExpressionUUID->"f164da05-ec1d-4968-a2c8-3185196f75a2"],
Cell[331526, 6010, 1523, 42, 52, "Output",ExpressionUUID->"578d1644-a724-4abf-a2f2-76897d8569f4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333086, 6057, 543, 13, 64, "Input",ExpressionUUID->"9540502e-baa0-4d89-9814-8f4f2171250e"],
Cell[333632, 6072, 625, 11, 32, "Output",ExpressionUUID->"72171b81-28a9-4b32-99cf-f48bff016179"]
}, Open  ]],
Cell[334272, 6086, 879, 26, 36, "Text",ExpressionUUID->"3283a792-5381-409c-82f6-3e4d4521d3d2"],
Cell[CellGroupData[{
Cell[335176, 6116, 2617, 62, 627, "Input",ExpressionUUID->"f75a5d0b-ee75-4eae-a617-ab08d738fedf"],
Cell[337796, 6180, 3864, 86, 257, "Output",ExpressionUUID->"63fbf0f9-9f26-41a4-b3f7-acb97154d324"]
}, Open  ]],
Cell[341675, 6269, 214, 4, 31, "Item",ExpressionUUID->"b5f6544d-136d-4e80-8517-da979761c995"],
Cell[341892, 6275, 1863, 54, 190, "Input",ExpressionUUID->"2a546c91-4d86-4629-8db8-c4524832fb3c"],
Cell[343758, 6331, 332, 8, 28, "Input",ExpressionUUID->"9de903c0-9687-4dff-b619-994229740ea8"],
Cell[344093, 6341, 3367, 93, 297, "Text",ExpressionUUID->"a4c4044d-1719-4411-9f81-8bab3352a4b0"],
Cell[CellGroupData[{
Cell[347485, 6438, 3750, 86, 442, "Input",ExpressionUUID->"f799f147-8014-4442-adff-13888f9569f1"],
Cell[351238, 6526, 25216, 430, 388, "Output",ExpressionUUID->"e1b83eb9-79bc-460b-8884-51cbe0f7544a"]
}, Open  ]],
Cell[376469, 6959, 18365, 493, 2390, "Input",ExpressionUUID->"085ae5a2-37f0-4df3-904c-29e904ab319c"],
Cell[CellGroupData[{
Cell[394859, 7456, 817, 14, 198, "Input",ExpressionUUID->"4d2c040f-2f85-455d-9620-2b18c328d632"],
Cell[395679, 7472, 150561, 2621, 397, "Output",ExpressionUUID->"913feb32-99ef-49e2-8ad0-04be9adde046"]
}, Open  ]],
Cell[546255, 10096, 342, 8, 28, "Input",ExpressionUUID->"65257e18-0503-40c2-9090-8ffb0c90c2cb"],
Cell[546600, 10106, 776, 22, 107, "Text",ExpressionUUID->"ee945064-3d03-4cd9-8338-7ae68379a7ff"],
Cell[CellGroupData[{
Cell[547401, 10132, 2795, 72, 404, "Input",ExpressionUUID->"69bbad0c-14af-4f12-b84b-381f6d0a0674"],
Cell[550199, 10206, 24469, 420, 388, "Output",ExpressionUUID->"d1ceac0f-f087-4fca-b7d5-bfb370e1e96b"]
}, Open  ]],
Cell[574683, 10629, 14043, 372, 2033, "Input",ExpressionUUID->"ae6f567b-9cd0-4534-b051-6f2243aab4d5"],
Cell[CellGroupData[{
Cell[588751, 11005, 1060, 22, 179, "Input",ExpressionUUID->"6194ed76-e0bb-486c-bc50-92f5348e9d1d"],
Cell[589814, 11029, 59791, 1105, 402, "Output",ExpressionUUID->"721ffa2b-c0e6-407e-90bf-80ed28face9a"]
}, Open  ]],
Cell[649620, 12137, 724, 12, 56, "Text",ExpressionUUID->"052cf095-857a-4dc0-abdf-06905004568b"]
}
]
*)

